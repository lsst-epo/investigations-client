/* eslint-disable */
import type { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string; }
  String: { input: string; output: string; }
  Boolean: { input: boolean; output: boolean; }
  Int: { input: number; output: number; }
  Float: { input: number; output: number; }
  /** The `DateTime` scalar type represents a point in time. */
  DateTime: { input: any; output: any; }
  /** The `Number` scalar type represents a number that can be a float, an integer or a null value. */
  Number: { input: any; output: any; }
  /** The `QueryArgument` scalar type represents a value to be using in Craft element queries. It can be an integer, a string, or a boolean value. */
  QueryArgument: { input: any; output: any; }
};

export type Address = AddressInterface & ElementInterface & {
  __typename?: 'Address';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** First line of the address */
  addressLine1: Maybe<Scalars['String']['output']>;
  /** Second line of the address */
  addressLine2: Maybe<Scalars['String']['output']>;
  /** Administrative area. */
  administrativeArea: Maybe<Scalars['String']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** Two-letter country code */
  countryCode: Scalars['String']['output'];
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Dependent locality */
  dependentLocality: Maybe<Scalars['String']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The first name on the address. */
  firstName: Maybe<Scalars['String']['output']>;
  /** The full name on the address. */
  fullName: Maybe<Scalars['String']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The last name on the address. */
  lastName: Maybe<Scalars['String']['output']>;
  /** Latitude */
  latitude: Maybe<Scalars['String']['output']>;
  /** Locality */
  locality: Maybe<Scalars['String']['output']>;
  /** Longitude */
  longitude: Maybe<Scalars['String']['output']>;
  /** Organization name */
  organization: Maybe<Scalars['String']['output']>;
  /** Organization tax ID */
  organizationTaxId: Maybe<Scalars['String']['output']>;
  /** Postal code */
  postalCode: Maybe<Scalars['String']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** Sorting code */
  sortingCode: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type Address_CountArgs = {
  field: Scalars['String']['input'];
};

/** This is the interface implemented by all addresses. */
export type AddressInterface = {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** First line of the address */
  addressLine1: Maybe<Scalars['String']['output']>;
  /** Second line of the address */
  addressLine2: Maybe<Scalars['String']['output']>;
  /** Administrative area. */
  administrativeArea: Maybe<Scalars['String']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** Two-letter country code */
  countryCode: Scalars['String']['output'];
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Dependent locality */
  dependentLocality: Maybe<Scalars['String']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The first name on the address. */
  firstName: Maybe<Scalars['String']['output']>;
  /** The full name on the address. */
  fullName: Maybe<Scalars['String']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The last name on the address. */
  lastName: Maybe<Scalars['String']['output']>;
  /** Latitude */
  latitude: Maybe<Scalars['String']['output']>;
  /** Locality */
  locality: Maybe<Scalars['String']['output']>;
  /** Longitude */
  longitude: Maybe<Scalars['String']['output']>;
  /** Organization name */
  organization: Maybe<Scalars['String']['output']>;
  /** Organization tax ID */
  organizationTaxId: Maybe<Scalars['String']['output']>;
  /** Postal code */
  postalCode: Maybe<Scalars['String']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** Sorting code */
  sortingCode: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


/** This is the interface implemented by all addresses. */
export type AddressInterface_CountArgs = {
  field: Scalars['String']['input'];
};

export type AssetCriteriaInput = {
  /** Narrows the query results based on the elements’ creation dates. */
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the assets’ files’ last-modified dates. */
  dateModified: InputMaybe<Scalars['String']['input']>;
  /** Narrows the query results based on the elements’ last-updated dates. */
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the assets’ filenames. */
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Causes the query results to be returned in the order specified by the `id` argument. */
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the folders the assets belong to, per the folders’ IDs. */
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on whether the assets have alternative text. */
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the assets’ image heights. */
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the elements’ IDs. */
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Causes the query results to be returned in reverse order. */
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  /** Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`. */
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the assets’ file kinds. */
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Sets the limit for paginated results. */
  limit: InputMaybe<Scalars['Int']['input']>;
  /** Sets the offset for paginated results. */
  offset: InputMaybe<Scalars['Int']['input']>;
  /** Sets the field the returned elements should be ordered by. */
  orderBy: InputMaybe<Scalars['String']['input']>;
  /** Determines which site should be selected when querying multi-site elements. */
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on a reference string. */
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used. */
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: ["and", ...ids]` should be used instead. */
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to elements that relate to an asset list defined with this argument. */
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a category list defined with this argument. */
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  /** Narrows the query results to elements that relate to an entry list defined with this argument. */
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a tag list defined with this argument. */
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a use list defined with this argument. */
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  /** Narrows the query results to only elements that match a search query. */
  search: InputMaybe<Scalars['String']['input']>;
  /** Determines which site(s) the elements should be queried in. Defaults to the current (requested) site. */
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Determines which site(s) the elements should be queried in. Defaults to the current (requested) site. */
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the unique identifier for an element-site relation. */
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the assets’ file sizes (in bytes). */
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the elements’ slugs. */
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the elements’ titles. */
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the elements’ UIDs. */
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Determines whether only elements with unique IDs should be returned by the query. */
  unique: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the user the assets were uploaded by, per the user’s ID. */
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  /** Narrows the query results based on the elements’ URIs. */
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the volumes the assets belong to, per the volumes’ handles. */
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs. */
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the assets’ image widths. */
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** A list of transform handles to preload. */
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

/** This is the interface implemented by all assets. */
export type AssetInterface = {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Alternative text for the asset. */
  alt: Maybe<Scalars['String']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the asset file was last modified. */
  dateModified: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The file extension for the asset file. */
  extension: Scalars['String']['output'];
  /** The filename of the asset file. */
  filename: Scalars['String']['output'];
  /** The focal point represented as an array with `x` and `y` keys, or null if it’s not an image. */
  focalPoint: Maybe<Array<Maybe<Scalars['Float']['output']>>>;
  /** The ID of the folder that the asset belongs to. */
  folderId: Scalars['Int']['output'];
  /** Returns the file’s format. */
  format: Maybe<Scalars['String']['output']>;
  /** Whether a user-defined focal point is set on the asset. */
  hasFocalPoint: Scalars['Boolean']['output'];
  /** The height in pixels or null if it’s not an image. */
  height: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** An `<img>` tag based on this asset. */
  img: Maybe<Scalars['String']['output']>;
  /** The file kind. */
  kind: Scalars['String']['output'];
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The file’s MIME type, if it can be determined. */
  mimeType: Maybe<Scalars['String']['output']>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<AssetInterface>;
  /** The asset’s path in the volume. */
  path: Scalars['String']['output'];
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<AssetInterface>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The file size in bytes. */
  size: Maybe<Scalars['String']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** Returns a `srcset` attribute value based on the given widths or x-descriptors. */
  srcset: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The user who first added this asset (if known). */
  uploader: Maybe<UserInterface>;
  /** The ID of the user who first added this asset (if known). */
  uploaderId: Maybe<Scalars['Int']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The full URL of the asset. This field accepts the same fields as the `transform` directive. */
  url: Maybe<Scalars['String']['output']>;
  /** The ID of the volume that the asset belongs to. */
  volumeId: Maybe<Scalars['Int']['output']>;
  /** The width in pixels or null if it’s not an image. */
  width: Maybe<Scalars['Int']['output']>;
};


/** This is the interface implemented by all assets. */
export type AssetInterface_CountArgs = {
  field: Scalars['String']['input'];
};


/** This is the interface implemented by all assets. */
export type AssetInterfaceFormatArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};


/** This is the interface implemented by all assets. */
export type AssetInterfaceHeightArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};


/** This is the interface implemented by all assets. */
export type AssetInterfaceNextArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


/** This is the interface implemented by all assets. */
export type AssetInterfacePrevArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


/** This is the interface implemented by all assets. */
export type AssetInterfaceSrcsetArgs = {
  sizes: Array<Scalars['String']['input']>;
};


/** This is the interface implemented by all assets. */
export type AssetInterfaceUploaderArgs = {
  assetUploaders: InputMaybe<Scalars['Boolean']['input']>;
  authors: InputMaybe<Scalars['Boolean']['input']>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  email: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  firstName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  fullName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  group: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasPhoto: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  lastName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  username: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


/** This is the interface implemented by all assets. */
export type AssetInterfaceUrlArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};


/** This is the interface implemented by all assets. */
export type AssetInterfaceWidthArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};

export type Auth = {
  __typename?: 'Auth';
  jwt: Maybe<Scalars['String']['output']>;
  jwtExpiresAt: Maybe<Scalars['Float']['output']>;
  refreshToken: Maybe<Scalars['String']['output']>;
  refreshTokenExpiresAt: Maybe<Scalars['Float']['output']>;
  requiresTwoFactor: Maybe<Scalars['Boolean']['output']>;
  schema: Maybe<Scalars['String']['output']>;
  user: Maybe<UserInterface>;
};

export type CantoAdditionalType = {
  __typename?: 'CantoAdditionalType';
  AltTextEN: Maybe<Scalars['String']['output']>;
  AltTextES: Maybe<Scalars['String']['output']>;
  CaptionEN: Maybe<Scalars['String']['output']>;
  CaptionES: Maybe<Scalars['String']['output']>;
  Credit: Maybe<Scalars['String']['output']>;
  Description: Maybe<Scalars['String']['output']>;
  ID: Maybe<Scalars['String']['output']>;
  MediaConsent: Maybe<Scalars['String']['output']>;
  MetadataVersion: Maybe<Scalars['String']['output']>;
  Publisher: Maybe<Scalars['String']['output']>;
  PublisherID: Maybe<Scalars['String']['output']>;
  SocialMediaDescription: Maybe<Scalars['String']['output']>;
  SocialMediaHandles: Maybe<Scalars['String']['output']>;
  SpatialCoordinateFrame: Maybe<Scalars['String']['output']>;
  SpatialCoordinateSystemProjection: Maybe<Scalars['String']['output']>;
  SpatialReferenceDimension: Maybe<Scalars['String']['output']>;
  SpatialReferencePixel: Maybe<Scalars['String']['output']>;
  SpatialReferenceValue: Maybe<Scalars['String']['output']>;
  SpatialRotation: Maybe<Scalars['String']['output']>;
  SpatialScale: Maybe<Scalars['String']['output']>;
  Title: Maybe<Scalars['String']['output']>;
  TitleEN: Maybe<Scalars['String']['output']>;
  TitleES: Maybe<Scalars['String']['output']>;
  Type: Maybe<Scalars['String']['output']>;
  UploadedBy: Maybe<Scalars['String']['output']>;
  UploaderContact: Maybe<Scalars['String']['output']>;
  UsageTerms: Maybe<Scalars['String']['output']>;
  WebDAMGroupID: Maybe<Scalars['String']['output']>;
  WebDAMMediaType: Maybe<Scalars['String']['output']>;
  WebDAMPublisher: Maybe<Scalars['String']['output']>;
  WebDAMPublisherID: Maybe<Scalars['String']['output']>;
  WebDAMSublocation: Maybe<Scalars['String']['output']>;
};

/** This is the interface implemented by CantoDamAsset. */
export type CantoDamAssetInterface = {
  additional: Maybe<CantoAdditionalType>;
  approvalStatus: Maybe<Scalars['String']['output']>;
  created: Maybe<Scalars['String']['output']>;
  default: Maybe<CantoDefaultType>;
  dpi: Maybe<Scalars['String']['output']>;
  height: Maybe<Scalars['String']['output']>;
  id: Maybe<Scalars['String']['output']>;
  keyword: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  lastUploaded: Maybe<Scalars['String']['output']>;
  md5: Maybe<Scalars['String']['output']>;
  metadata: Maybe<CantoMetadataType>;
  name: Maybe<Scalars['String']['output']>;
  owner: Maybe<Scalars['String']['output']>;
  ownerName: Maybe<Scalars['String']['output']>;
  relatedAlbums: Maybe<Array<Maybe<CantoRelatedAlbumsType>>>;
  scheme: Maybe<Scalars['String']['output']>;
  size: Maybe<Scalars['String']['output']>;
  smartTags: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  tag: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  time: Maybe<Scalars['String']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  url: Maybe<CantoUrlType>;
  versionHistory: Maybe<Array<Maybe<CantoVersionHistoryType>>>;
  width: Maybe<Scalars['String']['output']>;
};

export type CantoDefaultType = {
  __typename?: 'CantoDefaultType';
  Author: Maybe<Scalars['String']['output']>;
  ContentType: Maybe<Scalars['String']['output']>;
  Copyright: Maybe<Scalars['String']['output']>;
  DateCreated: Maybe<Scalars['String']['output']>;
  DateModified: Maybe<Scalars['String']['output']>;
  DateUploaded: Maybe<Scalars['String']['output']>;
  Dimensions: Maybe<Scalars['String']['output']>;
  GPS: Maybe<Scalars['String']['output']>;
  LowJPG: Maybe<Scalars['String']['output']>;
  ModifiedBy: Maybe<Scalars['String']['output']>;
  Name: Maybe<Scalars['String']['output']>;
  Resolution: Maybe<Scalars['String']['output']>;
  Size: Maybe<Scalars['String']['output']>;
  UploadedBy: Maybe<Scalars['String']['output']>;
};

export type CantoMetadataType = {
  __typename?: 'CantoMetadataType';
  AnimationIterations: Maybe<Scalars['String']['output']>;
  AssetDataSizeLong: Maybe<Scalars['String']['output']>;
  BackgroundColor: Maybe<Scalars['String']['output']>;
  BitsPerPixel: Maybe<Scalars['String']['output']>;
  ColorResolutionDepth: Maybe<Scalars['String']['output']>;
  Comment: Maybe<Scalars['String']['output']>;
  CreateDate: Maybe<Scalars['String']['output']>;
  DurationTime: Maybe<Scalars['String']['output']>;
  FileAccessDateTime: Maybe<Scalars['String']['output']>;
  FileInodeChangeDateTime: Maybe<Scalars['String']['output']>;
  FileModificationDateTime: Maybe<Scalars['String']['output']>;
  FileName: Maybe<Scalars['String']['output']>;
  FileType: Maybe<Scalars['String']['output']>;
  FileTypeDetail: Maybe<Scalars['String']['output']>;
  FileTypeExtension: Maybe<Scalars['String']['output']>;
  FinfotoolVersion: Maybe<Scalars['String']['output']>;
  FlightFileExtension: Maybe<Scalars['String']['output']>;
  FlightFileType: Maybe<Scalars['String']['output']>;
  FrameCount: Maybe<Scalars['String']['output']>;
  GIFVersion: Maybe<Scalars['String']['output']>;
  HasColorMap: Maybe<Scalars['String']['output']>;
  ImageHeight: Maybe<Scalars['String']['output']>;
  ImageSize: Maybe<Scalars['String']['output']>;
  ImageWidth: Maybe<Scalars['String']['output']>;
  MIMEType: Maybe<Scalars['String']['output']>;
  Megapixels: Maybe<Scalars['String']['output']>;
  Orientation: Maybe<Scalars['String']['output']>;
  Panoramas: Maybe<Scalars['String']['output']>;
  RSize: Maybe<Scalars['String']['output']>;
  WHRotated: Maybe<Scalars['String']['output']>;
};

export type CantoRelatedAlbumsType = {
  __typename?: 'CantoRelatedAlbumsType';
  dpi: Maybe<Scalars['String']['output']>;
  height: Maybe<Scalars['String']['output']>;
  id: Maybe<Scalars['String']['output']>;
  idPath: Maybe<Scalars['String']['output']>;
  name: Maybe<Scalars['String']['output']>;
  namePath: Maybe<Scalars['String']['output']>;
  schema: Maybe<Scalars['String']['output']>;
  size: Maybe<Scalars['String']['output']>;
  url: Maybe<CantoRelatedAlbumsUrlType>;
  width: Maybe<Scalars['String']['output']>;
};

export type CantoRelatedAlbumsUrlType = {
  __typename?: 'CantoRelatedAlbumsUrlType';
  detail: Maybe<Scalars['String']['output']>;
};

export type CantoUrlType = {
  __typename?: 'CantoUrlType';
  HighJPG: Maybe<Scalars['String']['output']>;
  LowJPG: Maybe<Scalars['String']['output']>;
  PNG: Maybe<Scalars['String']['output']>;
  detail: Maybe<Scalars['String']['output']>;
  directUrlOriginal: Maybe<Scalars['String']['output']>;
  directUrlPreview: Maybe<Scalars['String']['output']>;
  directUrlPreviewPlay: Maybe<Scalars['String']['output']>;
  download: Maybe<Scalars['String']['output']>;
  metadata: Maybe<Scalars['String']['output']>;
  preview: Maybe<Scalars['String']['output']>;
};

export type CantoVersionHistoryType = {
  __typename?: 'CantoVersionHistoryType';
  comment: Maybe<Scalars['String']['output']>;
  created: Maybe<Scalars['String']['output']>;
  currentVersion: Maybe<Scalars['String']['output']>;
  no: Maybe<Scalars['String']['output']>;
  ownerName: Maybe<Scalars['String']['output']>;
  time: Maybe<Scalars['String']['output']>;
  uri: Maybe<CantoVersionHistoryUriType>;
  version: Maybe<Scalars['String']['output']>;
};

export type CantoVersionHistoryUriType = {
  __typename?: 'CantoVersionHistoryUriType';
  download: Maybe<Scalars['String']['output']>;
  preview: Maybe<Scalars['String']['output']>;
};

export type CategoryCriteriaInput = {
  /** Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`. */
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  /** Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID. */
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  /** Narrows the query results based on the elements’ creation dates. */
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the elements’ last-updated dates. */
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`. */
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  /** Narrows the query results to only elements that are descendants of another element in its structure provided by its ID. */
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  /** Whether to only return categories that the user has permission to edit. */
  editable: InputMaybe<Scalars['Boolean']['input']>;
  /** Causes the query results to be returned in the order specified by the `id` argument. */
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the category groups the categories belong to per the group’s handles. */
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the category groups the categories belong to, per the groups’ IDs. */
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on whether the elements have any descendants in their structure. */
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the elements’ IDs. */
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Causes the query results to be returned in reverse order. */
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants). */
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the elements’ level within the structure. */
  level: InputMaybe<Scalars['Int']['input']>;
  /** Sets the limit for paginated results. */
  limit: InputMaybe<Scalars['Int']['input']>;
  /** Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID. */
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  /** Sets the offset for paginated results. */
  offset: InputMaybe<Scalars['Int']['input']>;
  /** Sets the field the returned elements should be ordered by. */
  orderBy: InputMaybe<Scalars['String']['input']>;
  /** Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID. */
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  /** Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID. */
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  /** Determines which site should be selected when querying multi-site elements. */
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID. */
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  /** Narrows the query results based on a reference string. */
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used. */
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: ["and", ...ids]` should be used instead. */
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to elements that relate to an asset list defined with this argument. */
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a category list defined with this argument. */
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  /** Narrows the query results to elements that relate to an entry list defined with this argument. */
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a tag list defined with this argument. */
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a use list defined with this argument. */
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  /** Narrows the query results to only elements that match a search query. */
  search: InputMaybe<Scalars['String']['input']>;
  /** Determines which site(s) the elements should be queried in. Defaults to the current (requested) site. */
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Determines which site(s) the elements should be queried in. Defaults to the current (requested) site. */
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the unique identifier for an element-site relation. */
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the elements’ slugs. */
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Determines which structure data should be joined into the query. */
  structureId: InputMaybe<Scalars['Int']['input']>;
  /** Narrows the query results based on the elements’ titles. */
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the elements’ UIDs. */
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Determines whether only elements with unique IDs should be returned by the query. */
  unique: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the elements’ URIs. */
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Explicitly determines whether the query should join in the structure data. */
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};

/** This is the interface implemented by all categories. */
export type CategoryInterface = {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The category’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<CategoryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The category’s children. */
  children: Array<CategoryInterface>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The category’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<CategoryInterface>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the group that contains the category. */
  groupHandle: Scalars['String']['output'];
  /** The ID of the group that contains the category. */
  groupId: Scalars['Int']['output'];
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<CategoryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<CategoryInterface>;
  /** The category’s parent. */
  parent: Maybe<CategoryInterface>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<CategoryInterface>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


/** This is the interface implemented by all categories. */
export type CategoryInterface_CountArgs = {
  field: Scalars['String']['input'];
};


/** This is the interface implemented by all categories. */
export type CategoryInterfaceAncestorsArgs = {
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


/** This is the interface implemented by all categories. */
export type CategoryInterfaceChildrenArgs = {
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


/** This is the interface implemented by all categories. */
export type CategoryInterfaceDescendantsArgs = {
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


/** This is the interface implemented by all categories. */
export type CategoryInterfaceLocalizedArgs = {
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


/** This is the interface implemented by all categories. */
export type CategoryInterfaceNextArgs = {
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


/** This is the interface implemented by all categories. */
export type CategoryInterfaceParentArgs = {
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


/** This is the interface implemented by all categories. */
export type CategoryInterfacePrevArgs = {
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};

export type Element = ElementInterface & {
  __typename?: 'Element';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type Element_CountArgs = {
  field: Scalars['String']['input'];
};

/** This is the interface implemented by all elements. */
export type ElementInterface = {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


/** This is the interface implemented by all elements. */
export type ElementInterface_CountArgs = {
  field: Scalars['String']['input'];
};

export type EntryCriteriaInput = {
  /** Narrows the query results to only entries that were posted on or after a certain date. */
  after: InputMaybe<Scalars['String']['input']>;
  /** Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`. */
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  /** Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID. */
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the user group the entries’ authors belong to. */
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs. */
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the entries’ authors. */
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to only entries that were posted before a certain date. */
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the elements’ creation dates. */
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the elements’ last-updated dates. */
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`. */
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  /** Narrows the query results to only elements that are descendants of another element in its structure provided by its ID. */
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Whether to only return entries that the user has permission to edit. */
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the entries’ expiry dates. */
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Causes the query results to be returned in the order specified by the `id` argument. */
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on whether the elements have any descendants in their structure. */
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the elements’ IDs. */
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Causes the query results to be returned in reverse order. */
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants). */
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the elements’ level within the structure. */
  level: InputMaybe<Scalars['Int']['input']>;
  /** Sets the limit for paginated results. */
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID. */
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  /** Sets the offset for paginated results. */
  offset: InputMaybe<Scalars['Int']['input']>;
  /** Sets the field the returned elements should be ordered by. */
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID. */
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  /** Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID. */
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  /** Narrows the query results based on the entries’ post dates. */
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Determines which site should be selected when querying multi-site elements. */
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID. */
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on a reference string. */
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used. */
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: ["and", ...ids]` should be used instead. */
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to elements that relate to an asset list defined with this argument. */
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a category list defined with this argument. */
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  /** Narrows the query results to elements that relate to an entry list defined with this argument. */
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a tag list defined with this argument. */
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a use list defined with this argument. */
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  /** Narrows the query results to only elements that match a search query. */
  search: InputMaybe<Scalars['String']['input']>;
  /** Narrows the query results based on the section handles the entries belong to. */
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the sections the entries belong to, per the sections’ IDs. */
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Determines which site(s) the elements should be queried in. Defaults to the current (requested) site. */
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Determines which site(s) the elements should be queried in. Defaults to the current (requested) site. */
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the unique identifier for an element-site relation. */
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the elements’ slugs. */
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Determines which structure data should be joined into the query. */
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the elements’ titles. */
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the entries’ entry type handles. */
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the entries’ entry types, per the types’ IDs. */
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the elements’ UIDs. */
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Determines whether only elements with unique IDs should be returned by the query. */
  unique: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the elements’ URIs. */
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Explicitly determines whether the query should join in the structure data. */
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};

/** This is the interface implemented by all entries. */
export type EntryInterface = {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The entry’s author. */
  author: Maybe<UserInterface>;
  /** The ID of the author of this entry. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Scalars['String']['output'];
  /** The ID of the section that contains the entry. */
  sectionId: Scalars['Int']['output'];
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


/** This is the interface implemented by all entries. */
export type EntryInterface_CountArgs = {
  field: Scalars['String']['input'];
};


/** This is the interface implemented by all entries. */
export type EntryInterfaceAncestorsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


/** This is the interface implemented by all entries. */
export type EntryInterfaceChildrenArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


/** This is the interface implemented by all entries. */
export type EntryInterfaceDescendantsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


/** This is the interface implemented by all entries. */
export type EntryInterfaceLocalizedArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


/** This is the interface implemented by all entries. */
export type EntryInterfaceNextArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


/** This is the interface implemented by all entries. */
export type EntryInterfaceParentArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


/** This is the interface implemented by all entries. */
export type EntryInterfacePrevArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};

export type FileInput = {
  /** The contents of the file in Base64 format. If provided, takes precedence over the URL. */
  fileData: InputMaybe<Scalars['String']['input']>;
  /** The file name to use (including the extension) data with the `fileData` field. */
  filename: InputMaybe<Scalars['String']['input']>;
  /** The URL of the file. */
  url: InputMaybe<Scalars['String']['input']>;
};

export type ForPageInput = {
  /** The number of items per page */
  items: InputMaybe<Scalars['Int']['input']>;
  /** The page number */
  page: InputMaybe<Scalars['Int']['input']>;
};

/** This is the interface implemented by all global sets. */
export type GlobalSetInterface = {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the global set. */
  handle: Scalars['String']['output'];
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The name of the global set. */
  name: Scalars['String']['output'];
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


/** This is the interface implemented by all global sets. */
export type GlobalSetInterface_CountArgs = {
  field: Scalars['String']['input'];
};

/** This is the interface implemented by all matrix blocks. */
export type MatrixBlockInterface = {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the matrix block. */
  fieldId: Scalars['Int']['output'];
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The ID of the primary owner of the Matrix block. */
  primaryOwnerId: Scalars['Int']['output'];
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the matrix block’s type. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the matrix block’s type. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


/** This is the interface implemented by all matrix blocks. */
export type MatrixBlockInterface_CountArgs = {
  field: Scalars['String']['input'];
};

export type Mutation = {
  __typename?: 'Mutation';
  /** Activates user. Requires `code` and `id` from Craft activation email. Returns success message. */
  activateUser: Scalars['String']['output'];
  /** Logs a user in. Returns user and token. */
  authenticate: Auth;
  /** Deletes authenticated user. Returns success message. */
  deleteAccount: Scalars['String']['output'];
  /** Deletes authenticated user refresh token. Useful for logging out of current device. Returns boolean. */
  deleteRefreshToken: Scalars['Boolean']['output'];
  /** Deletes all refresh tokens belonging to the authenticated user. Useful for logging out of all devices. Returns boolean. */
  deleteRefreshTokens: Scalars['Boolean']['output'];
  /** Deletes authenticated password-less user. Returns success message. */
  deleteSocialAccount: Scalars['String']['output'];
  /** Authenticates a Editors using a Facebook Sign-In token. Returns user and token. */
  facebookSignInEditors: Auth;
  /** Authenticates a Educators using a Facebook Sign-In token. Returns user and token. */
  facebookSignInEducators: Auth;
  /** Authenticates a Students using a Facebook Sign-In token. Returns user and token. */
  facebookSignInStudents: Auth;
  /** Authenticates a Translator using a Facebook Sign-In token. Returns user and token. */
  facebookSignInTranslator: Auth;
  /** Sends a password reset email to the user's email address. Returns success message. */
  forgottenPassword: Scalars['String']['output'];
  /** Authenticates a Editors using a Google Sign-In ID token. Returns user and token. */
  googleSignInEditors: Auth;
  /** Authenticates a Educators using a Google Sign-In ID token. Returns user and token. */
  googleSignInEducators: Auth;
  /** Authenticates a Students using a Google Sign-In ID token. Returns user and token. */
  googleSignInStudents: Auth;
  /** Authenticates a Translator using a Google Sign-In ID token. Returns user and token. */
  googleSignInTranslator: Auth;
  ping: Maybe<Scalars['String']['output']>;
  /** Refreshes a user's JWT. Checks for the occurrence of the `gql_refreshToken` cookie, and falls back to `refreshToken` argument. */
  refreshToken: Auth;
  /** Registers a Educators user. Returns user and token. */
  registerEducators: Auth;
  /** Registers a Students user. Returns user and token. */
  registerStudents: Auth;
  /** Resends an activation email to the user. Returns success message. */
  resendActivation: Scalars['String']['output'];
  /** Sets password for unauthenticated user. Requires `code` and `id` from Craft reset password email. Returns success message. */
  setPassword: Scalars['String']['output'];
  /** Updates password for authenticated user. Requires JWT and current password. Returns success message. */
  updatePassword: Scalars['String']['output'];
  /** Updates authenticated user. Returns user. */
  updateViewer: Maybe<UserInterface>;
};


export type MutationActivateUserArgs = {
  code: Scalars['String']['input'];
  id: Scalars['String']['input'];
};


export type MutationAuthenticateArgs = {
  email: Scalars['String']['input'];
  password: Scalars['String']['input'];
};


export type MutationDeleteAccountArgs = {
  confirmPassword: Scalars['String']['input'];
  password: Scalars['String']['input'];
};


export type MutationDeleteRefreshTokenArgs = {
  refreshToken: InputMaybe<Scalars['String']['input']>;
};


export type MutationFacebookSignInEditorsArgs = {
  code: Scalars['String']['input'];
};


export type MutationFacebookSignInEducatorsArgs = {
  code: Scalars['String']['input'];
};


export type MutationFacebookSignInStudentsArgs = {
  code: Scalars['String']['input'];
};


export type MutationFacebookSignInTranslatorArgs = {
  code: Scalars['String']['input'];
};


export type MutationForgottenPasswordArgs = {
  email: Scalars['String']['input'];
};


export type MutationGoogleSignInEditorsArgs = {
  idToken: Scalars['String']['input'];
};


export type MutationGoogleSignInEducatorsArgs = {
  idToken: Scalars['String']['input'];
};


export type MutationGoogleSignInStudentsArgs = {
  idToken: Scalars['String']['input'];
};


export type MutationGoogleSignInTranslatorArgs = {
  idToken: Scalars['String']['input'];
};


export type MutationRefreshTokenArgs = {
  refreshToken: InputMaybe<Scalars['String']['input']>;
};


export type MutationRegisterEducatorsArgs = {
  email: Scalars['String']['input'];
  fullName: InputMaybe<Scalars['String']['input']>;
  password: Scalars['String']['input'];
  preferredLanguage: InputMaybe<Scalars['String']['input']>;
  username: InputMaybe<Scalars['String']['input']>;
};


export type MutationRegisterStudentsArgs = {
  email: Scalars['String']['input'];
  fullName: InputMaybe<Scalars['String']['input']>;
  password: Scalars['String']['input'];
  preferredLanguage: InputMaybe<Scalars['String']['input']>;
  username: InputMaybe<Scalars['String']['input']>;
};


export type MutationResendActivationArgs = {
  email: Scalars['String']['input'];
};


export type MutationSetPasswordArgs = {
  code: Scalars['String']['input'];
  id: Scalars['String']['input'];
  password: Scalars['String']['input'];
};


export type MutationUpdatePasswordArgs = {
  confirmPassword: Scalars['String']['input'];
  currentPassword: Scalars['String']['input'];
  newPassword: Scalars['String']['input'];
};


export type MutationUpdateViewerArgs = {
  email: InputMaybe<Scalars['String']['input']>;
  fullName: InputMaybe<Scalars['String']['input']>;
  photo: InputMaybe<FileInput>;
  preferredLanguage: InputMaybe<Scalars['String']['input']>;
  username: InputMaybe<Scalars['String']['input']>;
};

/** This is the interface implemented by all Neo blocks. */
export type NeoBlockInterface = {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


/** This is the interface implemented by all Neo blocks. */
export type NeoBlockInterface_CountArgs = {
  field: Scalars['String']['input'];
};

export type Query = {
  __typename?: 'Query';
  /** This query is used to query for a single address. */
  address: Maybe<AddressInterface>;
  /** This query is used to return the number of addresses. */
  addressCount: Scalars['Int']['output'];
  /** This query is used to query for addresses. */
  addresses: Maybe<Array<Maybe<AddressInterface>>>;
  /** This query is used to query for a single asset. */
  asset: Maybe<AssetInterface>;
  /** This query is used to return the number of assets. */
  assetCount: Scalars['Int']['output'];
  /** This query is used to query for assets. */
  assets: Maybe<Array<Maybe<AssetInterface>>>;
  /** This query is used to query for categories. */
  categories: Maybe<Array<Maybe<CategoryInterface>>>;
  /** This query is used to query for a single category. */
  category: Maybe<CategoryInterface>;
  /** This query is used to return the number of categories. */
  categoryCount: Scalars['Int']['output'];
  /** Entries within the datasets section. */
  datasetsEntries: Maybe<Array<Maybe<DatasetsSectionEntryUnion>>>;
  /** This query is used to query for entries. */
  entries: Maybe<Array<Maybe<EntryInterface>>>;
  /** This query is used to query for a single entry. */
  entry: Maybe<EntryInterface>;
  /** This query is used to return the number of entries. */
  entryCount: Scalars['Int']['output'];
  /** Generates the Facebook OAuth URL for allowing users to authenticate. */
  facebookOauthUrl: Scalars['String']['output'];
  /** This query is used to query for a single global set. */
  globalSet: Maybe<GlobalSetInterface>;
  /** This query is used to query for global sets. */
  globalSets: Maybe<Array<Maybe<GlobalSetInterface>>>;
  /** Entries within the homepage section. */
  homepageEntries: Maybe<Array<Maybe<HomepageSectionEntryUnion>>>;
  /** Entries within the investigations section. */
  investigationsEntries: Maybe<Array<Maybe<InvestigationsSectionEntryUnion>>>;
  /** Entries within the pages section. */
  pagesEntries: Maybe<Array<Maybe<PagesSectionEntryUnion>>>;
  ping: Maybe<Scalars['String']['output']>;
  /** Entries within the questions section. */
  questionsEntries: Maybe<Array<Maybe<QuestionsSectionEntryUnion>>>;
  /** Entries within the referenceContent section. */
  referenceContentEntries: Maybe<Array<Maybe<ReferenceContentSectionEntryUnion>>>;
  /** This query is used to query for a single user. */
  user: Maybe<UserInterface>;
  /** This query is used to return the number of users. */
  userCount: Scalars['Int']['output'];
  /** This query is used to query for users. */
  users: Maybe<Array<Maybe<UserInterface>>>;
  /** Gets authenticated user. */
  viewer: Maybe<UserInterface>;
  /** Entries within the widgets section. */
  widgetsEntries: Maybe<Array<Maybe<WidgetsSectionEntryUnion>>>;
};


export type QueryAddressArgs = {
  administrativeArea: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  countryCode: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type QueryAddressCountArgs = {
  administrativeArea: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  countryCode: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type QueryAddressesArgs = {
  administrativeArea: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  countryCode: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type QueryAssetArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type QueryAssetCountArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type QueryAssetsArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type QueryCategoriesArgs = {
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type QueryCategoryArgs = {
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type QueryCategoryCountArgs = {
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type QueryDatasetsEntriesArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type QueryEntriesArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type QueryEntryArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type QueryEntryCountArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type QueryGlobalSetArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  handle: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  helpUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type QueryGlobalSetsArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  handle: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  helpUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type QueryHomepageEntriesArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type QueryInvestigationsEntriesArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type QueryPagesEntriesArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type QueryQuestionsEntriesArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type QueryReferenceContentEntriesArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type QueryUserArgs = {
  assetUploaders: InputMaybe<Scalars['Boolean']['input']>;
  authors: InputMaybe<Scalars['Boolean']['input']>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  email: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  firstName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  fullName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  group: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasPhoto: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  lastName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  username: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type QueryUserCountArgs = {
  assetUploaders: InputMaybe<Scalars['Boolean']['input']>;
  authors: InputMaybe<Scalars['Boolean']['input']>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  email: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  firstName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  fullName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  group: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasPhoto: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  lastName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  username: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type QueryUsersArgs = {
  assetUploaders: InputMaybe<Scalars['Boolean']['input']>;
  authors: InputMaybe<Scalars['Boolean']['input']>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  email: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  firstName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  fullName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  group: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasPhoto: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  lastName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  username: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type QueryWidgetsEntriesArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};

/** This is the interface implemented by all Super Table blocks. */
export type SuperTableBlockInterface = {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Super Table block. */
  fieldId: Scalars['Int']['output'];
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The ID of the primary owner of the Super Table block. */
  primaryOwnerId: Scalars['Int']['output'];
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Super Table block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the Super Table block‘s type. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


/** This is the interface implemented by all Super Table blocks. */
export type SuperTableBlockInterface_CountArgs = {
  field: Scalars['String']['input'];
};

export type TagCriteriaInput = {
  /** Narrows the query results based on the elements’ creation dates. */
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the elements’ last-updated dates. */
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Causes the query results to be returned in the order specified by the `id` argument. */
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the tag groups the tags belong to per the group’s handles. */
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the tag groups the tags belong to, per the groups’ IDs. */
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the elements’ IDs. */
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Causes the query results to be returned in reverse order. */
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  /** Sets the limit for paginated results. */
  limit: InputMaybe<Scalars['Int']['input']>;
  /** Sets the offset for paginated results. */
  offset: InputMaybe<Scalars['Int']['input']>;
  /** Sets the field the returned elements should be ordered by. */
  orderBy: InputMaybe<Scalars['String']['input']>;
  /** Determines which site should be selected when querying multi-site elements. */
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on a reference string. */
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used. */
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: ["and", ...ids]` should be used instead. */
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to elements that relate to an asset list defined with this argument. */
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a category list defined with this argument. */
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  /** Narrows the query results to elements that relate to an entry list defined with this argument. */
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a tag list defined with this argument. */
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a use list defined with this argument. */
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  /** Narrows the query results to only elements that match a search query. */
  search: InputMaybe<Scalars['String']['input']>;
  /** Determines which site(s) the elements should be queried in. Defaults to the current (requested) site. */
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Determines which site(s) the elements should be queried in. Defaults to the current (requested) site. */
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the unique identifier for an element-site relation. */
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the elements’ slugs. */
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the elements’ titles. */
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the elements’ UIDs. */
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Determines whether only elements with unique IDs should be returned by the query. */
  unique: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the elements’ URIs. */
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type User = ElementInterface & UserInterface & {
  __typename?: 'User';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The user’s addresses. */
  addresses: Maybe<Array<Maybe<AddressInterface>>>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The user’s email. */
  email: Maybe<Scalars['String']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The user’s first name. */
  firstName: Maybe<Scalars['String']['output']>;
  /** The user’s first name or username. */
  friendlyName: Maybe<Scalars['String']['output']>;
  /** The user’s full name. */
  fullName: Maybe<Scalars['String']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The user’s last name. */
  lastName: Maybe<Scalars['String']['output']>;
  /** The user’s full name or username. */
  name: Scalars['String']['output'];
  /** The user’s photo. */
  photo: Maybe<AssetInterface>;
  /** The user’s preferences. */
  preferences: Scalars['String']['output'];
  /** The user’s preferred language. */
  preferredLanguage: Maybe<Scalars['String']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The username. */
  username: Maybe<Scalars['String']['output']>;
};


export type User_CountArgs = {
  field: Scalars['String']['input'];
};


export type UserAddressesArgs = {
  administrativeArea: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  countryCode: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type UserCriteriaInput = {
  /** Narrows the query results based on whether the users have uploaded any assets. */
  assetUploaders: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on whether the users are listed as the author of any entries. */
  authors: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the elements’ creation dates. */
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the elements’ last-updated dates. */
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the users’ email addresses. */
  email: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the users’ first names. */
  firstName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Causes the query results to be returned in the order specified by the `id` argument. */
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the users’ full names. */
  fullName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the user group the users belong to. */
  group: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the user group the users belong to, per the groups’ IDs. */
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to only users that have (or don’t have) a user photo. */
  hasPhoto: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the elements’ IDs. */
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Causes the query results to be returned in reverse order. */
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the users’ last names. */
  lastName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Sets the limit for paginated results. */
  limit: InputMaybe<Scalars['Int']['input']>;
  /** Sets the offset for paginated results. */
  offset: InputMaybe<Scalars['Int']['input']>;
  /** Sets the field the returned elements should be ordered by. */
  orderBy: InputMaybe<Scalars['String']['input']>;
  /** Determines which site should be selected when querying multi-site elements. */
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on a reference string. */
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used. */
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: ["and", ...ids]` should be used instead. */
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to elements that relate to an asset list defined with this argument. */
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a category list defined with this argument. */
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  /** Narrows the query results to elements that relate to an entry list defined with this argument. */
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a tag list defined with this argument. */
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a use list defined with this argument. */
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  /** Narrows the query results to only elements that match a search query. */
  search: InputMaybe<Scalars['String']['input']>;
  /** Determines which site(s) the elements should be queried in. Defaults to the current (requested) site. */
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Determines which site(s) the elements should be queried in. Defaults to the current (requested) site. */
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the unique identifier for an element-site relation. */
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the elements’ slugs. */
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the elements’ titles. */
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the elements’ UIDs. */
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Determines whether only elements with unique IDs should be returned by the query. */
  unique: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the elements’ URIs. */
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the users’ usernames. */
  username: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

/** This is the interface implemented by all users. */
export type UserInterface = {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The user’s addresses. */
  addresses: Maybe<Array<Maybe<AddressInterface>>>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The user’s email. */
  email: Maybe<Scalars['String']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The user’s first name. */
  firstName: Maybe<Scalars['String']['output']>;
  /** The user’s first name or username. */
  friendlyName: Maybe<Scalars['String']['output']>;
  /** The user’s full name. */
  fullName: Maybe<Scalars['String']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The user’s last name. */
  lastName: Maybe<Scalars['String']['output']>;
  /** The user’s full name or username. */
  name: Scalars['String']['output'];
  /** The user’s photo. */
  photo: Maybe<AssetInterface>;
  /** The user’s preferences. */
  preferences: Scalars['String']['output'];
  /** The user’s preferred language. */
  preferredLanguage: Maybe<Scalars['String']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The username. */
  username: Maybe<Scalars['String']['output']>;
};


/** This is the interface implemented by all users. */
export type UserInterface_CountArgs = {
  field: Scalars['String']['input'];
};


/** This is the interface implemented by all users. */
export type UserInterfaceAddressesArgs = {
  administrativeArea: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  countryCode: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type WhereBetweenFiltersInput = {
  /** The key to search on, you can use the `field.subField` syntax for nested fields */
  key: InputMaybe<Scalars['String']['input']>;
  /** The values that the key should be between */
  values: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type WhereContainsInFilterInput = {
  /** The keys to search on, you can use the `field.subField` syntax for nested fields */
  keys: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** The value that should be fuzzy matched in the key-values */
  value: InputMaybe<Scalars['String']['input']>;
};

export type WhereFiltersInput = {
  /** The key to search on, you can use the `field.subField` syntax for nested fields */
  key: InputMaybe<Scalars['String']['input']>;
  /** The comparison operator to use, e.g.: `=`, `>`, `<=`, etc. The default is `=` */
  operator: InputMaybe<Scalars['String']['input']>;
  /** The value to match when searching */
  value: InputMaybe<Scalars['String']['input']>;
};

export type WhereInFiltersInput = {
  /** The key to search on, you can use the `field.subField` syntax for nested fields */
  key: InputMaybe<Scalars['String']['input']>;
  /** The values that should be in the key */
  values: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type WhereNotBetweenFiltersInput = {
  /** The key to search on, you can use the `field.subField` syntax for nested fields */
  key: InputMaybe<Scalars['String']['input']>;
  /** The values the key should not be between */
  values: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type WhereNotInFiltersInput = {
  /** The key to search on, you can use the `field.subField` syntax for nested fields */
  key: InputMaybe<Scalars['String']['input']>;
  /** The the values that should not be in the key */
  values: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type AlertSources_MatrixField = AlertSources_Source_BlockType;

export type AlertSources_Source_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'alertSources_source_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  color: Maybe<Scalars['String']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the matrix block. */
  fieldId: Scalars['Int']['output'];
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The ID of the primary owner of the Matrix block. */
  primaryOwnerId: Scalars['Int']['output'];
  radius: Maybe<Scalars['Number']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  sourceName: Maybe<Scalars['String']['output']>;
  sourceType: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the matrix block’s type. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the matrix block’s type. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  xCoord: Maybe<Scalars['Number']['output']>;
  yCoord: Maybe<Scalars['Number']['output']>;
};


export type AlertSources_Source_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type AlertSources_Source_BlockTypeSourceTypeArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};

export type AnswerOptions_MatrixField = AnswerOptions_Option_BlockType;

export type AnswerOptions_Option_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'answerOptions_option_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the matrix block. */
  fieldId: Scalars['Int']['output'];
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  optionLabel: Maybe<Scalars['String']['output']>;
  optionValue: Maybe<Scalars['String']['output']>;
  /** The ID of the primary owner of the Matrix block. */
  primaryOwnerId: Scalars['Int']['output'];
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the matrix block’s type. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the matrix block’s type. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type AnswerOptions_Option_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};

export type ColorFilterToolObjects_NeoField = ColorFilterToolObjects_Filterimage_BlockType | ColorFilterToolObjects_Group_BlockType | ColorFilterToolObjects_Object_BlockType;

export type ColorFilterToolObjects_Filterimage_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'colorFilterToolObjects_filterimage_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  colorToolDefaultValue: Maybe<Scalars['Number']['output']>;
  colorToolMax: Maybe<Scalars['Number']['output']>;
  colorToolMin: Maybe<Scalars['Number']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  filter: Maybe<Scalars['String']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Canto Dam Asset field */
  image: Maybe<Array<Maybe<CantoDamAssetInterface>>>;
  isActive: Maybe<Scalars['Boolean']['output']>;
  isEnabled: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  preSelectedColor: Maybe<Scalars['String']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ColorFilterToolObjects_Filterimage_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type ColorFilterToolObjects_Filterimage_BlockTypeFilterArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};


export type ColorFilterToolObjects_Filterimage_BlockTypeImageArgs = {
  except: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  first: InputMaybe<Scalars['Boolean']['input']>;
  forPage: InputMaybe<ForPageInput>;
  last: InputMaybe<Scalars['Boolean']['input']>;
  nth: InputMaybe<Scalars['Int']['input']>;
  random: InputMaybe<Scalars['Int']['input']>;
  reverse: InputMaybe<Scalars['Boolean']['input']>;
  shuffle: InputMaybe<Scalars['Int']['input']>;
  skip: InputMaybe<Scalars['Int']['input']>;
  sortBy: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sortByDesc: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  where: InputMaybe<WhereFiltersInput>;
  whereBetween: InputMaybe<WhereBetweenFiltersInput>;
  whereContainsIn: InputMaybe<WhereContainsInFilterInput>;
  whereIn: InputMaybe<WhereInFiltersInput>;
  whereNotBetween: InputMaybe<WhereNotBetweenFiltersInput>;
  whereNotIn: InputMaybe<WhereNotInFiltersInput>;
  whereNotNull: InputMaybe<Scalars['String']['input']>;
  whereNull: InputMaybe<Scalars['String']['input']>;
};


export type ColorFilterToolObjects_Filterimage_BlockTypePreSelectedColorArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};

export type ColorFilterToolObjects_Group_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'colorFilterToolObjects_group_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The child block types for this Neo block */
  children: Maybe<Array<Maybe<NeoBlockInterface>>>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  groupName: Maybe<Scalars['String']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ColorFilterToolObjects_Group_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};

export type ColorFilterToolObjects_Object_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'colorFilterToolObjects_object_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The child block types for this Neo block */
  children: Maybe<Array<Maybe<NeoBlockInterface>>>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  objectCaption: Maybe<Scalars['String']['output']>;
  objectName: Maybe<Scalars['String']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ColorFilterToolObjects_Object_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};

export type ContentBlocks_NeoField = ContentBlocks_BarGraphTool_BlockType | ContentBlocks_CameraFilterTool_BlockType | ContentBlocks_ColLeft_BlockType | ContentBlocks_ColRight_BlockType | ContentBlocks_ColorFilterToolBlock_BlockType | ContentBlocks_Equation_BlockType | ContentBlocks_FilterTool_BlockType | ContentBlocks_Group_BlockType | ContentBlocks_Image_BlockType | ContentBlocks_MagnitudeScatterPlot_BlockType | ContentBlocks_QuestionBlock_BlockType | ContentBlocks_ReferenceBlock_BlockType | ContentBlocks_ScatterplotTool_BlockType | ContentBlocks_SupernovaDistanceDistribution_BlockType | ContentBlocks_Table_BlockType | ContentBlocks_Text_BlockType | ContentBlocks_TwoColumnContainer_BlockType | ContentBlocks_Video_BlockType;

export type ContentBlocks_BarGraphTool_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'contentBlocks_barGraphTool_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  graphBars: Array<Maybe<GraphBars_MatrixField>>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  text: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  xAxisLabel: Maybe<Scalars['String']['output']>;
  yAxisLabel: Maybe<Scalars['String']['output']>;
  yAxisMax: Maybe<Scalars['Number']['output']>;
  yAxisMin: Maybe<Scalars['Number']['output']>;
};


export type ContentBlocks_BarGraphTool_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type ContentBlocks_BarGraphTool_BlockTypeGraphBarsArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type ContentBlocks_CameraFilterTool_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'contentBlocks_cameraFilterTool_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  widgetInstructions: Maybe<Scalars['String']['output']>;
};


export type ContentBlocks_CameraFilterTool_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};

export type ContentBlocks_ColLeft_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'contentBlocks_colLeft_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The child block types for this Neo block */
  children: Maybe<Array<Maybe<NeoBlockInterface>>>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ContentBlocks_ColLeft_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};

export type ContentBlocks_ColRight_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'contentBlocks_colRight_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The child block types for this Neo block */
  children: Maybe<Array<Maybe<NeoBlockInterface>>>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ContentBlocks_ColRight_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};

export type ContentBlocks_ColorFilterToolBlock_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'contentBlocks_colorFilterToolBlock_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  colorFilterTool: Array<Maybe<EntryInterface>>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ContentBlocks_ColorFilterToolBlock_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type ContentBlocks_ColorFilterToolBlock_BlockTypeColorFilterToolArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};

export type ContentBlocks_Equation_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'contentBlocks_equation_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  latex: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ContentBlocks_Equation_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};

export type ContentBlocks_FilterTool_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'contentBlocks_filterTool_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  preSelectedColor: Maybe<Scalars['String']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  readOnly: Maybe<Scalars['Boolean']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  widgetInstructions: Maybe<Scalars['String']['output']>;
};


export type ContentBlocks_FilterTool_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type ContentBlocks_FilterTool_BlockTypePreSelectedColorArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};

export type ContentBlocks_Group_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'contentBlocks_group_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The child block types for this Neo block */
  children: Maybe<Array<Maybe<NeoBlockInterface>>>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ContentBlocks_Group_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};

export type ContentBlocks_Image_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'contentBlocks_image_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  caption: Maybe<Scalars['String']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Canto Dam Asset field */
  image: Maybe<Array<Maybe<CantoDamAssetInterface>>>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  layout: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ContentBlocks_Image_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type ContentBlocks_Image_BlockTypeImageArgs = {
  except: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  first: InputMaybe<Scalars['Boolean']['input']>;
  forPage: InputMaybe<ForPageInput>;
  last: InputMaybe<Scalars['Boolean']['input']>;
  nth: InputMaybe<Scalars['Int']['input']>;
  random: InputMaybe<Scalars['Int']['input']>;
  reverse: InputMaybe<Scalars['Boolean']['input']>;
  shuffle: InputMaybe<Scalars['Int']['input']>;
  skip: InputMaybe<Scalars['Int']['input']>;
  sortBy: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sortByDesc: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  where: InputMaybe<WhereFiltersInput>;
  whereBetween: InputMaybe<WhereBetweenFiltersInput>;
  whereContainsIn: InputMaybe<WhereContainsInFilterInput>;
  whereIn: InputMaybe<WhereInFiltersInput>;
  whereNotBetween: InputMaybe<WhereNotBetweenFiltersInput>;
  whereNotIn: InputMaybe<WhereNotInFiltersInput>;
  whereNotNull: InputMaybe<Scalars['String']['input']>;
  whereNull: InputMaybe<Scalars['String']['input']>;
};


export type ContentBlocks_Image_BlockTypeLayoutArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};

export type ContentBlocks_MagnitudeScatterPlot_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'contentBlocks_magnitudeScatterPlot_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  lightCurveTool: Array<Maybe<EntryInterface>>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ContentBlocks_MagnitudeScatterPlot_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type ContentBlocks_MagnitudeScatterPlot_BlockTypeLightCurveToolArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};

export type ContentBlocks_QuestionBlock_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'contentBlocks_questionBlock_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  questionEntries: Array<Maybe<EntryInterface>>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ContentBlocks_QuestionBlock_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type ContentBlocks_QuestionBlock_BlockTypeQuestionEntriesArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};

export type ContentBlocks_ReferenceBlock_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'contentBlocks_referenceBlock_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  referenceEntries: Array<Maybe<EntryInterface>>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ContentBlocks_ReferenceBlock_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type ContentBlocks_ReferenceBlock_BlockTypeReferenceEntriesArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};

export type ContentBlocks_ScatterplotTool_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'contentBlocks_scatterplotTool_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  plotPoints: Array<Maybe<AssetInterface>>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  text: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  xAxisLabel: Maybe<Scalars['String']['output']>;
  xAxisMin: Maybe<Scalars['Number']['output']>;
  yAxisLabel: Maybe<Scalars['String']['output']>;
  yAxisMax: Maybe<Scalars['Number']['output']>;
};


export type ContentBlocks_ScatterplotTool_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type ContentBlocks_ScatterplotTool_BlockTypePlotPointsArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type ContentBlocks_SupernovaDistanceDistribution_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'contentBlocks_supernovaDistanceDistribution_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  binSize: Maybe<Scalars['Number']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Canto Dam Asset field */
  imageAlbum: Maybe<Array<Maybe<CantoDamAssetInterface>>>;
  json: Array<Maybe<AssetInterface>>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  questionEntries: Array<Maybe<EntryInterface>>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  widgetInstructions: Maybe<Scalars['String']['output']>;
};


export type ContentBlocks_SupernovaDistanceDistribution_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type ContentBlocks_SupernovaDistanceDistribution_BlockTypeImageAlbumArgs = {
  except: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  first: InputMaybe<Scalars['Boolean']['input']>;
  forPage: InputMaybe<ForPageInput>;
  last: InputMaybe<Scalars['Boolean']['input']>;
  nth: InputMaybe<Scalars['Int']['input']>;
  random: InputMaybe<Scalars['Int']['input']>;
  reverse: InputMaybe<Scalars['Boolean']['input']>;
  shuffle: InputMaybe<Scalars['Int']['input']>;
  skip: InputMaybe<Scalars['Int']['input']>;
  sortBy: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sortByDesc: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  where: InputMaybe<WhereFiltersInput>;
  whereBetween: InputMaybe<WhereBetweenFiltersInput>;
  whereContainsIn: InputMaybe<WhereContainsInFilterInput>;
  whereIn: InputMaybe<WhereInFiltersInput>;
  whereNotBetween: InputMaybe<WhereNotBetweenFiltersInput>;
  whereNotIn: InputMaybe<WhereNotInFiltersInput>;
  whereNotNull: InputMaybe<Scalars['String']['input']>;
  whereNull: InputMaybe<Scalars['String']['input']>;
};


export type ContentBlocks_SupernovaDistanceDistribution_BlockTypeJsonArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type ContentBlocks_SupernovaDistanceDistribution_BlockTypeQuestionEntriesArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};

export type ContentBlocks_Table_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'contentBlocks_table_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  caption: Maybe<Scalars['String']['output']>;
  contentHeading: Maybe<Scalars['String']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  displayTable: Array<Maybe<DisplayTable_SuperTableField>>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  tableHeader: Array<Maybe<TableHeader_SuperTableField>>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ContentBlocks_Table_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type ContentBlocks_Table_BlockTypeDisplayTableArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type ContentBlocks_Table_BlockTypeTableHeaderArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type ContentBlocks_Text_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'contentBlocks_text_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  text: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ContentBlocks_Text_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};

export type ContentBlocks_TwoColumnContainer_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'contentBlocks_twoColumnContainer_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The child block types for this Neo block */
  children: Maybe<Array<Maybe<NeoBlockInterface>>>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ContentBlocks_TwoColumnContainer_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};

export type ContentBlocks_Video_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'contentBlocks_video_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  caption: Maybe<Scalars['String']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** Canto Dam Asset field */
  video: Maybe<Array<Maybe<CantoDamAssetInterface>>>;
};


export type ContentBlocks_Video_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type ContentBlocks_Video_BlockTypeVideoArgs = {
  except: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  first: InputMaybe<Scalars['Boolean']['input']>;
  forPage: InputMaybe<ForPageInput>;
  last: InputMaybe<Scalars['Boolean']['input']>;
  nth: InputMaybe<Scalars['Int']['input']>;
  random: InputMaybe<Scalars['Int']['input']>;
  reverse: InputMaybe<Scalars['Boolean']['input']>;
  shuffle: InputMaybe<Scalars['Int']['input']>;
  skip: InputMaybe<Scalars['Int']['input']>;
  sortBy: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sortByDesc: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  where: InputMaybe<WhereFiltersInput>;
  whereBetween: InputMaybe<WhereBetweenFiltersInput>;
  whereContainsIn: InputMaybe<WhereContainsInFilterInput>;
  whereIn: InputMaybe<WhereInFiltersInput>;
  whereNotBetween: InputMaybe<WhereNotBetweenFiltersInput>;
  whereNotIn: InputMaybe<WhereNotInFiltersInput>;
  whereNotNull: InputMaybe<Scalars['String']['input']>;
  whereNull: InputMaybe<Scalars['String']['input']>;
};

export type DatasetsSectionEntryUnion = Datasets_StarCluster_Entry | Datasets_SupernovaGalaxyObservations_Entry;

export type Datasets_Asset = AssetInterface & ElementInterface & {
  __typename?: 'datasets_Asset';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Alternative text for the asset. */
  alt: Maybe<Scalars['String']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the asset file was last modified. */
  dateModified: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The file extension for the asset file. */
  extension: Scalars['String']['output'];
  /** The filename of the asset file. */
  filename: Scalars['String']['output'];
  /** The focal point represented as an array with `x` and `y` keys, or null if it’s not an image. */
  focalPoint: Maybe<Array<Maybe<Scalars['Float']['output']>>>;
  /** The ID of the folder that the asset belongs to. */
  folderId: Scalars['Int']['output'];
  /** Returns the file’s format. */
  format: Maybe<Scalars['String']['output']>;
  /** Whether a user-defined focal point is set on the asset. */
  hasFocalPoint: Scalars['Boolean']['output'];
  /** The height in pixels or null if it’s not an image. */
  height: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** An `<img>` tag based on this asset. */
  img: Maybe<Scalars['String']['output']>;
  /** The file kind. */
  kind: Scalars['String']['output'];
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The file’s MIME type, if it can be determined. */
  mimeType: Maybe<Scalars['String']['output']>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<AssetInterface>;
  /** The asset’s path in the volume. */
  path: Scalars['String']['output'];
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<AssetInterface>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The file size in bytes. */
  size: Maybe<Scalars['String']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** Returns a `srcset` attribute value based on the given widths or x-descriptors. */
  srcset: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The user who first added this asset (if known). */
  uploader: Maybe<UserInterface>;
  /** The ID of the user who first added this asset (if known). */
  uploaderId: Maybe<Scalars['Int']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The full URL of the asset. This field accepts the same fields as the `transform` directive. */
  url: Maybe<Scalars['String']['output']>;
  /** The ID of the volume that the asset belongs to. */
  volumeId: Maybe<Scalars['Int']['output']>;
  /** The width in pixels or null if it’s not an image. */
  width: Maybe<Scalars['Int']['output']>;
};


export type Datasets_Asset_CountArgs = {
  field: Scalars['String']['input'];
};


export type Datasets_AssetFormatArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};


export type Datasets_AssetHeightArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};


export type Datasets_AssetNextArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type Datasets_AssetPrevArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type Datasets_AssetSrcsetArgs = {
  sizes: Array<Scalars['String']['input']>;
};


export type Datasets_AssetUploaderArgs = {
  assetUploaders: InputMaybe<Scalars['Boolean']['input']>;
  authors: InputMaybe<Scalars['Boolean']['input']>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  email: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  firstName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  fullName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  group: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasPhoto: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  lastName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  username: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type Datasets_AssetUrlArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};


export type Datasets_AssetWidthArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};

export type Datasets_StarCluster_Entry = ElementInterface & EntryInterface & {
  __typename?: 'datasets_starCluster_Entry';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The entry’s author. */
  author: Maybe<UserInterface>;
  /** The ID of the author of this entry. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  json: Array<Maybe<AssetInterface>>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  plotPoints: Array<Maybe<AssetInterface>>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Scalars['String']['output'];
  /** The ID of the section that contains the entry. */
  sectionId: Scalars['Int']['output'];
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
  xAxisMax: Maybe<Scalars['Number']['output']>;
  xAxisMin: Maybe<Scalars['Number']['output']>;
  yAxisMax: Maybe<Scalars['Number']['output']>;
  yAxisMin: Maybe<Scalars['Number']['output']>;
};


export type Datasets_StarCluster_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type Datasets_StarCluster_EntryAncestorsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Datasets_StarCluster_EntryChildrenArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Datasets_StarCluster_EntryDescendantsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Datasets_StarCluster_EntryJsonArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type Datasets_StarCluster_EntryLocalizedArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Datasets_StarCluster_EntryNextArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Datasets_StarCluster_EntryParentArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Datasets_StarCluster_EntryPlotPointsArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type Datasets_StarCluster_EntryPrevArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};

export type Datasets_SupernovaGalaxyObservations_Entry = ElementInterface & EntryInterface & {
  __typename?: 'datasets_supernovaGalaxyObservations_Entry';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  alertSources: Array<Maybe<AlertSources_MatrixField>>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The entry’s author. */
  author: Maybe<UserInterface>;
  /** The ID of the author of this entry. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  dec: Maybe<Scalars['Number']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  distance: Maybe<Scalars['Number']['output']>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  filter: Maybe<Scalars['String']['output']>;
  galacticLatitude: Maybe<Scalars['Number']['output']>;
  galacticLongitude: Maybe<Scalars['Number']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Canto Dam Asset field */
  imageAlbum: Maybe<Array<Maybe<CantoDamAssetInterface>>>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  json: Array<Maybe<AssetInterface>>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  mjd: Maybe<Scalars['Number']['output']>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  ra: Maybe<Scalars['Number']['output']>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Scalars['String']['output'];
  /** The ID of the section that contains the entry. */
  sectionId: Scalars['Int']['output'];
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type Datasets_SupernovaGalaxyObservations_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type Datasets_SupernovaGalaxyObservations_EntryAlertSourcesArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type Datasets_SupernovaGalaxyObservations_EntryAncestorsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Datasets_SupernovaGalaxyObservations_EntryChildrenArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Datasets_SupernovaGalaxyObservations_EntryDescendantsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Datasets_SupernovaGalaxyObservations_EntryFilterArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};


export type Datasets_SupernovaGalaxyObservations_EntryImageAlbumArgs = {
  except: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  first: InputMaybe<Scalars['Boolean']['input']>;
  forPage: InputMaybe<ForPageInput>;
  last: InputMaybe<Scalars['Boolean']['input']>;
  nth: InputMaybe<Scalars['Int']['input']>;
  random: InputMaybe<Scalars['Int']['input']>;
  reverse: InputMaybe<Scalars['Boolean']['input']>;
  shuffle: InputMaybe<Scalars['Int']['input']>;
  skip: InputMaybe<Scalars['Int']['input']>;
  sortBy: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sortByDesc: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  where: InputMaybe<WhereFiltersInput>;
  whereBetween: InputMaybe<WhereBetweenFiltersInput>;
  whereContainsIn: InputMaybe<WhereContainsInFilterInput>;
  whereIn: InputMaybe<WhereInFiltersInput>;
  whereNotBetween: InputMaybe<WhereNotBetweenFiltersInput>;
  whereNotIn: InputMaybe<WhereNotInFiltersInput>;
  whereNotNull: InputMaybe<Scalars['String']['input']>;
  whereNull: InputMaybe<Scalars['String']['input']>;
};


export type Datasets_SupernovaGalaxyObservations_EntryJsonArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type Datasets_SupernovaGalaxyObservations_EntryLocalizedArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Datasets_SupernovaGalaxyObservations_EntryNextArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Datasets_SupernovaGalaxyObservations_EntryParentArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Datasets_SupernovaGalaxyObservations_EntryPrevArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};

export type DisplayTable_BlockType = ElementInterface & SuperTableBlockInterface & {
  __typename?: 'displayTable_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Super Table block. */
  fieldId: Scalars['Int']['output'];
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The ID of the primary owner of the Super Table block. */
  primaryOwnerId: Scalars['Int']['output'];
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Super Table block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  tableRow: Array<Maybe<TableRow_MatrixField>>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the Super Table block‘s type. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type DisplayTable_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type DisplayTable_BlockTypeTableRowArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type DisplayTable_SuperTableField = DisplayTable_BlockType;

export type FiltersImages_FilterImage_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'filtersImages_filterImage_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  defaultValue: Maybe<Scalars['Number']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the matrix block. */
  fieldId: Scalars['Int']['output'];
  filter: Maybe<Scalars['String']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Canto Dam Asset field */
  image: Maybe<Array<Maybe<CantoDamAssetInterface>>>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  max: Maybe<Scalars['Number']['output']>;
  min: Maybe<Scalars['Number']['output']>;
  /** The ID of the primary owner of the Matrix block. */
  primaryOwnerId: Scalars['Int']['output'];
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the matrix block’s type. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the matrix block’s type. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type FiltersImages_FilterImage_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type FiltersImages_FilterImage_BlockTypeFilterArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};


export type FiltersImages_FilterImage_BlockTypeImageArgs = {
  except: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  first: InputMaybe<Scalars['Boolean']['input']>;
  forPage: InputMaybe<ForPageInput>;
  last: InputMaybe<Scalars['Boolean']['input']>;
  nth: InputMaybe<Scalars['Int']['input']>;
  random: InputMaybe<Scalars['Int']['input']>;
  reverse: InputMaybe<Scalars['Boolean']['input']>;
  shuffle: InputMaybe<Scalars['Int']['input']>;
  skip: InputMaybe<Scalars['Int']['input']>;
  sortBy: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sortByDesc: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  where: InputMaybe<WhereFiltersInput>;
  whereBetween: InputMaybe<WhereBetweenFiltersInput>;
  whereContainsIn: InputMaybe<WhereContainsInFilterInput>;
  whereIn: InputMaybe<WhereInFiltersInput>;
  whereNotBetween: InputMaybe<WhereNotBetweenFiltersInput>;
  whereNotIn: InputMaybe<WhereNotInFiltersInput>;
  whereNotNull: InputMaybe<Scalars['String']['input']>;
  whereNull: InputMaybe<Scalars['String']['input']>;
};

export type GraphBars_MatrixField = GraphBars_Bar_BlockType;

export type GraphBars_Bar_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'graphBars_bar_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the matrix block. */
  fieldId: Scalars['Int']['output'];
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  label: Maybe<Scalars['String']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The ID of the primary owner of the Matrix block. */
  primaryOwnerId: Scalars['Int']['output'];
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the matrix block’s type. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the matrix block’s type. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  yValue: Maybe<Scalars['String']['output']>;
};


export type GraphBars_Bar_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};

export type HeaderRow_MatrixField = HeaderRow_TableCell_BlockType;

export type HeaderRow_TableCell_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'headerRow_tableCell_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  equation: Maybe<Scalars['String']['output']>;
  /** The ID of the field that owns the matrix block. */
  fieldId: Scalars['Int']['output'];
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The ID of the primary owner of the Matrix block. */
  primaryOwnerId: Scalars['Int']['output'];
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  text: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the matrix block’s type. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the matrix block’s type. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type HeaderRow_TableCell_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};

export type HomepageContentBlocks_NeoField = HomepageContentBlocks_Image_BlockType | HomepageContentBlocks_InvestigationGrid_BlockType | HomepageContentBlocks_Text_BlockType;

export type HomepageContentBlocks_Image_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'homepageContentBlocks_image_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  caption: Maybe<Scalars['String']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Canto Dam Asset field */
  image: Maybe<Array<Maybe<CantoDamAssetInterface>>>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  layout: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type HomepageContentBlocks_Image_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type HomepageContentBlocks_Image_BlockTypeImageArgs = {
  except: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  first: InputMaybe<Scalars['Boolean']['input']>;
  forPage: InputMaybe<ForPageInput>;
  last: InputMaybe<Scalars['Boolean']['input']>;
  nth: InputMaybe<Scalars['Int']['input']>;
  random: InputMaybe<Scalars['Int']['input']>;
  reverse: InputMaybe<Scalars['Boolean']['input']>;
  shuffle: InputMaybe<Scalars['Int']['input']>;
  skip: InputMaybe<Scalars['Int']['input']>;
  sortBy: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sortByDesc: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  where: InputMaybe<WhereFiltersInput>;
  whereBetween: InputMaybe<WhereBetweenFiltersInput>;
  whereContainsIn: InputMaybe<WhereContainsInFilterInput>;
  whereIn: InputMaybe<WhereInFiltersInput>;
  whereNotBetween: InputMaybe<WhereNotBetweenFiltersInput>;
  whereNotIn: InputMaybe<WhereNotInFiltersInput>;
  whereNotNull: InputMaybe<Scalars['String']['input']>;
  whereNull: InputMaybe<Scalars['String']['input']>;
};


export type HomepageContentBlocks_Image_BlockTypeLayoutArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};

export type HomepageContentBlocks_InvestigationGrid_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'homepageContentBlocks_investigationGrid_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  contentHeading: Maybe<Scalars['String']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  investigationEntries: Array<Maybe<EntryInterface>>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type HomepageContentBlocks_InvestigationGrid_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type HomepageContentBlocks_InvestigationGrid_BlockTypeInvestigationEntriesArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};

export type HomepageContentBlocks_Text_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'homepageContentBlocks_text_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  text: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type HomepageContentBlocks_Text_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};

export type HomepageSectionEntryUnion = Homepage_Homepage_Entry;

export type Homepage_Homepage_Entry = ElementInterface & EntryInterface & {
  __typename?: 'homepage_homepage_Entry';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The entry’s author. */
  author: Maybe<UserInterface>;
  /** The ID of the author of this entry. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  homepageContentBlocks: Maybe<Array<Maybe<HomepageContentBlocks_NeoField>>>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Scalars['String']['output'];
  /** The ID of the section that contains the entry. */
  sectionId: Scalars['Int']['output'];
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type Homepage_Homepage_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type Homepage_Homepage_EntryAncestorsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Homepage_Homepage_EntryChildrenArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Homepage_Homepage_EntryDescendantsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Homepage_Homepage_EntryHomepageContentBlocksArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['QueryArgument']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type Homepage_Homepage_EntryLocalizedArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Homepage_Homepage_EntryNextArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Homepage_Homepage_EntryParentArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Homepage_Homepage_EntryPrevArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};

export type Images_ImageGroup_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'images_imageGroup_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the matrix block. */
  fieldId: Scalars['Int']['output'];
  groupName: Maybe<Scalars['String']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  images: Array<Maybe<AssetInterface>>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The ID of the primary owner of the Matrix block. */
  primaryOwnerId: Scalars['Int']['output'];
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the matrix block’s type. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the matrix block’s type. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type Images_ImageGroup_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type Images_ImageGroup_BlockTypeImagesArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type InvestigationsSectionEntryUnion = Investigations_Default_Entry | Investigations_InvestigationParent_Entry | Investigations_InvestigationSectionBreakChild_Entry;

export type Investigations_Default_Entry = ElementInterface & EntryInterface & {
  __typename?: 'investigations_default_Entry';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The entry’s author. */
  author: Maybe<UserInterface>;
  /** The ID of the author of this entry. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  contentBlocks: Maybe<Array<Maybe<ContentBlocks_NeoField>>>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  hasSavePoint: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Scalars['String']['output'];
  /** The ID of the section that contains the entry. */
  sectionId: Scalars['Int']['output'];
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type Investigations_Default_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type Investigations_Default_EntryAncestorsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Investigations_Default_EntryChildrenArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Investigations_Default_EntryContentBlocksArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['QueryArgument']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type Investigations_Default_EntryDescendantsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Investigations_Default_EntryLocalizedArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Investigations_Default_EntryNextArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Investigations_Default_EntryParentArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Investigations_Default_EntryPrevArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};

export type Investigations_InvestigationParent_Entry = ElementInterface & EntryInterface & {
  __typename?: 'investigations_investigationParent_Entry';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The entry’s author. */
  author: Maybe<UserInterface>;
  /** The ID of the author of this entry. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Canto Dam Asset field */
  image: Maybe<Array<Maybe<CantoDamAssetInterface>>>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Scalars['String']['output'];
  /** The ID of the section that contains the entry. */
  sectionId: Scalars['Int']['output'];
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  text: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type Investigations_InvestigationParent_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type Investigations_InvestigationParent_EntryAncestorsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Investigations_InvestigationParent_EntryChildrenArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Investigations_InvestigationParent_EntryDescendantsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Investigations_InvestigationParent_EntryImageArgs = {
  except: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  first: InputMaybe<Scalars['Boolean']['input']>;
  forPage: InputMaybe<ForPageInput>;
  last: InputMaybe<Scalars['Boolean']['input']>;
  nth: InputMaybe<Scalars['Int']['input']>;
  random: InputMaybe<Scalars['Int']['input']>;
  reverse: InputMaybe<Scalars['Boolean']['input']>;
  shuffle: InputMaybe<Scalars['Int']['input']>;
  skip: InputMaybe<Scalars['Int']['input']>;
  sortBy: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sortByDesc: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  where: InputMaybe<WhereFiltersInput>;
  whereBetween: InputMaybe<WhereBetweenFiltersInput>;
  whereContainsIn: InputMaybe<WhereContainsInFilterInput>;
  whereIn: InputMaybe<WhereInFiltersInput>;
  whereNotBetween: InputMaybe<WhereNotBetweenFiltersInput>;
  whereNotIn: InputMaybe<WhereNotInFiltersInput>;
  whereNotNull: InputMaybe<Scalars['String']['input']>;
  whereNull: InputMaybe<Scalars['String']['input']>;
};


export type Investigations_InvestigationParent_EntryLocalizedArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Investigations_InvestigationParent_EntryNextArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Investigations_InvestigationParent_EntryParentArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Investigations_InvestigationParent_EntryPrevArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};

export type Investigations_InvestigationSectionBreakChild_Entry = ElementInterface & EntryInterface & {
  __typename?: 'investigations_investigationSectionBreakChild_Entry';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The entry’s author. */
  author: Maybe<UserInterface>;
  /** The ID of the author of this entry. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Scalars['String']['output'];
  /** The ID of the section that contains the entry. */
  sectionId: Scalars['Int']['output'];
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  text: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type Investigations_InvestigationSectionBreakChild_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type Investigations_InvestigationSectionBreakChild_EntryAncestorsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Investigations_InvestigationSectionBreakChild_EntryChildrenArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Investigations_InvestigationSectionBreakChild_EntryDescendantsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Investigations_InvestigationSectionBreakChild_EntryLocalizedArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Investigations_InvestigationSectionBreakChild_EntryNextArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Investigations_InvestigationSectionBreakChild_EntryParentArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Investigations_InvestigationSectionBreakChild_EntryPrevArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};

/** This is the interface implemented by all links. */
export type LinkField_Link = {
  __typename?: 'linkField_Link';
  ariaLabel: Maybe<Scalars['String']['output']>;
  customText: Maybe<Scalars['String']['output']>;
  element: Maybe<ElementInterface>;
  target: Maybe<Scalars['String']['output']>;
  text: Maybe<Scalars['String']['output']>;
  title: Maybe<Scalars['String']['output']>;
  type: Maybe<Scalars['String']['output']>;
  url: Maybe<Scalars['String']['output']>;
};

export type MenuContent_GlobalSet = ElementInterface & GlobalSetInterface & {
  __typename?: 'menuContent_GlobalSet';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the global set. */
  handle: Scalars['String']['output'];
  helpUrl: Maybe<Scalars['String']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The name of the global set. */
  name: Scalars['String']['output'];
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type MenuContent_GlobalSet_CountArgs = {
  field: Scalars['String']['input'];
};

export type MultiPartBlocks_NeoField = MultiPartBlocks_Multiselect_BlockType | MultiPartBlocks_Number_BlockType | MultiPartBlocks_ReadonlyText_BlockType | MultiPartBlocks_Select_BlockType | MultiPartBlocks_Text_BlockType;

export type MultiPartBlocks_Multiselect_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'multiPartBlocks_multiselect_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  answerOptions: Array<Maybe<AnswerOptions_MatrixField>>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type MultiPartBlocks_Multiselect_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type MultiPartBlocks_Multiselect_BlockTypeAnswerOptionsArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type MultiPartBlocks_Number_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'multiPartBlocks_number_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  maximum: Maybe<Scalars['Number']['output']>;
  minimum: Maybe<Scalars['Number']['output']>;
  precision: Maybe<Scalars['Number']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  validation: Array<Maybe<Validation_MatrixField>>;
};


export type MultiPartBlocks_Number_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type MultiPartBlocks_Number_BlockTypeValidationArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type MultiPartBlocks_ReadonlyText_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'multiPartBlocks_readonlyText_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  questionText: Maybe<Scalars['String']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type MultiPartBlocks_ReadonlyText_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};

export type MultiPartBlocks_Select_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'multiPartBlocks_select_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  answerOptions: Array<Maybe<AnswerOptions_MatrixField>>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type MultiPartBlocks_Select_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type MultiPartBlocks_Select_BlockTypeAnswerOptionsArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type MultiPartBlocks_Text_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'multiPartBlocks_text_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type MultiPartBlocks_Text_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};

export type Objects_Object_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'objects_object_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the matrix block. */
  fieldId: Scalars['Int']['output'];
  filterColorOptions: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  objectCaption: Maybe<Scalars['String']['output']>;
  objectName: Maybe<Scalars['String']['output']>;
  /** The ID of the primary owner of the Matrix block. */
  primaryOwnerId: Scalars['Int']['output'];
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the matrix block’s type. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the matrix block’s type. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type Objects_Object_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type Objects_Object_BlockTypeFilterColorOptionsArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};

export type Options_BlockType = ElementInterface & SuperTableBlockInterface & {
  __typename?: 'options_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Super Table block. */
  fieldId: Scalars['Int']['output'];
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  optionLabel: Maybe<Scalars['String']['output']>;
  optionValue: Maybe<Scalars['String']['output']>;
  /** The ID of the primary owner of the Super Table block. */
  primaryOwnerId: Scalars['Int']['output'];
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Super Table block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the Super Table block‘s type. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type Options_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};

export type Options_SuperTableField = Options_BlockType;

export type PagesSectionEntryUnion = Pages_Pages_Entry | Pages_RedirectPage_Entry;

export type Pages_Pages_Entry = ElementInterface & EntryInterface & {
  __typename?: 'pages_pages_Entry';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The entry’s author. */
  author: Maybe<UserInterface>;
  /** The ID of the author of this entry. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  contentBlocks: Maybe<Array<Maybe<ContentBlocks_NeoField>>>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  hideTitle: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  pageType: Maybe<Scalars['String']['output']>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Scalars['String']['output'];
  /** The ID of the section that contains the entry. */
  sectionId: Scalars['Int']['output'];
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type Pages_Pages_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type Pages_Pages_EntryAncestorsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Pages_Pages_EntryChildrenArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Pages_Pages_EntryContentBlocksArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['QueryArgument']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type Pages_Pages_EntryDescendantsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Pages_Pages_EntryLocalizedArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Pages_Pages_EntryNextArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Pages_Pages_EntryPageTypeArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};


export type Pages_Pages_EntryParentArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Pages_Pages_EntryPrevArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};

export type Pages_RedirectPage_Entry = ElementInterface & EntryInterface & {
  __typename?: 'pages_redirectPage_Entry';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The entry’s author. */
  author: Maybe<UserInterface>;
  /** The ID of the author of this entry. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  hideTitle: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  linkTo: Maybe<LinkField_Link>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Scalars['String']['output'];
  /** The ID of the section that contains the entry. */
  sectionId: Scalars['Int']['output'];
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type Pages_RedirectPage_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type Pages_RedirectPage_EntryAncestorsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Pages_RedirectPage_EntryChildrenArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Pages_RedirectPage_EntryDescendantsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Pages_RedirectPage_EntryLocalizedArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Pages_RedirectPage_EntryNextArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Pages_RedirectPage_EntryParentArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Pages_RedirectPage_EntryPrevArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};

export type QuestionTable_BlockType = ElementInterface & SuperTableBlockInterface & {
  __typename?: 'questionTable_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Super Table block. */
  fieldId: Scalars['Int']['output'];
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The ID of the primary owner of the Super Table block. */
  primaryOwnerId: Scalars['Int']['output'];
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Super Table block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  tableCell: Array<Maybe<TableCell_MatrixField>>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the Super Table block‘s type. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type QuestionTable_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type QuestionTable_BlockTypeTableCellArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type QuestionTable_SuperTableField = QuestionTable_BlockType;

export type QuestionWidgetsBlock_NeoField = QuestionWidgetsBlock_ColorFilterToolBlock_BlockType | QuestionWidgetsBlock_IsochronePlot_BlockType | QuestionWidgetsBlock_LightCurveBlock_BlockType | QuestionWidgetsBlock_SourceSelectorBlock_BlockType;

export type QuestionWidgetsBlock_ColorFilterToolBlock_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'questionWidgetsBlock_colorFilterToolBlock_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  colorFilterTool: Array<Maybe<EntryInterface>>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type QuestionWidgetsBlock_ColorFilterToolBlock_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type QuestionWidgetsBlock_ColorFilterToolBlock_BlockTypeColorFilterToolArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};

export type QuestionWidgetsBlock_IsochronePlot_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'questionWidgetsBlock_isochronePlot_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  dataset: Array<Maybe<EntryInterface>>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  displayName: Maybe<Scalars['String']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type QuestionWidgetsBlock_IsochronePlot_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type QuestionWidgetsBlock_IsochronePlot_BlockTypeDatasetArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};

export type QuestionWidgetsBlock_LightCurveBlock_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'questionWidgetsBlock_lightCurveBlock_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  lightCurveTool: Array<Maybe<EntryInterface>>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type QuestionWidgetsBlock_LightCurveBlock_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type QuestionWidgetsBlock_LightCurveBlock_BlockTypeLightCurveToolArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};

export type QuestionWidgetsBlock_SourceSelectorBlock_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'questionWidgetsBlock_sourceSelectorBlock_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  sourceSelector: Array<Maybe<EntryInterface>>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type QuestionWidgetsBlock_SourceSelectorBlock_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type QuestionWidgetsBlock_SourceSelectorBlock_BlockTypeSourceSelectorArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};

export type QuestionsSectionEntryUnion = Questions_Default_Entry;

export type Questions_Default_Entry = ElementInterface & EntryInterface & {
  __typename?: 'questions_default_Entry';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  answerOptions: Array<Maybe<AnswerOptions_MatrixField>>;
  answerType: Maybe<Scalars['String']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The entry’s author. */
  author: Maybe<UserInterface>;
  /** The ID of the author of this entry. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  equation: Maybe<Scalars['String']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  investigationEntries: Array<Maybe<EntryInterface>>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  maximum: Maybe<Scalars['Number']['output']>;
  minimum: Maybe<Scalars['Number']['output']>;
  multiPartBlocks: Maybe<Array<Maybe<MultiPartBlocks_NeoField>>>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  precision: Maybe<Scalars['Number']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  questionTable: Array<Maybe<QuestionTable_SuperTableField>>;
  questionText: Maybe<Scalars['String']['output']>;
  questionWidgetsBlock: Maybe<Array<Maybe<QuestionWidgetsBlock_NeoField>>>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Scalars['String']['output'];
  /** The ID of the section that contains the entry. */
  sectionId: Scalars['Int']['output'];
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  tableHeader: Array<Maybe<TableHeader_SuperTableField>>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
  validation: Array<Maybe<Validation_MatrixField>>;
  widgetInstructions: Maybe<Scalars['String']['output']>;
};


export type Questions_Default_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type Questions_Default_EntryAncestorsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Questions_Default_EntryAnswerOptionsArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type Questions_Default_EntryAnswerTypeArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};


export type Questions_Default_EntryChildrenArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Questions_Default_EntryDescendantsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Questions_Default_EntryEquationArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};


export type Questions_Default_EntryInvestigationEntriesArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Questions_Default_EntryLocalizedArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Questions_Default_EntryMultiPartBlocksArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['QueryArgument']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type Questions_Default_EntryNextArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Questions_Default_EntryParentArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Questions_Default_EntryPrevArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Questions_Default_EntryQuestionTableArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type Questions_Default_EntryQuestionWidgetsBlockArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['QueryArgument']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type Questions_Default_EntryTableHeaderArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type Questions_Default_EntryValidationArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type ReferenceContentBlocks_NeoField = ReferenceContentBlocks_CameraFilterTool_BlockType | ReferenceContentBlocks_ColorFilterToolBlock_BlockType | ReferenceContentBlocks_FilterTool_BlockType | ReferenceContentBlocks_Image_BlockType | ReferenceContentBlocks_Table_BlockType | ReferenceContentBlocks_Text_BlockType;

export type ReferenceContentBlocks_CameraFilterTool_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'referenceContentBlocks_cameraFilterTool_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  colorFilterTool: Array<Maybe<EntryInterface>>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ReferenceContentBlocks_CameraFilterTool_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type ReferenceContentBlocks_CameraFilterTool_BlockTypeColorFilterToolArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};

export type ReferenceContentBlocks_ColorFilterToolBlock_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'referenceContentBlocks_colorFilterToolBlock_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ReferenceContentBlocks_ColorFilterToolBlock_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};

export type ReferenceContentBlocks_FilterTool_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'referenceContentBlocks_filterTool_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  preSelectedColor: Maybe<Scalars['String']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  readOnly: Maybe<Scalars['Boolean']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ReferenceContentBlocks_FilterTool_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type ReferenceContentBlocks_FilterTool_BlockTypePreSelectedColorArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};

export type ReferenceContentBlocks_Image_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'referenceContentBlocks_image_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  caption: Maybe<Scalars['String']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Canto Dam Asset field */
  image: Maybe<Array<Maybe<CantoDamAssetInterface>>>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  layout: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ReferenceContentBlocks_Image_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type ReferenceContentBlocks_Image_BlockTypeImageArgs = {
  except: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  first: InputMaybe<Scalars['Boolean']['input']>;
  forPage: InputMaybe<ForPageInput>;
  last: InputMaybe<Scalars['Boolean']['input']>;
  nth: InputMaybe<Scalars['Int']['input']>;
  random: InputMaybe<Scalars['Int']['input']>;
  reverse: InputMaybe<Scalars['Boolean']['input']>;
  shuffle: InputMaybe<Scalars['Int']['input']>;
  skip: InputMaybe<Scalars['Int']['input']>;
  sortBy: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sortByDesc: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  where: InputMaybe<WhereFiltersInput>;
  whereBetween: InputMaybe<WhereBetweenFiltersInput>;
  whereContainsIn: InputMaybe<WhereContainsInFilterInput>;
  whereIn: InputMaybe<WhereInFiltersInput>;
  whereNotBetween: InputMaybe<WhereNotBetweenFiltersInput>;
  whereNotIn: InputMaybe<WhereNotInFiltersInput>;
  whereNotNull: InputMaybe<Scalars['String']['input']>;
  whereNull: InputMaybe<Scalars['String']['input']>;
};


export type ReferenceContentBlocks_Image_BlockTypeLayoutArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};

export type ReferenceContentBlocks_Table_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'referenceContentBlocks_table_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  caption: Maybe<Scalars['String']['output']>;
  contentHeading: Maybe<Scalars['String']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  displayTable: Array<Maybe<DisplayTable_SuperTableField>>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ReferenceContentBlocks_Table_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type ReferenceContentBlocks_Table_BlockTypeDisplayTableArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type ReferenceContentBlocks_Text_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'referenceContentBlocks_text_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  text: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ReferenceContentBlocks_Text_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};

export type ReferenceContentSectionEntryUnion = ReferenceContent_Default_Entry;

export type ReferenceContent_Default_Entry = ElementInterface & EntryInterface & {
  __typename?: 'referenceContent_default_Entry';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The entry’s author. */
  author: Maybe<UserInterface>;
  /** The ID of the author of this entry. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  referenceContentBlocks: Maybe<Array<Maybe<ReferenceContentBlocks_NeoField>>>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Scalars['String']['output'];
  /** The ID of the section that contains the entry. */
  sectionId: Scalars['Int']['output'];
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type ReferenceContent_Default_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type ReferenceContent_Default_EntryAncestorsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type ReferenceContent_Default_EntryChildrenArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type ReferenceContent_Default_EntryDescendantsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type ReferenceContent_Default_EntryLocalizedArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type ReferenceContent_Default_EntryNextArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type ReferenceContent_Default_EntryParentArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type ReferenceContent_Default_EntryPrevArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type ReferenceContent_Default_EntryReferenceContentBlocksArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['QueryArgument']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type SiteInfo_GlobalSet = ElementInterface & GlobalSetInterface & {
  __typename?: 'siteInfo_GlobalSet';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the global set. */
  handle: Scalars['String']['output'];
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The name of the global set. */
  name: Scalars['String']['output'];
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  siteDescription: Maybe<Scalars['String']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  siteTitle: Maybe<Scalars['String']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type SiteInfo_GlobalSet_CountArgs = {
  field: Scalars['String']['input'];
};

export type SortOptions_Category = CategoryInterface & ElementInterface & {
  __typename?: 'sortOptions_Category';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The category’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<CategoryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The category’s children. */
  children: Array<CategoryInterface>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The category’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<CategoryInterface>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the group that contains the category. */
  groupHandle: Scalars['String']['output'];
  /** The ID of the group that contains the category. */
  groupId: Scalars['Int']['output'];
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<CategoryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<CategoryInterface>;
  /** The category’s parent. */
  parent: Maybe<CategoryInterface>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<CategoryInterface>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type SortOptions_Category_CountArgs = {
  field: Scalars['String']['input'];
};


export type SortOptions_CategoryAncestorsArgs = {
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type SortOptions_CategoryChildrenArgs = {
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type SortOptions_CategoryDescendantsArgs = {
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type SortOptions_CategoryLocalizedArgs = {
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type SortOptions_CategoryNextArgs = {
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type SortOptions_CategoryParentArgs = {
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type SortOptions_CategoryPrevArgs = {
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};

export type TableCell_MatrixField = TableCell_PreviousQuestion_BlockType | TableCell_Question_BlockType | TableCell_RowHeader_BlockType | TableCell_Static_BlockType;

export type TableCell_PreviousQuestion_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'tableCell_previousQuestion_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the matrix block. */
  fieldId: Scalars['Int']['output'];
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The ID of the primary owner of the Matrix block. */
  primaryOwnerId: Scalars['Int']['output'];
  question: Array<Maybe<EntryInterface>>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the matrix block’s type. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the matrix block’s type. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type TableCell_PreviousQuestion_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type TableCell_PreviousQuestion_BlockTypeQuestionArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};

export type TableCell_Question_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'tableCell_question_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the matrix block. */
  fieldId: Scalars['Int']['output'];
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  options: Array<Maybe<Options_SuperTableField>>;
  /** The ID of the primary owner of the Matrix block. */
  primaryOwnerId: Scalars['Int']['output'];
  questionType: Maybe<Scalars['String']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the matrix block’s type. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the matrix block’s type. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type TableCell_Question_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type TableCell_Question_BlockTypeOptionsArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type TableCell_Question_BlockTypeQuestionTypeArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};

export type TableCell_RowHeader_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'tableCell_rowHeader_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  equation: Maybe<Scalars['String']['output']>;
  /** The ID of the field that owns the matrix block. */
  fieldId: Scalars['Int']['output'];
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The ID of the primary owner of the Matrix block. */
  primaryOwnerId: Scalars['Int']['output'];
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  text: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the matrix block’s type. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the matrix block’s type. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type TableCell_RowHeader_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};

export type TableCell_Static_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'tableCell_static_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  equation: Maybe<Scalars['String']['output']>;
  /** The ID of the field that owns the matrix block. */
  fieldId: Scalars['Int']['output'];
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The ID of the primary owner of the Matrix block. */
  primaryOwnerId: Scalars['Int']['output'];
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  text: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the matrix block’s type. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the matrix block’s type. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type TableCell_Static_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};

export type TableHeader_BlockType = ElementInterface & SuperTableBlockInterface & {
  __typename?: 'tableHeader_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Super Table block. */
  fieldId: Scalars['Int']['output'];
  headerRow: Array<Maybe<HeaderRow_MatrixField>>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The ID of the primary owner of the Super Table block. */
  primaryOwnerId: Scalars['Int']['output'];
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Super Table block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the Super Table block‘s type. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type TableHeader_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type TableHeader_BlockTypeHeaderRowArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type TableHeader_SuperTableField = TableHeader_BlockType;

export type TableRow_MatrixField = TableRow_PreviousQuestion_BlockType | TableRow_RowHeader_BlockType | TableRow_TableCell_BlockType;

export type TableRow_PreviousQuestion_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'tableRow_previousQuestion_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the matrix block. */
  fieldId: Scalars['Int']['output'];
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The ID of the primary owner of the Matrix block. */
  primaryOwnerId: Scalars['Int']['output'];
  question: Array<Maybe<EntryInterface>>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the matrix block’s type. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the matrix block’s type. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type TableRow_PreviousQuestion_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type TableRow_PreviousQuestion_BlockTypeQuestionArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};

export type TableRow_RowHeader_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'tableRow_rowHeader_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  equation: Maybe<Scalars['String']['output']>;
  /** The ID of the field that owns the matrix block. */
  fieldId: Scalars['Int']['output'];
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The ID of the primary owner of the Matrix block. */
  primaryOwnerId: Scalars['Int']['output'];
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  text: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the matrix block’s type. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the matrix block’s type. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type TableRow_RowHeader_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};

export type TableRow_TableCell_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'tableRow_tableCell_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  cellContent: Maybe<Scalars['String']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  equation: Maybe<Scalars['String']['output']>;
  /** The ID of the field that owns the matrix block. */
  fieldId: Scalars['Int']['output'];
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The ID of the primary owner of the Matrix block. */
  primaryOwnerId: Scalars['Int']['output'];
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the matrix block’s type. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the matrix block’s type. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type TableRow_TableCell_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};

export type Validation_MatrixField = Validation_NumberValidator_BlockType;

export type Validation_NumberValidator_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'validation_numberValidator_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  comparison: Maybe<Scalars['String']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the matrix block. */
  fieldId: Scalars['Int']['output'];
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  message: Maybe<Scalars['String']['output']>;
  operator: Maybe<Scalars['String']['output']>;
  /** The ID of the primary owner of the Matrix block. */
  primaryOwnerId: Scalars['Int']['output'];
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the matrix block’s type. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the matrix block’s type. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type Validation_NumberValidator_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type Validation_NumberValidator_BlockTypeOperatorArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};

export type WidgetsSectionEntryUnion = Widgets_ColorFilterTool_Entry | Widgets_IsochronePlot_Entry | Widgets_LightCurveTool_Entry | Widgets_SourceSelector_Entry;

export type Widgets_ColorFilterTool_Entry = ElementInterface & EntryInterface & {
  __typename?: 'widgets_colorFilterTool_Entry';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The entry’s author. */
  author: Maybe<UserInterface>;
  /** The ID of the author of this entry. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  colorFilterToolObjects: Maybe<Array<Maybe<ColorFilterToolObjects_NeoField>>>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  displayName: Maybe<Scalars['String']['output']>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  filterColorOptions: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  filterToolActions: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Scalars['String']['output'];
  /** The ID of the section that contains the entry. */
  sectionId: Scalars['Int']['output'];
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type Widgets_ColorFilterTool_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type Widgets_ColorFilterTool_EntryAncestorsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Widgets_ColorFilterTool_EntryChildrenArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Widgets_ColorFilterTool_EntryColorFilterToolObjectsArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['QueryArgument']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type Widgets_ColorFilterTool_EntryDescendantsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Widgets_ColorFilterTool_EntryFilterColorOptionsArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};


export type Widgets_ColorFilterTool_EntryFilterToolActionsArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};


export type Widgets_ColorFilterTool_EntryLocalizedArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Widgets_ColorFilterTool_EntryNextArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Widgets_ColorFilterTool_EntryParentArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Widgets_ColorFilterTool_EntryPrevArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};

export type Widgets_IsochronePlot_Entry = ElementInterface & EntryInterface & {
  __typename?: 'widgets_isochronePlot_Entry';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The entry’s author. */
  author: Maybe<UserInterface>;
  /** The ID of the author of this entry. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  dataset: Array<Maybe<EntryInterface>>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  displayName: Maybe<Scalars['String']['output']>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Scalars['String']['output'];
  /** The ID of the section that contains the entry. */
  sectionId: Scalars['Int']['output'];
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
  xAxisMax: Maybe<Scalars['Number']['output']>;
  xAxisMin: Maybe<Scalars['Number']['output']>;
  yAxisMax: Maybe<Scalars['Number']['output']>;
  yAxisMin: Maybe<Scalars['Number']['output']>;
};


export type Widgets_IsochronePlot_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type Widgets_IsochronePlot_EntryAncestorsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Widgets_IsochronePlot_EntryChildrenArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Widgets_IsochronePlot_EntryDatasetArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Widgets_IsochronePlot_EntryDescendantsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Widgets_IsochronePlot_EntryLocalizedArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Widgets_IsochronePlot_EntryNextArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Widgets_IsochronePlot_EntryParentArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Widgets_IsochronePlot_EntryPrevArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};

export type Widgets_LightCurveTool_Entry = ElementInterface & EntryInterface & {
  __typename?: 'widgets_lightCurveTool_Entry';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The entry’s author. */
  author: Maybe<UserInterface>;
  /** The ID of the author of this entry. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  dataset: Array<Maybe<EntryInterface>>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  displayName: Maybe<Scalars['String']['output']>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Scalars['String']['output'];
  /** The ID of the section that contains the entry. */
  sectionId: Scalars['Int']['output'];
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
  yAxisMax: Maybe<Scalars['Number']['output']>;
  yAxisMin: Maybe<Scalars['Number']['output']>;
};


export type Widgets_LightCurveTool_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type Widgets_LightCurveTool_EntryAncestorsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Widgets_LightCurveTool_EntryChildrenArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Widgets_LightCurveTool_EntryDatasetArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Widgets_LightCurveTool_EntryDescendantsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Widgets_LightCurveTool_EntryLocalizedArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Widgets_LightCurveTool_EntryNextArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Widgets_LightCurveTool_EntryParentArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Widgets_LightCurveTool_EntryPrevArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};

export type Widgets_SourceSelector_Entry = ElementInterface & EntryInterface & {
  __typename?: 'widgets_sourceSelector_Entry';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The entry’s author. */
  author: Maybe<UserInterface>;
  /** The ID of the author of this entry. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  dataset: Array<Maybe<EntryInterface>>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  displayName: Maybe<Scalars['String']['output']>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  includeScatterPlot: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Scalars['String']['output'];
  /** The ID of the section that contains the entry. */
  sectionId: Scalars['Int']['output'];
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
  yAxisMax: Maybe<Scalars['Number']['output']>;
  yAxisMin: Maybe<Scalars['Number']['output']>;
};


export type Widgets_SourceSelector_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type Widgets_SourceSelector_EntryAncestorsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Widgets_SourceSelector_EntryChildrenArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Widgets_SourceSelector_EntryDatasetArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Widgets_SourceSelector_EntryDescendantsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Widgets_SourceSelector_EntryLocalizedArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Widgets_SourceSelector_EntryNextArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Widgets_SourceSelector_EntryParentArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type Widgets_SourceSelector_EntryPrevArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  answerType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  dataset: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dec: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  displayName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  distance: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  equation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterColorOptions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  filterToolActions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  galacticLatitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  galacticLongitude: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  hasSavePoint: InputMaybe<Scalars['Boolean']['input']>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeScatterPlot: InputMaybe<Scalars['Boolean']['input']>;
  investigationEntries: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  json: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  maximum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  minimum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  mjd: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plotPoints: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  precision: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  questionText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ra: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  widgetInstructions: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
  xAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  xAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMax: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  yAxisMin: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};

export type InvestigationChildPageQueryVariables = Exact<{
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>> | InputMaybe<Scalars['String']['input']>>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>> | InputMaybe<Scalars['String']['input']>>;
}>;


export type InvestigationChildPageQuery = { __typename?: 'Query', entry: { __typename?: 'datasets_starCluster_Entry' } | { __typename?: 'datasets_supernovaGalaxyObservations_Entry' } | { __typename?: 'homepage_homepage_Entry' } | (
    { __typename?: 'investigations_default_Entry' }
    & { ' $fragmentRefs'?: { 'InvestigationChildPageTemplateFragment': InvestigationChildPageTemplateFragment } }
  ) | { __typename?: 'investigations_investigationParent_Entry' } | (
    { __typename?: 'investigations_investigationSectionBreakChild_Entry' }
    & { ' $fragmentRefs'?: { 'InvestigationSectionBreakTemplateFragment': InvestigationSectionBreakTemplateFragment } }
  ) | { __typename?: 'pages_pages_Entry' } | { __typename?: 'pages_redirectPage_Entry' } | { __typename?: 'questions_default_Entry' } | { __typename?: 'referenceContent_default_Entry' } | { __typename?: 'widgets_colorFilterTool_Entry' } | { __typename?: 'widgets_isochronePlot_Entry' } | { __typename?: 'widgets_lightCurveTool_Entry' } | { __typename?: 'widgets_sourceSelector_Entry' } | null };

export type InvestigationPageParamsQueryVariables = Exact<{
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>> | InputMaybe<Scalars['String']['input']>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>> | InputMaybe<Scalars['String']['input']>>;
}>;


export type InvestigationPageParamsQuery = { __typename?: 'Query', entry: { __typename?: 'datasets_starCluster_Entry', children: Array<{ __typename?: 'datasets_starCluster_Entry' } | { __typename?: 'datasets_supernovaGalaxyObservations_Entry' } | { __typename?: 'homepage_homepage_Entry' } | { __typename?: 'investigations_default_Entry', slug: string | null } | { __typename?: 'investigations_investigationParent_Entry' } | { __typename?: 'investigations_investigationSectionBreakChild_Entry', slug: string | null } | { __typename?: 'pages_pages_Entry' } | { __typename?: 'pages_redirectPage_Entry' } | { __typename?: 'questions_default_Entry' } | { __typename?: 'referenceContent_default_Entry' } | { __typename?: 'widgets_colorFilterTool_Entry' } | { __typename?: 'widgets_isochronePlot_Entry' } | { __typename?: 'widgets_lightCurveTool_Entry' } | { __typename?: 'widgets_sourceSelector_Entry' }> } | { __typename?: 'datasets_supernovaGalaxyObservations_Entry', children: Array<{ __typename?: 'datasets_starCluster_Entry' } | { __typename?: 'datasets_supernovaGalaxyObservations_Entry' } | { __typename?: 'homepage_homepage_Entry' } | { __typename?: 'investigations_default_Entry', slug: string | null } | { __typename?: 'investigations_investigationParent_Entry' } | { __typename?: 'investigations_investigationSectionBreakChild_Entry', slug: string | null } | { __typename?: 'pages_pages_Entry' } | { __typename?: 'pages_redirectPage_Entry' } | { __typename?: 'questions_default_Entry' } | { __typename?: 'referenceContent_default_Entry' } | { __typename?: 'widgets_colorFilterTool_Entry' } | { __typename?: 'widgets_isochronePlot_Entry' } | { __typename?: 'widgets_lightCurveTool_Entry' } | { __typename?: 'widgets_sourceSelector_Entry' }> } | { __typename?: 'homepage_homepage_Entry', children: Array<{ __typename?: 'datasets_starCluster_Entry' } | { __typename?: 'datasets_supernovaGalaxyObservations_Entry' } | { __typename?: 'homepage_homepage_Entry' } | { __typename?: 'investigations_default_Entry', slug: string | null } | { __typename?: 'investigations_investigationParent_Entry' } | { __typename?: 'investigations_investigationSectionBreakChild_Entry', slug: string | null } | { __typename?: 'pages_pages_Entry' } | { __typename?: 'pages_redirectPage_Entry' } | { __typename?: 'questions_default_Entry' } | { __typename?: 'referenceContent_default_Entry' } | { __typename?: 'widgets_colorFilterTool_Entry' } | { __typename?: 'widgets_isochronePlot_Entry' } | { __typename?: 'widgets_lightCurveTool_Entry' } | { __typename?: 'widgets_sourceSelector_Entry' }> } | { __typename?: 'investigations_default_Entry', children: Array<{ __typename?: 'datasets_starCluster_Entry' } | { __typename?: 'datasets_supernovaGalaxyObservations_Entry' } | { __typename?: 'homepage_homepage_Entry' } | { __typename?: 'investigations_default_Entry', slug: string | null } | { __typename?: 'investigations_investigationParent_Entry' } | { __typename?: 'investigations_investigationSectionBreakChild_Entry', slug: string | null } | { __typename?: 'pages_pages_Entry' } | { __typename?: 'pages_redirectPage_Entry' } | { __typename?: 'questions_default_Entry' } | { __typename?: 'referenceContent_default_Entry' } | { __typename?: 'widgets_colorFilterTool_Entry' } | { __typename?: 'widgets_isochronePlot_Entry' } | { __typename?: 'widgets_lightCurveTool_Entry' } | { __typename?: 'widgets_sourceSelector_Entry' }> } | { __typename?: 'investigations_investigationParent_Entry', children: Array<{ __typename?: 'datasets_starCluster_Entry' } | { __typename?: 'datasets_supernovaGalaxyObservations_Entry' } | { __typename?: 'homepage_homepage_Entry' } | { __typename?: 'investigations_default_Entry', slug: string | null } | { __typename?: 'investigations_investigationParent_Entry' } | { __typename?: 'investigations_investigationSectionBreakChild_Entry', slug: string | null } | { __typename?: 'pages_pages_Entry' } | { __typename?: 'pages_redirectPage_Entry' } | { __typename?: 'questions_default_Entry' } | { __typename?: 'referenceContent_default_Entry' } | { __typename?: 'widgets_colorFilterTool_Entry' } | { __typename?: 'widgets_isochronePlot_Entry' } | { __typename?: 'widgets_lightCurveTool_Entry' } | { __typename?: 'widgets_sourceSelector_Entry' }> } | { __typename?: 'investigations_investigationSectionBreakChild_Entry', children: Array<{ __typename?: 'datasets_starCluster_Entry' } | { __typename?: 'datasets_supernovaGalaxyObservations_Entry' } | { __typename?: 'homepage_homepage_Entry' } | { __typename?: 'investigations_default_Entry', slug: string | null } | { __typename?: 'investigations_investigationParent_Entry' } | { __typename?: 'investigations_investigationSectionBreakChild_Entry', slug: string | null } | { __typename?: 'pages_pages_Entry' } | { __typename?: 'pages_redirectPage_Entry' } | { __typename?: 'questions_default_Entry' } | { __typename?: 'referenceContent_default_Entry' } | { __typename?: 'widgets_colorFilterTool_Entry' } | { __typename?: 'widgets_isochronePlot_Entry' } | { __typename?: 'widgets_lightCurveTool_Entry' } | { __typename?: 'widgets_sourceSelector_Entry' }> } | { __typename?: 'pages_pages_Entry', children: Array<{ __typename?: 'datasets_starCluster_Entry' } | { __typename?: 'datasets_supernovaGalaxyObservations_Entry' } | { __typename?: 'homepage_homepage_Entry' } | { __typename?: 'investigations_default_Entry', slug: string | null } | { __typename?: 'investigations_investigationParent_Entry' } | { __typename?: 'investigations_investigationSectionBreakChild_Entry', slug: string | null } | { __typename?: 'pages_pages_Entry' } | { __typename?: 'pages_redirectPage_Entry' } | { __typename?: 'questions_default_Entry' } | { __typename?: 'referenceContent_default_Entry' } | { __typename?: 'widgets_colorFilterTool_Entry' } | { __typename?: 'widgets_isochronePlot_Entry' } | { __typename?: 'widgets_lightCurveTool_Entry' } | { __typename?: 'widgets_sourceSelector_Entry' }> } | { __typename?: 'pages_redirectPage_Entry', children: Array<{ __typename?: 'datasets_starCluster_Entry' } | { __typename?: 'datasets_supernovaGalaxyObservations_Entry' } | { __typename?: 'homepage_homepage_Entry' } | { __typename?: 'investigations_default_Entry', slug: string | null } | { __typename?: 'investigations_investigationParent_Entry' } | { __typename?: 'investigations_investigationSectionBreakChild_Entry', slug: string | null } | { __typename?: 'pages_pages_Entry' } | { __typename?: 'pages_redirectPage_Entry' } | { __typename?: 'questions_default_Entry' } | { __typename?: 'referenceContent_default_Entry' } | { __typename?: 'widgets_colorFilterTool_Entry' } | { __typename?: 'widgets_isochronePlot_Entry' } | { __typename?: 'widgets_lightCurveTool_Entry' } | { __typename?: 'widgets_sourceSelector_Entry' }> } | { __typename?: 'questions_default_Entry', children: Array<{ __typename?: 'datasets_starCluster_Entry' } | { __typename?: 'datasets_supernovaGalaxyObservations_Entry' } | { __typename?: 'homepage_homepage_Entry' } | { __typename?: 'investigations_default_Entry', slug: string | null } | { __typename?: 'investigations_investigationParent_Entry' } | { __typename?: 'investigations_investigationSectionBreakChild_Entry', slug: string | null } | { __typename?: 'pages_pages_Entry' } | { __typename?: 'pages_redirectPage_Entry' } | { __typename?: 'questions_default_Entry' } | { __typename?: 'referenceContent_default_Entry' } | { __typename?: 'widgets_colorFilterTool_Entry' } | { __typename?: 'widgets_isochronePlot_Entry' } | { __typename?: 'widgets_lightCurveTool_Entry' } | { __typename?: 'widgets_sourceSelector_Entry' }> } | { __typename?: 'referenceContent_default_Entry', children: Array<{ __typename?: 'datasets_starCluster_Entry' } | { __typename?: 'datasets_supernovaGalaxyObservations_Entry' } | { __typename?: 'homepage_homepage_Entry' } | { __typename?: 'investigations_default_Entry', slug: string | null } | { __typename?: 'investigations_investigationParent_Entry' } | { __typename?: 'investigations_investigationSectionBreakChild_Entry', slug: string | null } | { __typename?: 'pages_pages_Entry' } | { __typename?: 'pages_redirectPage_Entry' } | { __typename?: 'questions_default_Entry' } | { __typename?: 'referenceContent_default_Entry' } | { __typename?: 'widgets_colorFilterTool_Entry' } | { __typename?: 'widgets_isochronePlot_Entry' } | { __typename?: 'widgets_lightCurveTool_Entry' } | { __typename?: 'widgets_sourceSelector_Entry' }> } | { __typename?: 'widgets_colorFilterTool_Entry', children: Array<{ __typename?: 'datasets_starCluster_Entry' } | { __typename?: 'datasets_supernovaGalaxyObservations_Entry' } | { __typename?: 'homepage_homepage_Entry' } | { __typename?: 'investigations_default_Entry', slug: string | null } | { __typename?: 'investigations_investigationParent_Entry' } | { __typename?: 'investigations_investigationSectionBreakChild_Entry', slug: string | null } | { __typename?: 'pages_pages_Entry' } | { __typename?: 'pages_redirectPage_Entry' } | { __typename?: 'questions_default_Entry' } | { __typename?: 'referenceContent_default_Entry' } | { __typename?: 'widgets_colorFilterTool_Entry' } | { __typename?: 'widgets_isochronePlot_Entry' } | { __typename?: 'widgets_lightCurveTool_Entry' } | { __typename?: 'widgets_sourceSelector_Entry' }> } | { __typename?: 'widgets_isochronePlot_Entry', children: Array<{ __typename?: 'datasets_starCluster_Entry' } | { __typename?: 'datasets_supernovaGalaxyObservations_Entry' } | { __typename?: 'homepage_homepage_Entry' } | { __typename?: 'investigations_default_Entry', slug: string | null } | { __typename?: 'investigations_investigationParent_Entry' } | { __typename?: 'investigations_investigationSectionBreakChild_Entry', slug: string | null } | { __typename?: 'pages_pages_Entry' } | { __typename?: 'pages_redirectPage_Entry' } | { __typename?: 'questions_default_Entry' } | { __typename?: 'referenceContent_default_Entry' } | { __typename?: 'widgets_colorFilterTool_Entry' } | { __typename?: 'widgets_isochronePlot_Entry' } | { __typename?: 'widgets_lightCurveTool_Entry' } | { __typename?: 'widgets_sourceSelector_Entry' }> } | { __typename?: 'widgets_lightCurveTool_Entry', children: Array<{ __typename?: 'datasets_starCluster_Entry' } | { __typename?: 'datasets_supernovaGalaxyObservations_Entry' } | { __typename?: 'homepage_homepage_Entry' } | { __typename?: 'investigations_default_Entry', slug: string | null } | { __typename?: 'investigations_investigationParent_Entry' } | { __typename?: 'investigations_investigationSectionBreakChild_Entry', slug: string | null } | { __typename?: 'pages_pages_Entry' } | { __typename?: 'pages_redirectPage_Entry' } | { __typename?: 'questions_default_Entry' } | { __typename?: 'referenceContent_default_Entry' } | { __typename?: 'widgets_colorFilterTool_Entry' } | { __typename?: 'widgets_isochronePlot_Entry' } | { __typename?: 'widgets_lightCurveTool_Entry' } | { __typename?: 'widgets_sourceSelector_Entry' }> } | { __typename?: 'widgets_sourceSelector_Entry', children: Array<{ __typename?: 'datasets_starCluster_Entry' } | { __typename?: 'datasets_supernovaGalaxyObservations_Entry' } | { __typename?: 'homepage_homepage_Entry' } | { __typename?: 'investigations_default_Entry', slug: string | null } | { __typename?: 'investigations_investigationParent_Entry' } | { __typename?: 'investigations_investigationSectionBreakChild_Entry', slug: string | null } | { __typename?: 'pages_pages_Entry' } | { __typename?: 'pages_redirectPage_Entry' } | { __typename?: 'questions_default_Entry' } | { __typename?: 'referenceContent_default_Entry' } | { __typename?: 'widgets_colorFilterTool_Entry' } | { __typename?: 'widgets_isochronePlot_Entry' } | { __typename?: 'widgets_lightCurveTool_Entry' } | { __typename?: 'widgets_sourceSelector_Entry' }> } | null };

export type InvestigationChildPageMetadataQueryVariables = Exact<{
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>> | InputMaybe<Scalars['String']['input']>>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>> | InputMaybe<Scalars['String']['input']>>;
}>;


export type InvestigationChildPageMetadataQuery = { __typename?: 'Query', entry: { __typename?: 'datasets_starCluster_Entry', title: string | null } | { __typename?: 'datasets_supernovaGalaxyObservations_Entry', title: string | null } | { __typename?: 'homepage_homepage_Entry', title: string | null } | { __typename?: 'investigations_default_Entry', title: string | null } | { __typename?: 'investigations_investigationParent_Entry', title: string | null } | { __typename?: 'investigations_investigationSectionBreakChild_Entry', title: string | null } | { __typename?: 'pages_pages_Entry', title: string | null } | { __typename?: 'pages_redirectPage_Entry', title: string | null } | { __typename?: 'questions_default_Entry', title: string | null } | { __typename?: 'referenceContent_default_Entry', title: string | null } | { __typename?: 'widgets_colorFilterTool_Entry', title: string | null } | { __typename?: 'widgets_isochronePlot_Entry', title: string | null } | { __typename?: 'widgets_lightCurveTool_Entry', title: string | null } | { __typename?: 'widgets_sourceSelector_Entry', title: string | null } | null };

export type InvestigationMetadataQueryVariables = Exact<{
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>> | InputMaybe<Scalars['String']['input']>>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>> | InputMaybe<Scalars['String']['input']>>;
}>;


export type InvestigationMetadataQuery = { __typename?: 'Query', entry: { __typename?: 'datasets_starCluster_Entry' } | { __typename?: 'datasets_supernovaGalaxyObservations_Entry' } | { __typename?: 'homepage_homepage_Entry' } | { __typename?: 'investigations_default_Entry' } | { __typename?: 'investigations_investigationParent_Entry', title: string | null } | { __typename?: 'investigations_investigationSectionBreakChild_Entry' } | { __typename?: 'pages_pages_Entry' } | { __typename?: 'pages_redirectPage_Entry' } | { __typename?: 'questions_default_Entry' } | { __typename?: 'referenceContent_default_Entry' } | { __typename?: 'widgets_colorFilterTool_Entry' } | { __typename?: 'widgets_isochronePlot_Entry' } | { __typename?: 'widgets_lightCurveTool_Entry' } | { __typename?: 'widgets_sourceSelector_Entry' } | null };

export type InvestigationParamsQueryVariables = Exact<{
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>> | InputMaybe<Scalars['String']['input']>>;
}>;


export type InvestigationParamsQuery = { __typename?: 'Query', investigationsEntries: Array<{ __typename?: 'investigations_default_Entry' } | { __typename?: 'investigations_investigationParent_Entry', slug: string | null } | { __typename?: 'investigations_investigationSectionBreakChild_Entry' } | null> | null };

export type InvestigationIdQueryVariables = Exact<{
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>> | InputMaybe<Scalars['String']['input']>>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>> | InputMaybe<Scalars['String']['input']>>;
}>;


export type InvestigationIdQuery = { __typename?: 'Query', entry: { __typename?: 'datasets_starCluster_Entry' } | { __typename?: 'datasets_supernovaGalaxyObservations_Entry' } | { __typename?: 'homepage_homepage_Entry' } | { __typename?: 'investigations_default_Entry' } | { __typename: 'investigations_investigationParent_Entry', id: string | null, acknowledgements: string | null, children: Array<{ __typename: 'datasets_starCluster_Entry', title: string | null, id: string | null, uri: string | null } | { __typename: 'datasets_supernovaGalaxyObservations_Entry', title: string | null, id: string | null, uri: string | null } | { __typename: 'homepage_homepage_Entry', title: string | null, id: string | null, uri: string | null } | { __typename: 'investigations_default_Entry', hasSavePoint: boolean | null, title: string | null, id: string | null, uri: string | null, contentBlocks: Array<{ __typename: 'contentBlocks_barGraphTool_BlockType' } | { __typename: 'contentBlocks_cameraFilterTool_BlockType' } | { __typename: 'contentBlocks_colLeft_BlockType' } | { __typename: 'contentBlocks_colRight_BlockType' } | { __typename: 'contentBlocks_colorFilterToolBlock_BlockType' } | { __typename: 'contentBlocks_equation_BlockType' } | { __typename: 'contentBlocks_filterTool_BlockType' } | { __typename: 'contentBlocks_group_BlockType', group: Array<{ __typename?: 'colorFilterToolObjects_filterimage_BlockType' } | { __typename?: 'colorFilterToolObjects_group_BlockType' } | { __typename?: 'colorFilterToolObjects_object_BlockType' } | { __typename?: 'contentBlocks_barGraphTool_BlockType' } | { __typename?: 'contentBlocks_cameraFilterTool_BlockType' } | { __typename?: 'contentBlocks_colLeft_BlockType' } | { __typename?: 'contentBlocks_colRight_BlockType' } | { __typename?: 'contentBlocks_colorFilterToolBlock_BlockType' } | { __typename?: 'contentBlocks_equation_BlockType' } | { __typename?: 'contentBlocks_filterTool_BlockType' } | { __typename?: 'contentBlocks_group_BlockType' } | { __typename?: 'contentBlocks_image_BlockType' } | { __typename?: 'contentBlocks_magnitudeScatterPlot_BlockType' } | (
          { __typename?: 'contentBlocks_questionBlock_BlockType' }
          & { ' $fragmentRefs'?: { 'QuestionsBlockFragment': QuestionsBlockFragment } }
        ) | { __typename?: 'contentBlocks_referenceBlock_BlockType' } | { __typename?: 'contentBlocks_scatterplotTool_BlockType' } | { __typename?: 'contentBlocks_supernovaDistanceDistribution_BlockType' } | { __typename?: 'contentBlocks_table_BlockType' } | { __typename?: 'contentBlocks_text_BlockType' } | { __typename?: 'contentBlocks_twoColumnContainer_BlockType' } | { __typename?: 'contentBlocks_video_BlockType' } | { __typename?: 'homepageContentBlocks_image_BlockType' } | { __typename?: 'homepageContentBlocks_investigationGrid_BlockType' } | { __typename?: 'homepageContentBlocks_text_BlockType' } | { __typename?: 'multiPartBlocks_multiselect_BlockType' } | { __typename?: 'multiPartBlocks_number_BlockType' } | { __typename?: 'multiPartBlocks_readonlyText_BlockType' } | { __typename?: 'multiPartBlocks_select_BlockType' } | { __typename?: 'multiPartBlocks_text_BlockType' } | { __typename?: 'questionWidgetsBlock_colorFilterToolBlock_BlockType' } | { __typename?: 'questionWidgetsBlock_isochronePlot_BlockType' } | { __typename?: 'questionWidgetsBlock_lightCurveBlock_BlockType' } | { __typename?: 'questionWidgetsBlock_sourceSelectorBlock_BlockType' } | { __typename?: 'referenceContentBlocks_cameraFilterTool_BlockType' } | { __typename?: 'referenceContentBlocks_colorFilterToolBlock_BlockType' } | { __typename?: 'referenceContentBlocks_filterTool_BlockType' } | { __typename?: 'referenceContentBlocks_image_BlockType' } | { __typename?: 'referenceContentBlocks_table_BlockType' } | { __typename?: 'referenceContentBlocks_text_BlockType' } | null> | null } | { __typename: 'contentBlocks_image_BlockType' } | { __typename: 'contentBlocks_magnitudeScatterPlot_BlockType' } | (
        { __typename: 'contentBlocks_questionBlock_BlockType' }
        & { ' $fragmentRefs'?: { 'QuestionsBlockFragment': QuestionsBlockFragment } }
      ) | { __typename: 'contentBlocks_referenceBlock_BlockType' } | { __typename: 'contentBlocks_scatterplotTool_BlockType' } | { __typename: 'contentBlocks_supernovaDistanceDistribution_BlockType' } | { __typename: 'contentBlocks_table_BlockType' } | { __typename: 'contentBlocks_text_BlockType' } | { __typename: 'contentBlocks_twoColumnContainer_BlockType', columns: Array<{ __typename: 'colorFilterToolObjects_filterimage_BlockType' } | { __typename: 'colorFilterToolObjects_group_BlockType' } | { __typename: 'colorFilterToolObjects_object_BlockType' } | { __typename: 'contentBlocks_barGraphTool_BlockType' } | { __typename: 'contentBlocks_cameraFilterTool_BlockType' } | { __typename: 'contentBlocks_colLeft_BlockType', children: Array<{ __typename?: 'colorFilterToolObjects_filterimage_BlockType' } | { __typename?: 'colorFilterToolObjects_group_BlockType' } | { __typename?: 'colorFilterToolObjects_object_BlockType' } | { __typename?: 'contentBlocks_barGraphTool_BlockType' } | { __typename?: 'contentBlocks_cameraFilterTool_BlockType' } | { __typename?: 'contentBlocks_colLeft_BlockType' } | { __typename?: 'contentBlocks_colRight_BlockType' } | { __typename?: 'contentBlocks_colorFilterToolBlock_BlockType' } | { __typename?: 'contentBlocks_equation_BlockType' } | { __typename?: 'contentBlocks_filterTool_BlockType' } | { __typename?: 'contentBlocks_group_BlockType', group: Array<{ __typename?: 'colorFilterToolObjects_filterimage_BlockType' } | { __typename?: 'colorFilterToolObjects_group_BlockType' } | { __typename?: 'colorFilterToolObjects_object_BlockType' } | { __typename?: 'contentBlocks_barGraphTool_BlockType' } | { __typename?: 'contentBlocks_cameraFilterTool_BlockType' } | { __typename?: 'contentBlocks_colLeft_BlockType' } | { __typename?: 'contentBlocks_colRight_BlockType' } | { __typename?: 'contentBlocks_colorFilterToolBlock_BlockType' } | { __typename?: 'contentBlocks_equation_BlockType' } | { __typename?: 'contentBlocks_filterTool_BlockType' } | { __typename?: 'contentBlocks_group_BlockType' } | { __typename?: 'contentBlocks_image_BlockType' } | { __typename?: 'contentBlocks_magnitudeScatterPlot_BlockType' } | (
              { __typename?: 'contentBlocks_questionBlock_BlockType' }
              & { ' $fragmentRefs'?: { 'QuestionsBlockFragment': QuestionsBlockFragment } }
            ) | { __typename?: 'contentBlocks_referenceBlock_BlockType' } | { __typename?: 'contentBlocks_scatterplotTool_BlockType' } | { __typename?: 'contentBlocks_supernovaDistanceDistribution_BlockType' } | { __typename?: 'contentBlocks_table_BlockType' } | { __typename?: 'contentBlocks_text_BlockType' } | { __typename?: 'contentBlocks_twoColumnContainer_BlockType' } | { __typename?: 'contentBlocks_video_BlockType' } | { __typename?: 'homepageContentBlocks_image_BlockType' } | { __typename?: 'homepageContentBlocks_investigationGrid_BlockType' } | { __typename?: 'homepageContentBlocks_text_BlockType' } | { __typename?: 'multiPartBlocks_multiselect_BlockType' } | { __typename?: 'multiPartBlocks_number_BlockType' } | { __typename?: 'multiPartBlocks_readonlyText_BlockType' } | { __typename?: 'multiPartBlocks_select_BlockType' } | { __typename?: 'multiPartBlocks_text_BlockType' } | { __typename?: 'questionWidgetsBlock_colorFilterToolBlock_BlockType' } | { __typename?: 'questionWidgetsBlock_isochronePlot_BlockType' } | { __typename?: 'questionWidgetsBlock_lightCurveBlock_BlockType' } | { __typename?: 'questionWidgetsBlock_sourceSelectorBlock_BlockType' } | { __typename?: 'referenceContentBlocks_cameraFilterTool_BlockType' } | { __typename?: 'referenceContentBlocks_colorFilterToolBlock_BlockType' } | { __typename?: 'referenceContentBlocks_filterTool_BlockType' } | { __typename?: 'referenceContentBlocks_image_BlockType' } | { __typename?: 'referenceContentBlocks_table_BlockType' } | { __typename?: 'referenceContentBlocks_text_BlockType' } | null> | null } | { __typename?: 'contentBlocks_image_BlockType' } | { __typename?: 'contentBlocks_magnitudeScatterPlot_BlockType' } | (
            { __typename?: 'contentBlocks_questionBlock_BlockType' }
            & { ' $fragmentRefs'?: { 'QuestionsBlockFragment': QuestionsBlockFragment } }
          ) | { __typename?: 'contentBlocks_referenceBlock_BlockType' } | { __typename?: 'contentBlocks_scatterplotTool_BlockType' } | { __typename?: 'contentBlocks_supernovaDistanceDistribution_BlockType' } | { __typename?: 'contentBlocks_table_BlockType' } | { __typename?: 'contentBlocks_text_BlockType' } | { __typename?: 'contentBlocks_twoColumnContainer_BlockType' } | { __typename?: 'contentBlocks_video_BlockType' } | { __typename?: 'homepageContentBlocks_image_BlockType' } | { __typename?: 'homepageContentBlocks_investigationGrid_BlockType' } | { __typename?: 'homepageContentBlocks_text_BlockType' } | { __typename?: 'multiPartBlocks_multiselect_BlockType' } | { __typename?: 'multiPartBlocks_number_BlockType' } | { __typename?: 'multiPartBlocks_readonlyText_BlockType' } | { __typename?: 'multiPartBlocks_select_BlockType' } | { __typename?: 'multiPartBlocks_text_BlockType' } | { __typename?: 'questionWidgetsBlock_colorFilterToolBlock_BlockType' } | { __typename?: 'questionWidgetsBlock_isochronePlot_BlockType' } | { __typename?: 'questionWidgetsBlock_lightCurveBlock_BlockType' } | { __typename?: 'questionWidgetsBlock_sourceSelectorBlock_BlockType' } | { __typename?: 'referenceContentBlocks_cameraFilterTool_BlockType' } | { __typename?: 'referenceContentBlocks_colorFilterToolBlock_BlockType' } | { __typename?: 'referenceContentBlocks_filterTool_BlockType' } | { __typename?: 'referenceContentBlocks_image_BlockType' } | { __typename?: 'referenceContentBlocks_table_BlockType' } | { __typename?: 'referenceContentBlocks_text_BlockType' } | null> | null } | { __typename: 'contentBlocks_colRight_BlockType', children: Array<{ __typename: 'colorFilterToolObjects_filterimage_BlockType' } | { __typename: 'colorFilterToolObjects_group_BlockType' } | { __typename: 'colorFilterToolObjects_object_BlockType' } | { __typename: 'contentBlocks_barGraphTool_BlockType' } | { __typename: 'contentBlocks_cameraFilterTool_BlockType' } | { __typename: 'contentBlocks_colLeft_BlockType' } | { __typename: 'contentBlocks_colRight_BlockType' } | { __typename: 'contentBlocks_colorFilterToolBlock_BlockType' } | { __typename: 'contentBlocks_equation_BlockType' } | { __typename: 'contentBlocks_filterTool_BlockType' } | { __typename: 'contentBlocks_group_BlockType', group: Array<{ __typename?: 'colorFilterToolObjects_filterimage_BlockType' } | { __typename?: 'colorFilterToolObjects_group_BlockType' } | { __typename?: 'colorFilterToolObjects_object_BlockType' } | { __typename?: 'contentBlocks_barGraphTool_BlockType' } | { __typename?: 'contentBlocks_cameraFilterTool_BlockType' } | { __typename?: 'contentBlocks_colLeft_BlockType' } | { __typename?: 'contentBlocks_colRight_BlockType' } | { __typename?: 'contentBlocks_colorFilterToolBlock_BlockType' } | { __typename?: 'contentBlocks_equation_BlockType' } | { __typename?: 'contentBlocks_filterTool_BlockType' } | { __typename?: 'contentBlocks_group_BlockType' } | { __typename?: 'contentBlocks_image_BlockType' } | { __typename?: 'contentBlocks_magnitudeScatterPlot_BlockType' } | { __typename: 'contentBlocks_questionBlock_BlockType', questionEntries: Array<{ __typename?: 'datasets_starCluster_Entry' } | { __typename?: 'datasets_supernovaGalaxyObservations_Entry' } | { __typename?: 'homepage_homepage_Entry' } | { __typename?: 'investigations_default_Entry' } | { __typename?: 'investigations_investigationParent_Entry' } | { __typename?: 'investigations_investigationSectionBreakChild_Entry' } | { __typename?: 'pages_pages_Entry' } | { __typename?: 'pages_redirectPage_Entry' } | (
                { __typename?: 'questions_default_Entry' }
                & { ' $fragmentRefs'?: { 'QuestionEntryFragment': QuestionEntryFragment } }
              ) | { __typename?: 'referenceContent_default_Entry' } | { __typename?: 'widgets_colorFilterTool_Entry' } | { __typename?: 'widgets_isochronePlot_Entry' } | { __typename?: 'widgets_lightCurveTool_Entry' } | { __typename?: 'widgets_sourceSelector_Entry' } | null> } | { __typename?: 'contentBlocks_referenceBlock_BlockType' } | { __typename?: 'contentBlocks_scatterplotTool_BlockType' } | { __typename?: 'contentBlocks_supernovaDistanceDistribution_BlockType' } | { __typename?: 'contentBlocks_table_BlockType' } | { __typename?: 'contentBlocks_text_BlockType' } | { __typename?: 'contentBlocks_twoColumnContainer_BlockType' } | { __typename?: 'contentBlocks_video_BlockType' } | { __typename?: 'homepageContentBlocks_image_BlockType' } | { __typename?: 'homepageContentBlocks_investigationGrid_BlockType' } | { __typename?: 'homepageContentBlocks_text_BlockType' } | { __typename?: 'multiPartBlocks_multiselect_BlockType' } | { __typename?: 'multiPartBlocks_number_BlockType' } | { __typename?: 'multiPartBlocks_readonlyText_BlockType' } | { __typename?: 'multiPartBlocks_select_BlockType' } | { __typename?: 'multiPartBlocks_text_BlockType' } | { __typename?: 'questionWidgetsBlock_colorFilterToolBlock_BlockType' } | { __typename?: 'questionWidgetsBlock_isochronePlot_BlockType' } | { __typename?: 'questionWidgetsBlock_lightCurveBlock_BlockType' } | { __typename?: 'questionWidgetsBlock_sourceSelectorBlock_BlockType' } | { __typename?: 'referenceContentBlocks_cameraFilterTool_BlockType' } | { __typename?: 'referenceContentBlocks_colorFilterToolBlock_BlockType' } | { __typename?: 'referenceContentBlocks_filterTool_BlockType' } | { __typename?: 'referenceContentBlocks_image_BlockType' } | { __typename?: 'referenceContentBlocks_table_BlockType' } | { __typename?: 'referenceContentBlocks_text_BlockType' } | null> | null } | { __typename: 'contentBlocks_image_BlockType' } | { __typename: 'contentBlocks_magnitudeScatterPlot_BlockType' } | (
            { __typename: 'contentBlocks_questionBlock_BlockType' }
            & { ' $fragmentRefs'?: { 'QuestionsBlockFragment': QuestionsBlockFragment } }
          ) | { __typename: 'contentBlocks_referenceBlock_BlockType' } | { __typename: 'contentBlocks_scatterplotTool_BlockType' } | { __typename: 'contentBlocks_supernovaDistanceDistribution_BlockType' } | { __typename: 'contentBlocks_table_BlockType' } | { __typename: 'contentBlocks_text_BlockType' } | { __typename: 'contentBlocks_twoColumnContainer_BlockType' } | { __typename: 'contentBlocks_video_BlockType' } | { __typename: 'homepageContentBlocks_image_BlockType' } | { __typename: 'homepageContentBlocks_investigationGrid_BlockType' } | { __typename: 'homepageContentBlocks_text_BlockType' } | { __typename: 'multiPartBlocks_multiselect_BlockType' } | { __typename: 'multiPartBlocks_number_BlockType' } | { __typename: 'multiPartBlocks_readonlyText_BlockType' } | { __typename: 'multiPartBlocks_select_BlockType' } | { __typename: 'multiPartBlocks_text_BlockType' } | { __typename: 'questionWidgetsBlock_colorFilterToolBlock_BlockType' } | { __typename: 'questionWidgetsBlock_isochronePlot_BlockType' } | { __typename: 'questionWidgetsBlock_lightCurveBlock_BlockType' } | { __typename: 'questionWidgetsBlock_sourceSelectorBlock_BlockType' } | { __typename: 'referenceContentBlocks_cameraFilterTool_BlockType' } | { __typename: 'referenceContentBlocks_colorFilterToolBlock_BlockType' } | { __typename: 'referenceContentBlocks_filterTool_BlockType' } | { __typename: 'referenceContentBlocks_image_BlockType' } | { __typename: 'referenceContentBlocks_table_BlockType' } | { __typename: 'referenceContentBlocks_text_BlockType' } | null> | null } | { __typename: 'contentBlocks_colorFilterToolBlock_BlockType' } | { __typename: 'contentBlocks_equation_BlockType' } | { __typename: 'contentBlocks_filterTool_BlockType' } | { __typename: 'contentBlocks_group_BlockType' } | { __typename: 'contentBlocks_image_BlockType' } | { __typename: 'contentBlocks_magnitudeScatterPlot_BlockType' } | { __typename: 'contentBlocks_questionBlock_BlockType' } | { __typename: 'contentBlocks_referenceBlock_BlockType' } | { __typename: 'contentBlocks_scatterplotTool_BlockType' } | { __typename: 'contentBlocks_supernovaDistanceDistribution_BlockType' } | { __typename: 'contentBlocks_table_BlockType' } | { __typename: 'contentBlocks_text_BlockType' } | { __typename: 'contentBlocks_twoColumnContainer_BlockType' } | { __typename: 'contentBlocks_video_BlockType' } | { __typename: 'homepageContentBlocks_image_BlockType' } | { __typename: 'homepageContentBlocks_investigationGrid_BlockType' } | { __typename: 'homepageContentBlocks_text_BlockType' } | { __typename: 'multiPartBlocks_multiselect_BlockType' } | { __typename: 'multiPartBlocks_number_BlockType' } | { __typename: 'multiPartBlocks_readonlyText_BlockType' } | { __typename: 'multiPartBlocks_select_BlockType' } | { __typename: 'multiPartBlocks_text_BlockType' } | { __typename: 'questionWidgetsBlock_colorFilterToolBlock_BlockType' } | { __typename: 'questionWidgetsBlock_isochronePlot_BlockType' } | { __typename: 'questionWidgetsBlock_lightCurveBlock_BlockType' } | { __typename: 'questionWidgetsBlock_sourceSelectorBlock_BlockType' } | { __typename: 'referenceContentBlocks_cameraFilterTool_BlockType' } | { __typename: 'referenceContentBlocks_colorFilterToolBlock_BlockType' } | { __typename: 'referenceContentBlocks_filterTool_BlockType' } | { __typename: 'referenceContentBlocks_image_BlockType' } | { __typename: 'referenceContentBlocks_table_BlockType' } | { __typename: 'referenceContentBlocks_text_BlockType' } | null> | null } | { __typename: 'contentBlocks_video_BlockType' } | null> | null } | { __typename: 'investigations_investigationParent_Entry', title: string | null, id: string | null, uri: string | null } | { __typename: 'investigations_investigationSectionBreakChild_Entry', title: string | null, id: string | null, uri: string | null } | { __typename: 'pages_pages_Entry', title: string | null, id: string | null, uri: string | null } | { __typename: 'pages_redirectPage_Entry', title: string | null, id: string | null, uri: string | null } | { __typename: 'questions_default_Entry', title: string | null, id: string | null, uri: string | null } | { __typename: 'referenceContent_default_Entry', title: string | null, id: string | null, uri: string | null } | { __typename: 'widgets_colorFilterTool_Entry', title: string | null, id: string | null, uri: string | null } | { __typename: 'widgets_isochronePlot_Entry', title: string | null, id: string | null, uri: string | null } | { __typename: 'widgets_lightCurveTool_Entry', title: string | null, id: string | null, uri: string | null } | { __typename: 'widgets_sourceSelector_Entry', title: string | null, id: string | null, uri: string | null }> } | { __typename?: 'investigations_investigationSectionBreakChild_Entry' } | { __typename?: 'pages_pages_Entry' } | { __typename?: 'pages_redirectPage_Entry' } | { __typename?: 'questions_default_Entry' } | { __typename?: 'referenceContent_default_Entry' } | { __typename?: 'widgets_colorFilterTool_Entry' } | { __typename?: 'widgets_isochronePlot_Entry' } | { __typename?: 'widgets_lightCurveTool_Entry' } | { __typename?: 'widgets_sourceSelector_Entry' } | null };

export type InvestigationPageQueryVariables = Exact<{
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>> | InputMaybe<Scalars['String']['input']>>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>> | InputMaybe<Scalars['String']['input']>>;
}>;


export type InvestigationPageQuery = { __typename?: 'Query', entry: { __typename: 'datasets_starCluster_Entry' } | { __typename: 'datasets_supernovaGalaxyObservations_Entry' } | { __typename: 'homepage_homepage_Entry' } | { __typename: 'investigations_default_Entry' } | (
    { __typename: 'investigations_investigationParent_Entry' }
    & { ' $fragmentRefs'?: { 'InvestigationLandingPageTemplateFragment': InvestigationLandingPageTemplateFragment } }
  ) | { __typename: 'investigations_investigationSectionBreakChild_Entry' } | { __typename: 'pages_pages_Entry' } | { __typename: 'pages_redirectPage_Entry' } | { __typename: 'questions_default_Entry' } | { __typename: 'referenceContent_default_Entry' } | { __typename: 'widgets_colorFilterTool_Entry' } | { __typename: 'widgets_isochronePlot_Entry' } | { __typename: 'widgets_lightCurveTool_Entry' } | { __typename: 'widgets_sourceSelector_Entry' } | null };

export type ReviewPageQueryVariables = Exact<{
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>> | InputMaybe<Scalars['String']['input']>>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>> | InputMaybe<Scalars['String']['input']>>;
}>;


export type ReviewPageQuery = { __typename?: 'Query', entry: { __typename?: 'datasets_starCluster_Entry' } | { __typename?: 'datasets_supernovaGalaxyObservations_Entry' } | { __typename?: 'homepage_homepage_Entry' } | { __typename?: 'investigations_default_Entry' } | { __typename?: 'investigations_investigationParent_Entry', title: string | null, children: Array<{ __typename?: 'datasets_starCluster_Entry' } | { __typename?: 'datasets_supernovaGalaxyObservations_Entry' } | { __typename?: 'homepage_homepage_Entry' } | { __typename?: 'investigations_default_Entry', contentBlocks: Array<{ __typename?: 'contentBlocks_barGraphTool_BlockType' } | { __typename?: 'contentBlocks_cameraFilterTool_BlockType' } | { __typename?: 'contentBlocks_colLeft_BlockType' } | { __typename?: 'contentBlocks_colRight_BlockType' } | { __typename?: 'contentBlocks_colorFilterToolBlock_BlockType' } | { __typename?: 'contentBlocks_equation_BlockType' } | { __typename?: 'contentBlocks_filterTool_BlockType' } | { __typename?: 'contentBlocks_group_BlockType', group: Array<{ __typename?: 'colorFilterToolObjects_filterimage_BlockType' } | { __typename?: 'colorFilterToolObjects_group_BlockType' } | { __typename?: 'colorFilterToolObjects_object_BlockType' } | { __typename?: 'contentBlocks_barGraphTool_BlockType' } | { __typename?: 'contentBlocks_cameraFilterTool_BlockType' } | { __typename?: 'contentBlocks_colLeft_BlockType' } | { __typename?: 'contentBlocks_colRight_BlockType' } | { __typename?: 'contentBlocks_colorFilterToolBlock_BlockType' } | { __typename?: 'contentBlocks_equation_BlockType' } | { __typename?: 'contentBlocks_filterTool_BlockType' } | { __typename?: 'contentBlocks_group_BlockType' } | { __typename?: 'contentBlocks_image_BlockType' } | { __typename?: 'contentBlocks_magnitudeScatterPlot_BlockType' } | (
          { __typename?: 'contentBlocks_questionBlock_BlockType' }
          & { ' $fragmentRefs'?: { 'QuestionsBlockFragment': QuestionsBlockFragment } }
        ) | { __typename?: 'contentBlocks_referenceBlock_BlockType' } | { __typename?: 'contentBlocks_scatterplotTool_BlockType' } | { __typename?: 'contentBlocks_supernovaDistanceDistribution_BlockType' } | { __typename?: 'contentBlocks_table_BlockType' } | { __typename?: 'contentBlocks_text_BlockType' } | { __typename?: 'contentBlocks_twoColumnContainer_BlockType' } | { __typename?: 'contentBlocks_video_BlockType' } | { __typename?: 'homepageContentBlocks_image_BlockType' } | { __typename?: 'homepageContentBlocks_investigationGrid_BlockType' } | { __typename?: 'homepageContentBlocks_text_BlockType' } | { __typename?: 'multiPartBlocks_multiselect_BlockType' } | { __typename?: 'multiPartBlocks_number_BlockType' } | { __typename?: 'multiPartBlocks_readonlyText_BlockType' } | { __typename?: 'multiPartBlocks_select_BlockType' } | { __typename?: 'multiPartBlocks_text_BlockType' } | { __typename?: 'questionWidgetsBlock_colorFilterToolBlock_BlockType' } | { __typename?: 'questionWidgetsBlock_isochronePlot_BlockType' } | { __typename?: 'questionWidgetsBlock_lightCurveBlock_BlockType' } | { __typename?: 'questionWidgetsBlock_sourceSelectorBlock_BlockType' } | { __typename?: 'referenceContentBlocks_cameraFilterTool_BlockType' } | { __typename?: 'referenceContentBlocks_colorFilterToolBlock_BlockType' } | { __typename?: 'referenceContentBlocks_filterTool_BlockType' } | { __typename?: 'referenceContentBlocks_image_BlockType' } | { __typename?: 'referenceContentBlocks_table_BlockType' } | { __typename?: 'referenceContentBlocks_text_BlockType' } | null> | null } | { __typename?: 'contentBlocks_image_BlockType' } | { __typename?: 'contentBlocks_magnitudeScatterPlot_BlockType' } | (
        { __typename?: 'contentBlocks_questionBlock_BlockType' }
        & { ' $fragmentRefs'?: { 'QuestionsBlockFragment': QuestionsBlockFragment } }
      ) | { __typename?: 'contentBlocks_referenceBlock_BlockType' } | { __typename?: 'contentBlocks_scatterplotTool_BlockType' } | { __typename?: 'contentBlocks_supernovaDistanceDistribution_BlockType' } | { __typename?: 'contentBlocks_table_BlockType' } | { __typename?: 'contentBlocks_text_BlockType' } | { __typename?: 'contentBlocks_twoColumnContainer_BlockType', columns: Array<{ __typename?: 'colorFilterToolObjects_filterimage_BlockType' } | { __typename?: 'colorFilterToolObjects_group_BlockType' } | { __typename?: 'colorFilterToolObjects_object_BlockType' } | { __typename?: 'contentBlocks_barGraphTool_BlockType' } | { __typename?: 'contentBlocks_cameraFilterTool_BlockType' } | { __typename?: 'contentBlocks_colLeft_BlockType', children: Array<{ __typename?: 'colorFilterToolObjects_filterimage_BlockType' } | { __typename?: 'colorFilterToolObjects_group_BlockType' } | { __typename?: 'colorFilterToolObjects_object_BlockType' } | { __typename?: 'contentBlocks_barGraphTool_BlockType' } | { __typename?: 'contentBlocks_cameraFilterTool_BlockType' } | { __typename?: 'contentBlocks_colLeft_BlockType' } | { __typename?: 'contentBlocks_colRight_BlockType' } | { __typename?: 'contentBlocks_colorFilterToolBlock_BlockType' } | { __typename?: 'contentBlocks_equation_BlockType' } | { __typename?: 'contentBlocks_filterTool_BlockType' } | { __typename?: 'contentBlocks_group_BlockType', group: Array<{ __typename?: 'colorFilterToolObjects_filterimage_BlockType' } | { __typename?: 'colorFilterToolObjects_group_BlockType' } | { __typename?: 'colorFilterToolObjects_object_BlockType' } | { __typename?: 'contentBlocks_barGraphTool_BlockType' } | { __typename?: 'contentBlocks_cameraFilterTool_BlockType' } | { __typename?: 'contentBlocks_colLeft_BlockType' } | { __typename?: 'contentBlocks_colRight_BlockType' } | { __typename?: 'contentBlocks_colorFilterToolBlock_BlockType' } | { __typename?: 'contentBlocks_equation_BlockType' } | { __typename?: 'contentBlocks_filterTool_BlockType' } | { __typename?: 'contentBlocks_group_BlockType' } | { __typename?: 'contentBlocks_image_BlockType' } | { __typename?: 'contentBlocks_magnitudeScatterPlot_BlockType' } | (
              { __typename?: 'contentBlocks_questionBlock_BlockType' }
              & { ' $fragmentRefs'?: { 'QuestionsBlockFragment': QuestionsBlockFragment } }
            ) | { __typename?: 'contentBlocks_referenceBlock_BlockType' } | { __typename?: 'contentBlocks_scatterplotTool_BlockType' } | { __typename?: 'contentBlocks_supernovaDistanceDistribution_BlockType' } | { __typename?: 'contentBlocks_table_BlockType' } | { __typename?: 'contentBlocks_text_BlockType' } | { __typename?: 'contentBlocks_twoColumnContainer_BlockType' } | { __typename?: 'contentBlocks_video_BlockType' } | { __typename?: 'homepageContentBlocks_image_BlockType' } | { __typename?: 'homepageContentBlocks_investigationGrid_BlockType' } | { __typename?: 'homepageContentBlocks_text_BlockType' } | { __typename?: 'multiPartBlocks_multiselect_BlockType' } | { __typename?: 'multiPartBlocks_number_BlockType' } | { __typename?: 'multiPartBlocks_readonlyText_BlockType' } | { __typename?: 'multiPartBlocks_select_BlockType' } | { __typename?: 'multiPartBlocks_text_BlockType' } | { __typename?: 'questionWidgetsBlock_colorFilterToolBlock_BlockType' } | { __typename?: 'questionWidgetsBlock_isochronePlot_BlockType' } | { __typename?: 'questionWidgetsBlock_lightCurveBlock_BlockType' } | { __typename?: 'questionWidgetsBlock_sourceSelectorBlock_BlockType' } | { __typename?: 'referenceContentBlocks_cameraFilterTool_BlockType' } | { __typename?: 'referenceContentBlocks_colorFilterToolBlock_BlockType' } | { __typename?: 'referenceContentBlocks_filterTool_BlockType' } | { __typename?: 'referenceContentBlocks_image_BlockType' } | { __typename?: 'referenceContentBlocks_table_BlockType' } | { __typename?: 'referenceContentBlocks_text_BlockType' } | null> | null } | { __typename?: 'contentBlocks_image_BlockType' } | { __typename?: 'contentBlocks_magnitudeScatterPlot_BlockType' } | (
            { __typename?: 'contentBlocks_questionBlock_BlockType' }
            & { ' $fragmentRefs'?: { 'QuestionsBlockFragment': QuestionsBlockFragment } }
          ) | { __typename?: 'contentBlocks_referenceBlock_BlockType' } | { __typename?: 'contentBlocks_scatterplotTool_BlockType' } | { __typename?: 'contentBlocks_supernovaDistanceDistribution_BlockType' } | { __typename?: 'contentBlocks_table_BlockType' } | { __typename?: 'contentBlocks_text_BlockType' } | { __typename?: 'contentBlocks_twoColumnContainer_BlockType' } | { __typename?: 'contentBlocks_video_BlockType' } | { __typename?: 'homepageContentBlocks_image_BlockType' } | { __typename?: 'homepageContentBlocks_investigationGrid_BlockType' } | { __typename?: 'homepageContentBlocks_text_BlockType' } | { __typename?: 'multiPartBlocks_multiselect_BlockType' } | { __typename?: 'multiPartBlocks_number_BlockType' } | { __typename?: 'multiPartBlocks_readonlyText_BlockType' } | { __typename?: 'multiPartBlocks_select_BlockType' } | { __typename?: 'multiPartBlocks_text_BlockType' } | { __typename?: 'questionWidgetsBlock_colorFilterToolBlock_BlockType' } | { __typename?: 'questionWidgetsBlock_isochronePlot_BlockType' } | { __typename?: 'questionWidgetsBlock_lightCurveBlock_BlockType' } | { __typename?: 'questionWidgetsBlock_sourceSelectorBlock_BlockType' } | { __typename?: 'referenceContentBlocks_cameraFilterTool_BlockType' } | { __typename?: 'referenceContentBlocks_colorFilterToolBlock_BlockType' } | { __typename?: 'referenceContentBlocks_filterTool_BlockType' } | { __typename?: 'referenceContentBlocks_image_BlockType' } | { __typename?: 'referenceContentBlocks_table_BlockType' } | { __typename?: 'referenceContentBlocks_text_BlockType' } | null> | null } | { __typename?: 'contentBlocks_colRight_BlockType', children: Array<{ __typename?: 'colorFilterToolObjects_filterimage_BlockType' } | { __typename?: 'colorFilterToolObjects_group_BlockType' } | { __typename?: 'colorFilterToolObjects_object_BlockType' } | { __typename?: 'contentBlocks_barGraphTool_BlockType' } | { __typename?: 'contentBlocks_cameraFilterTool_BlockType' } | { __typename?: 'contentBlocks_colLeft_BlockType' } | { __typename?: 'contentBlocks_colRight_BlockType' } | { __typename?: 'contentBlocks_colorFilterToolBlock_BlockType' } | { __typename?: 'contentBlocks_equation_BlockType' } | { __typename?: 'contentBlocks_filterTool_BlockType' } | { __typename?: 'contentBlocks_group_BlockType', group: Array<{ __typename?: 'colorFilterToolObjects_filterimage_BlockType' } | { __typename?: 'colorFilterToolObjects_group_BlockType' } | { __typename?: 'colorFilterToolObjects_object_BlockType' } | { __typename?: 'contentBlocks_barGraphTool_BlockType' } | { __typename?: 'contentBlocks_cameraFilterTool_BlockType' } | { __typename?: 'contentBlocks_colLeft_BlockType' } | { __typename?: 'contentBlocks_colRight_BlockType' } | { __typename?: 'contentBlocks_colorFilterToolBlock_BlockType' } | { __typename?: 'contentBlocks_equation_BlockType' } | { __typename?: 'contentBlocks_filterTool_BlockType' } | { __typename?: 'contentBlocks_group_BlockType' } | { __typename?: 'contentBlocks_image_BlockType' } | { __typename?: 'contentBlocks_magnitudeScatterPlot_BlockType' } | { __typename?: 'contentBlocks_questionBlock_BlockType', questionEntries: Array<{ __typename?: 'datasets_starCluster_Entry' } | { __typename?: 'datasets_supernovaGalaxyObservations_Entry' } | { __typename?: 'homepage_homepage_Entry' } | { __typename?: 'investigations_default_Entry' } | { __typename?: 'investigations_investigationParent_Entry' } | { __typename?: 'investigations_investigationSectionBreakChild_Entry' } | { __typename?: 'pages_pages_Entry' } | { __typename?: 'pages_redirectPage_Entry' } | (
                { __typename?: 'questions_default_Entry' }
                & { ' $fragmentRefs'?: { 'QuestionEntryFragment': QuestionEntryFragment } }
              ) | { __typename?: 'referenceContent_default_Entry' } | { __typename?: 'widgets_colorFilterTool_Entry' } | { __typename?: 'widgets_isochronePlot_Entry' } | { __typename?: 'widgets_lightCurveTool_Entry' } | { __typename?: 'widgets_sourceSelector_Entry' } | null> } | { __typename?: 'contentBlocks_referenceBlock_BlockType' } | { __typename?: 'contentBlocks_scatterplotTool_BlockType' } | { __typename?: 'contentBlocks_supernovaDistanceDistribution_BlockType' } | { __typename?: 'contentBlocks_table_BlockType' } | { __typename?: 'contentBlocks_text_BlockType' } | { __typename?: 'contentBlocks_twoColumnContainer_BlockType' } | { __typename?: 'contentBlocks_video_BlockType' } | { __typename?: 'homepageContentBlocks_image_BlockType' } | { __typename?: 'homepageContentBlocks_investigationGrid_BlockType' } | { __typename?: 'homepageContentBlocks_text_BlockType' } | { __typename?: 'multiPartBlocks_multiselect_BlockType' } | { __typename?: 'multiPartBlocks_number_BlockType' } | { __typename?: 'multiPartBlocks_readonlyText_BlockType' } | { __typename?: 'multiPartBlocks_select_BlockType' } | { __typename?: 'multiPartBlocks_text_BlockType' } | { __typename?: 'questionWidgetsBlock_colorFilterToolBlock_BlockType' } | { __typename?: 'questionWidgetsBlock_isochronePlot_BlockType' } | { __typename?: 'questionWidgetsBlock_lightCurveBlock_BlockType' } | { __typename?: 'questionWidgetsBlock_sourceSelectorBlock_BlockType' } | { __typename?: 'referenceContentBlocks_cameraFilterTool_BlockType' } | { __typename?: 'referenceContentBlocks_colorFilterToolBlock_BlockType' } | { __typename?: 'referenceContentBlocks_filterTool_BlockType' } | { __typename?: 'referenceContentBlocks_image_BlockType' } | { __typename?: 'referenceContentBlocks_table_BlockType' } | { __typename?: 'referenceContentBlocks_text_BlockType' } | null> | null } | { __typename?: 'contentBlocks_image_BlockType' } | { __typename?: 'contentBlocks_magnitudeScatterPlot_BlockType' } | (
            { __typename?: 'contentBlocks_questionBlock_BlockType' }
            & { ' $fragmentRefs'?: { 'QuestionsBlockFragment': QuestionsBlockFragment } }
          ) | { __typename?: 'contentBlocks_referenceBlock_BlockType' } | { __typename?: 'contentBlocks_scatterplotTool_BlockType' } | { __typename?: 'contentBlocks_supernovaDistanceDistribution_BlockType' } | { __typename?: 'contentBlocks_table_BlockType' } | { __typename?: 'contentBlocks_text_BlockType' } | { __typename?: 'contentBlocks_twoColumnContainer_BlockType' } | { __typename?: 'contentBlocks_video_BlockType' } | { __typename?: 'homepageContentBlocks_image_BlockType' } | { __typename?: 'homepageContentBlocks_investigationGrid_BlockType' } | { __typename?: 'homepageContentBlocks_text_BlockType' } | { __typename?: 'multiPartBlocks_multiselect_BlockType' } | { __typename?: 'multiPartBlocks_number_BlockType' } | { __typename?: 'multiPartBlocks_readonlyText_BlockType' } | { __typename?: 'multiPartBlocks_select_BlockType' } | { __typename?: 'multiPartBlocks_text_BlockType' } | { __typename?: 'questionWidgetsBlock_colorFilterToolBlock_BlockType' } | { __typename?: 'questionWidgetsBlock_isochronePlot_BlockType' } | { __typename?: 'questionWidgetsBlock_lightCurveBlock_BlockType' } | { __typename?: 'questionWidgetsBlock_sourceSelectorBlock_BlockType' } | { __typename?: 'referenceContentBlocks_cameraFilterTool_BlockType' } | { __typename?: 'referenceContentBlocks_colorFilterToolBlock_BlockType' } | { __typename?: 'referenceContentBlocks_filterTool_BlockType' } | { __typename?: 'referenceContentBlocks_image_BlockType' } | { __typename?: 'referenceContentBlocks_table_BlockType' } | { __typename?: 'referenceContentBlocks_text_BlockType' } | null> | null } | { __typename?: 'contentBlocks_colorFilterToolBlock_BlockType' } | { __typename?: 'contentBlocks_equation_BlockType' } | { __typename?: 'contentBlocks_filterTool_BlockType' } | { __typename?: 'contentBlocks_group_BlockType' } | { __typename?: 'contentBlocks_image_BlockType' } | { __typename?: 'contentBlocks_magnitudeScatterPlot_BlockType' } | { __typename?: 'contentBlocks_questionBlock_BlockType' } | { __typename?: 'contentBlocks_referenceBlock_BlockType' } | { __typename?: 'contentBlocks_scatterplotTool_BlockType' } | { __typename?: 'contentBlocks_supernovaDistanceDistribution_BlockType' } | { __typename?: 'contentBlocks_table_BlockType' } | { __typename?: 'contentBlocks_text_BlockType' } | { __typename?: 'contentBlocks_twoColumnContainer_BlockType' } | { __typename?: 'contentBlocks_video_BlockType' } | { __typename?: 'homepageContentBlocks_image_BlockType' } | { __typename?: 'homepageContentBlocks_investigationGrid_BlockType' } | { __typename?: 'homepageContentBlocks_text_BlockType' } | { __typename?: 'multiPartBlocks_multiselect_BlockType' } | { __typename?: 'multiPartBlocks_number_BlockType' } | { __typename?: 'multiPartBlocks_readonlyText_BlockType' } | { __typename?: 'multiPartBlocks_select_BlockType' } | { __typename?: 'multiPartBlocks_text_BlockType' } | { __typename?: 'questionWidgetsBlock_colorFilterToolBlock_BlockType' } | { __typename?: 'questionWidgetsBlock_isochronePlot_BlockType' } | { __typename?: 'questionWidgetsBlock_lightCurveBlock_BlockType' } | { __typename?: 'questionWidgetsBlock_sourceSelectorBlock_BlockType' } | { __typename?: 'referenceContentBlocks_cameraFilterTool_BlockType' } | { __typename?: 'referenceContentBlocks_colorFilterToolBlock_BlockType' } | { __typename?: 'referenceContentBlocks_filterTool_BlockType' } | { __typename?: 'referenceContentBlocks_image_BlockType' } | { __typename?: 'referenceContentBlocks_table_BlockType' } | { __typename?: 'referenceContentBlocks_text_BlockType' } | null> | null } | { __typename?: 'contentBlocks_video_BlockType' } | null> | null } | { __typename?: 'investigations_investigationParent_Entry' } | { __typename?: 'investigations_investigationSectionBreakChild_Entry' } | { __typename?: 'pages_pages_Entry' } | { __typename?: 'pages_redirectPage_Entry' } | { __typename?: 'questions_default_Entry' } | { __typename?: 'referenceContent_default_Entry' } | { __typename?: 'widgets_colorFilterTool_Entry' } | { __typename?: 'widgets_isochronePlot_Entry' } | { __typename?: 'widgets_lightCurveTool_Entry' } | { __typename?: 'widgets_sourceSelector_Entry' }> } | { __typename?: 'investigations_investigationSectionBreakChild_Entry' } | { __typename?: 'pages_pages_Entry' } | { __typename?: 'pages_redirectPage_Entry' } | { __typename?: 'questions_default_Entry' } | { __typename?: 'referenceContent_default_Entry' } | { __typename?: 'widgets_colorFilterTool_Entry' } | { __typename?: 'widgets_isochronePlot_Entry' } | { __typename?: 'widgets_lightCurveTool_Entry' } | { __typename?: 'widgets_sourceSelector_Entry' } | null };

export type GlobalsQueryQueryVariables = Exact<{
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>> | InputMaybe<Scalars['String']['input']>>;
}>;


export type GlobalsQueryQuery = { __typename?: 'Query', siteInfo: { __typename?: 'menuContent_GlobalSet' } | { __typename?: 'siteInfo_GlobalSet', language: string | null, name: string, handle: string, siteTitle: string | null, siteDescription: string | null } | null, menuContent: { __typename?: 'menuContent_GlobalSet', helpUrl: string | null } | { __typename?: 'siteInfo_GlobalSet' } | null };

export type HomepageQueryQueryVariables = Exact<{
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>> | InputMaybe<Scalars['String']['input']>>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>> | InputMaybe<Scalars['String']['input']>>;
}>;


export type HomepageQueryQuery = { __typename?: 'Query', entry: { __typename: 'datasets_starCluster_Entry' } | { __typename: 'datasets_supernovaGalaxyObservations_Entry' } | (
    { __typename: 'homepage_homepage_Entry' }
    & { ' $fragmentRefs'?: { 'HomepageTemplateFragment': HomepageTemplateFragment } }
  ) | { __typename: 'investigations_default_Entry' } | { __typename: 'investigations_investigationParent_Entry' } | { __typename: 'investigations_investigationSectionBreakChild_Entry' } | { __typename: 'pages_pages_Entry' } | { __typename: 'pages_redirectPage_Entry' } | { __typename: 'questions_default_Entry' } | { __typename: 'referenceContent_default_Entry' } | { __typename: 'widgets_colorFilterTool_Entry' } | { __typename: 'widgets_isochronePlot_Entry' } | { __typename: 'widgets_lightCurveTool_Entry' } | { __typename: 'widgets_sourceSelector_Entry' } | null };

export type ReferenceContentQueryVariables = Exact<{
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>> | InputMaybe<Scalars['String']['input']>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>> | InputMaybe<Scalars['String']['input']>>;
}>;


export type ReferenceContentQuery = { __typename?: 'Query', entry: { __typename?: 'datasets_starCluster_Entry' } | { __typename?: 'datasets_supernovaGalaxyObservations_Entry' } | { __typename?: 'homepage_homepage_Entry' } | { __typename?: 'investigations_default_Entry' } | { __typename?: 'investigations_investigationParent_Entry' } | { __typename?: 'investigations_investigationSectionBreakChild_Entry' } | { __typename?: 'pages_pages_Entry' } | { __typename?: 'pages_redirectPage_Entry' } | { __typename?: 'questions_default_Entry' } | (
    { __typename?: 'referenceContent_default_Entry' }
    & { ' $fragmentRefs'?: { 'ReferenceContentTemplateFragment': ReferenceContentTemplateFragment } }
  ) | { __typename?: 'widgets_colorFilterTool_Entry' } | { __typename?: 'widgets_isochronePlot_Entry' } | { __typename?: 'widgets_lightCurveTool_Entry' } | { __typename?: 'widgets_sourceSelector_Entry' } | null };

export type ReferenceParamsQueryVariables = Exact<{
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>> | InputMaybe<Scalars['String']['input']>>;
}>;


export type ReferenceParamsQuery = { __typename?: 'Query', referenceContentEntries: Array<{ __typename?: 'referenceContent_default_Entry', slug: string | null } | null> | null };

export type PagePreviewQueryQueryVariables = Exact<{
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>> | InputMaybe<Scalars['String']['input']>>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>> | InputMaybe<Scalars['String']['input']>>;
}>;


export type PagePreviewQueryQuery = { __typename?: 'Query', entry: { __typename: 'datasets_starCluster_Entry', uri: string | null, title: string | null } | { __typename: 'datasets_supernovaGalaxyObservations_Entry', uri: string | null, title: string | null } | { __typename: 'homepage_homepage_Entry', uri: string | null, title: string | null } | { __typename: 'investigations_default_Entry', uri: string | null, title: string | null } | { __typename: 'investigations_investigationParent_Entry', uri: string | null, title: string | null } | { __typename: 'investigations_investigationSectionBreakChild_Entry', uri: string | null, title: string | null } | { __typename: 'pages_pages_Entry', uri: string | null, title: string | null } | { __typename: 'pages_redirectPage_Entry', uri: string | null, title: string | null } | { __typename: 'questions_default_Entry', uri: string | null, title: string | null } | { __typename: 'referenceContent_default_Entry', uri: string | null, title: string | null } | { __typename: 'widgets_colorFilterTool_Entry', uri: string | null, title: string | null } | { __typename: 'widgets_isochronePlot_Entry', uri: string | null, title: string | null } | { __typename: 'widgets_lightCurveTool_Entry', uri: string | null, title: string | null } | { __typename: 'widgets_sourceSelector_Entry', uri: string | null, title: string | null } | null };

export type FacebookOauthUrlQueryVariables = Exact<{ [key: string]: never; }>;


export type FacebookOauthUrlQuery = { __typename?: 'Query', facebookOauthUrl: string };

export type GoogleSignInStudentMutationVariables = Exact<{
  idToken: Scalars['String']['input'];
}>;


export type GoogleSignInStudentMutation = { __typename?: 'Mutation', googleSignInStudents: (
    { __typename?: 'Auth' }
    & { ' $fragmentRefs'?: { 'AuthFragmentFragment': AuthFragmentFragment } }
  ) };

export type GoogleSignInEducatorMutationVariables = Exact<{
  idToken: Scalars['String']['input'];
}>;


export type GoogleSignInEducatorMutation = { __typename?: 'Mutation', googleSignInEducators: (
    { __typename?: 'Auth' }
    & { ' $fragmentRefs'?: { 'AuthFragmentFragment': AuthFragmentFragment } }
  ) };

export type ActivateUserMutationVariables = Exact<{
  code: Scalars['String']['input'];
  id: Scalars['String']['input'];
}>;


export type ActivateUserMutation = { __typename?: 'Mutation', activateUser: string };

export type ForgottenPasswordMutationVariables = Exact<{
  email: Scalars['String']['input'];
}>;


export type ForgottenPasswordMutation = { __typename?: 'Mutation', forgottenPassword: string };

export type FacebookSignInStudentMutationVariables = Exact<{
  code: Scalars['String']['input'];
}>;


export type FacebookSignInStudentMutation = { __typename?: 'Mutation', facebookSignInStudents: (
    { __typename?: 'Auth' }
    & { ' $fragmentRefs'?: { 'AuthFragmentFragment': AuthFragmentFragment } }
  ) };

export type FacebookSignInEducatorMutationVariables = Exact<{
  code: Scalars['String']['input'];
}>;


export type FacebookSignInEducatorMutation = { __typename?: 'Mutation', facebookSignInEducators: (
    { __typename?: 'Auth' }
    & { ' $fragmentRefs'?: { 'AuthFragmentFragment': AuthFragmentFragment } }
  ) };

export type RegisterEducatorMutationVariables = Exact<{
  email: Scalars['String']['input'];
  password: Scalars['String']['input'];
  fullName: InputMaybe<Scalars['String']['input']>;
}>;


export type RegisterEducatorMutation = { __typename?: 'Mutation', registerEducators: (
    { __typename?: 'Auth' }
    & { ' $fragmentRefs'?: { 'AuthFragmentFragment': AuthFragmentFragment } }
  ) };

export type RegisterStudentMutationVariables = Exact<{
  email: Scalars['String']['input'];
  password: Scalars['String']['input'];
  fullName: InputMaybe<Scalars['String']['input']>;
}>;


export type RegisterStudentMutation = { __typename?: 'Mutation', registerStudents: (
    { __typename?: 'Auth' }
    & { ' $fragmentRefs'?: { 'AuthFragmentFragment': AuthFragmentFragment } }
  ) };

export type BarGraphToolBlockFragment = { __typename: 'contentBlocks_barGraphTool_BlockType', id: string | null, title: string | null, yAxisMin: any | null, yAxisMax: any | null, yAxisLabel: string | null, xAxisLabel: string | null, graphBars: Array<{ __typename: 'graphBars_bar_BlockType', yValue: string | null, label: string | null } | null> } & { ' $fragmentName'?: 'BarGraphToolBlockFragment' };

export type CameraFilterToolBlockFragment = { __typename?: 'contentBlocks_cameraFilterTool_BlockType', widgetInstructions: string | null } & { ' $fragmentName'?: 'CameraFilterToolBlockFragment' };

export type ColorFilterToolBlockFragment = { __typename?: 'contentBlocks_colorFilterToolBlock_BlockType', colorFilterTool: Array<{ __typename?: 'datasets_starCluster_Entry' } | { __typename?: 'datasets_supernovaGalaxyObservations_Entry' } | { __typename?: 'homepage_homepage_Entry' } | { __typename?: 'investigations_default_Entry' } | { __typename?: 'investigations_investigationParent_Entry' } | { __typename?: 'investigations_investigationSectionBreakChild_Entry' } | { __typename?: 'pages_pages_Entry' } | { __typename?: 'pages_redirectPage_Entry' } | { __typename?: 'questions_default_Entry' } | { __typename?: 'referenceContent_default_Entry' } | (
    { __typename?: 'widgets_colorFilterTool_Entry' }
    & { ' $fragmentRefs'?: { 'ColorFilterToolEntryFragment': ColorFilterToolEntryFragment } }
  ) | { __typename?: 'widgets_isochronePlot_Entry' } | { __typename?: 'widgets_lightCurveTool_Entry' } | { __typename?: 'widgets_sourceSelector_Entry' } | null> } & { ' $fragmentName'?: 'ColorFilterToolBlockFragment' };

export type EquationBlockFragment = { __typename?: 'contentBlocks_equation_BlockType', id: string | null, latex: string | null } & { ' $fragmentName'?: 'EquationBlockFragment' };

export type FilterToolBlockFragment = { __typename: 'contentBlocks_filterTool_BlockType', id: string | null, preSelectedColor: string | null, readOnly: boolean | null, widgetInstructions: string | null } & { ' $fragmentName'?: 'FilterToolBlockFragment' };

export type ImageBlockFragment = { __typename?: 'contentBlocks_image_BlockType', id: string | null, caption: string | null, layout: string | null, image: Array<never | null> | null } & { ' $fragmentName'?: 'ImageBlockFragment' };

export type InteractionGroupContainerBlockFragment = { __typename: 'contentBlocks_group_BlockType', childBlocks: Array<{ __typename: 'colorFilterToolObjects_filterimage_BlockType', id: string | null } | { __typename: 'colorFilterToolObjects_group_BlockType', id: string | null } | { __typename: 'colorFilterToolObjects_object_BlockType', id: string | null } | (
    { __typename: 'contentBlocks_barGraphTool_BlockType', id: string | null }
    & { ' $fragmentRefs'?: { 'BarGraphToolBlockFragment': BarGraphToolBlockFragment } }
  ) | { __typename: 'contentBlocks_cameraFilterTool_BlockType', id: string | null } | { __typename: 'contentBlocks_colLeft_BlockType', id: string | null } | { __typename: 'contentBlocks_colRight_BlockType', id: string | null } | (
    { __typename: 'contentBlocks_colorFilterToolBlock_BlockType', id: string | null }
    & { ' $fragmentRefs'?: { 'ColorFilterToolBlockFragment': ColorFilterToolBlockFragment } }
  ) | { __typename: 'contentBlocks_equation_BlockType', id: string | null } | (
    { __typename: 'contentBlocks_filterTool_BlockType', id: string | null }
    & { ' $fragmentRefs'?: { 'FilterToolBlockFragment': FilterToolBlockFragment } }
  ) | { __typename: 'contentBlocks_group_BlockType', id: string | null } | (
    { __typename: 'contentBlocks_image_BlockType', id: string | null }
    & { ' $fragmentRefs'?: { 'ImageBlockFragment': ImageBlockFragment } }
  ) | (
    { __typename: 'contentBlocks_magnitudeScatterPlot_BlockType', id: string | null }
    & { ' $fragmentRefs'?: { 'MagnitudeScatterPlotBlockFragment': MagnitudeScatterPlotBlockFragment } }
  ) | (
    { __typename: 'contentBlocks_questionBlock_BlockType', id: string | null }
    & { ' $fragmentRefs'?: { 'QuestionsBlockFragment': QuestionsBlockFragment } }
  ) | (
    { __typename: 'contentBlocks_referenceBlock_BlockType', id: string | null }
    & { ' $fragmentRefs'?: { 'ReferenceBlockFragment': ReferenceBlockFragment } }
  ) | { __typename: 'contentBlocks_scatterplotTool_BlockType', id: string | null } | (
    { __typename: 'contentBlocks_supernovaDistanceDistribution_BlockType', id: string | null }
    & { ' $fragmentRefs'?: { 'SupernovaDistanceDistributionBlockFragment': SupernovaDistanceDistributionBlockFragment } }
  ) | (
    { __typename: 'contentBlocks_table_BlockType', id: string | null }
    & { ' $fragmentRefs'?: { 'TableBlockFragment': TableBlockFragment } }
  ) | (
    { __typename: 'contentBlocks_text_BlockType', id: string | null }
    & { ' $fragmentRefs'?: { 'TextBlockFragment': TextBlockFragment } }
  ) | { __typename: 'contentBlocks_twoColumnContainer_BlockType', id: string | null } | (
    { __typename: 'contentBlocks_video_BlockType', id: string | null }
    & { ' $fragmentRefs'?: { 'VideoBlockFragment': VideoBlockFragment } }
  ) | { __typename: 'homepageContentBlocks_image_BlockType', id: string | null } | { __typename: 'homepageContentBlocks_investigationGrid_BlockType', id: string | null } | { __typename: 'homepageContentBlocks_text_BlockType', id: string | null } | { __typename: 'multiPartBlocks_multiselect_BlockType', id: string | null } | { __typename: 'multiPartBlocks_number_BlockType', id: string | null } | { __typename: 'multiPartBlocks_readonlyText_BlockType', id: string | null } | { __typename: 'multiPartBlocks_select_BlockType', id: string | null } | { __typename: 'multiPartBlocks_text_BlockType', id: string | null } | { __typename: 'questionWidgetsBlock_colorFilterToolBlock_BlockType', id: string | null } | { __typename: 'questionWidgetsBlock_isochronePlot_BlockType', id: string | null } | { __typename: 'questionWidgetsBlock_lightCurveBlock_BlockType', id: string | null } | { __typename: 'questionWidgetsBlock_sourceSelectorBlock_BlockType', id: string | null } | { __typename: 'referenceContentBlocks_cameraFilterTool_BlockType', id: string | null } | { __typename: 'referenceContentBlocks_colorFilterToolBlock_BlockType', id: string | null } | { __typename: 'referenceContentBlocks_filterTool_BlockType', id: string | null } | { __typename: 'referenceContentBlocks_image_BlockType', id: string | null } | { __typename: 'referenceContentBlocks_table_BlockType', id: string | null } | { __typename: 'referenceContentBlocks_text_BlockType', id: string | null } | null> | null } & { ' $fragmentName'?: 'InteractionGroupContainerBlockFragment' };

export type InvestigationGridBlockFragment = { __typename?: 'homepageContentBlocks_investigationGrid_BlockType', heading: string | null, investigations: Array<{ __typename?: 'datasets_starCluster_Entry' } | { __typename?: 'datasets_supernovaGalaxyObservations_Entry' } | { __typename?: 'homepage_homepage_Entry' } | { __typename?: 'investigations_default_Entry' } | { __typename?: 'investigations_investigationParent_Entry', id: string | null, title: string | null, url: string | null, rawImage: Array<never | null> | null } | { __typename?: 'investigations_investigationSectionBreakChild_Entry' } | { __typename?: 'pages_pages_Entry' } | { __typename?: 'pages_redirectPage_Entry' } | { __typename?: 'questions_default_Entry' } | { __typename?: 'referenceContent_default_Entry' } | { __typename?: 'widgets_colorFilterTool_Entry' } | { __typename?: 'widgets_isochronePlot_Entry' } | { __typename?: 'widgets_lightCurveTool_Entry' } | { __typename?: 'widgets_sourceSelector_Entry' } | null> } & { ' $fragmentName'?: 'InvestigationGridBlockFragment' };

export type MagnitudeScatterPlotBlockFragment = { __typename?: 'contentBlocks_magnitudeScatterPlot_BlockType', lightCurveTool: Array<{ __typename?: 'datasets_starCluster_Entry' } | { __typename?: 'datasets_supernovaGalaxyObservations_Entry' } | { __typename?: 'homepage_homepage_Entry' } | { __typename?: 'investigations_default_Entry' } | { __typename?: 'investigations_investigationParent_Entry' } | { __typename?: 'investigations_investigationSectionBreakChild_Entry' } | { __typename?: 'pages_pages_Entry' } | { __typename?: 'pages_redirectPage_Entry' } | { __typename?: 'questions_default_Entry' } | { __typename?: 'referenceContent_default_Entry' } | { __typename?: 'widgets_colorFilterTool_Entry' } | { __typename?: 'widgets_isochronePlot_Entry' } | { __typename?: 'widgets_lightCurveTool_Entry', displayName: string | null, yMin: any | null, yMax: any | null, dataset: Array<{ __typename?: 'datasets_starCluster_Entry' } | { __typename?: 'datasets_supernovaGalaxyObservations_Entry', title: string | null, peakMjd: any | null, json: Array<{ __typename?: 'datasets_Asset', url: string | null } | null> } | { __typename?: 'homepage_homepage_Entry' } | { __typename?: 'investigations_default_Entry' } | { __typename?: 'investigations_investigationParent_Entry' } | { __typename?: 'investigations_investigationSectionBreakChild_Entry' } | { __typename?: 'pages_pages_Entry' } | { __typename?: 'pages_redirectPage_Entry' } | { __typename?: 'questions_default_Entry' } | { __typename?: 'referenceContent_default_Entry' } | { __typename?: 'widgets_colorFilterTool_Entry' } | { __typename?: 'widgets_isochronePlot_Entry' } | { __typename?: 'widgets_lightCurveTool_Entry' } | { __typename?: 'widgets_sourceSelector_Entry' } | null> } | { __typename?: 'widgets_sourceSelector_Entry' } | null> } & { ' $fragmentName'?: 'MagnitudeScatterPlotBlockFragment' };

export type QuestionsBlockFragment = { __typename: 'contentBlocks_questionBlock_BlockType', id: string | null, questionEntries: Array<{ __typename?: 'datasets_starCluster_Entry' } | { __typename?: 'datasets_supernovaGalaxyObservations_Entry' } | { __typename?: 'homepage_homepage_Entry' } | { __typename?: 'investigations_default_Entry' } | { __typename?: 'investigations_investigationParent_Entry' } | { __typename?: 'investigations_investigationSectionBreakChild_Entry' } | { __typename?: 'pages_pages_Entry' } | { __typename?: 'pages_redirectPage_Entry' } | (
    { __typename?: 'questions_default_Entry' }
    & { ' $fragmentRefs'?: { 'QuestionEntryFragment': QuestionEntryFragment } }
  ) | { __typename?: 'referenceContent_default_Entry' } | { __typename?: 'widgets_colorFilterTool_Entry' } | { __typename?: 'widgets_isochronePlot_Entry' } | { __typename?: 'widgets_lightCurveTool_Entry' } | { __typename?: 'widgets_sourceSelector_Entry' } | null> } & { ' $fragmentName'?: 'QuestionsBlockFragment' };

export type ReferenceBlockFragment = { __typename?: 'contentBlocks_referenceBlock_BlockType', referenceEntries: Array<{ __typename?: 'datasets_starCluster_Entry' } | { __typename?: 'datasets_supernovaGalaxyObservations_Entry' } | { __typename?: 'homepage_homepage_Entry' } | { __typename?: 'investigations_default_Entry' } | { __typename?: 'investigations_investigationParent_Entry' } | { __typename?: 'investigations_investigationSectionBreakChild_Entry' } | { __typename?: 'pages_pages_Entry' } | { __typename?: 'pages_redirectPage_Entry' } | { __typename?: 'questions_default_Entry' } | { __typename?: 'referenceContent_default_Entry', title: string | null, uri: string | null, slug: string | null } | { __typename?: 'widgets_colorFilterTool_Entry' } | { __typename?: 'widgets_isochronePlot_Entry' } | { __typename?: 'widgets_lightCurveTool_Entry' } | { __typename?: 'widgets_sourceSelector_Entry' } | null> } & { ' $fragmentName'?: 'ReferenceBlockFragment' };

export type SupernovaDistanceDistributionBlockFragment = (
  { __typename?: 'contentBlocks_supernovaDistanceDistribution_BlockType', instructions: string | null, step: any | null, imageAlbum: Array<never | null> | null, json: Array<{ __typename?: 'datasets_Asset', url: string | null } | null> }
  & { ' $fragmentRefs'?: { 'LightCurveQuestionDataFragment': LightCurveQuestionDataFragment } }
) & { ' $fragmentName'?: 'SupernovaDistanceDistributionBlockFragment' };

export type TableBlockFragment = { __typename?: 'contentBlocks_table_BlockType', id: string | null, caption: string | null, contentHeading: string | null, header: Array<{ __typename?: 'tableHeader_BlockType', headerRow: Array<{ __typename?: 'headerRow_tableCell_BlockType', id: string | null, text: string | null, equation: string | null } | null> } | null>, rows: Array<{ __typename?: 'displayTable_BlockType', cells: Array<{ __typename?: 'tableRow_previousQuestion_BlockType', question: Array<{ __typename?: 'datasets_starCluster_Entry' } | { __typename?: 'datasets_supernovaGalaxyObservations_Entry' } | { __typename?: 'homepage_homepage_Entry' } | { __typename?: 'investigations_default_Entry' } | { __typename?: 'investigations_investigationParent_Entry' } | { __typename?: 'investigations_investigationSectionBreakChild_Entry' } | { __typename?: 'pages_pages_Entry' } | { __typename?: 'pages_redirectPage_Entry' } | { __typename?: 'questions_default_Entry', id: string | null, answerType: string | null, rows: Array<{ __typename?: 'questionTable_BlockType', cells: Array<{ __typename?: 'tableCell_previousQuestion_BlockType' } | { __typename?: 'tableCell_question_BlockType', id: string | null, answerType: string | null, options: Array<{ __typename?: 'options_BlockType', label: string | null, value: string | null } | null> } | { __typename?: 'tableCell_rowHeader_BlockType', id: string | null, equation: string | null, text: string | null } | { __typename?: 'tableCell_static_BlockType', id: string | null, equation: string | null, text: string | null } | null> } | null> } | { __typename?: 'referenceContent_default_Entry' } | { __typename?: 'widgets_colorFilterTool_Entry' } | { __typename?: 'widgets_isochronePlot_Entry' } | { __typename?: 'widgets_lightCurveTool_Entry' } | { __typename?: 'widgets_sourceSelector_Entry' } | null> } | { __typename?: 'tableRow_rowHeader_BlockType', id: string | null, text: string | null, equation: string | null } | { __typename?: 'tableRow_tableCell_BlockType', id: string | null, equation: string | null, text: string | null } | null> } | null> } & { ' $fragmentName'?: 'TableBlockFragment' };

export type TextBlockFragment = { __typename?: 'contentBlocks_text_BlockType', id: string | null, text: string | null } & { ' $fragmentName'?: 'TextBlockFragment' };

export type TwoColumnContainerBlockFragment = { __typename?: 'contentBlocks_twoColumnContainer_BlockType', columns: Array<{ __typename?: 'colorFilterToolObjects_filterimage_BlockType' } | { __typename?: 'colorFilterToolObjects_group_BlockType' } | { __typename?: 'colorFilterToolObjects_object_BlockType' } | { __typename?: 'contentBlocks_barGraphTool_BlockType' } | { __typename?: 'contentBlocks_cameraFilterTool_BlockType' } | { __typename: 'contentBlocks_colLeft_BlockType', id: string | null, childblocks: Array<{ __typename: 'colorFilterToolObjects_filterimage_BlockType', id: string | null } | { __typename: 'colorFilterToolObjects_group_BlockType', id: string | null } | { __typename: 'colorFilterToolObjects_object_BlockType', id: string | null } | (
      { __typename: 'contentBlocks_barGraphTool_BlockType', id: string | null }
      & { ' $fragmentRefs'?: { 'BarGraphToolBlockFragment': BarGraphToolBlockFragment } }
    ) | { __typename: 'contentBlocks_cameraFilterTool_BlockType', id: string | null } | { __typename: 'contentBlocks_colLeft_BlockType', id: string | null } | { __typename: 'contentBlocks_colRight_BlockType', id: string | null } | (
      { __typename: 'contentBlocks_colorFilterToolBlock_BlockType', id: string | null }
      & { ' $fragmentRefs'?: { 'ColorFilterToolBlockFragment': ColorFilterToolBlockFragment } }
    ) | { __typename: 'contentBlocks_equation_BlockType', id: string | null } | (
      { __typename: 'contentBlocks_filterTool_BlockType', id: string | null }
      & { ' $fragmentRefs'?: { 'FilterToolBlockFragment': FilterToolBlockFragment } }
    ) | { __typename: 'contentBlocks_group_BlockType', id: string | null } | (
      { __typename: 'contentBlocks_image_BlockType', id: string | null }
      & { ' $fragmentRefs'?: { 'ImageBlockFragment': ImageBlockFragment } }
    ) | (
      { __typename: 'contentBlocks_magnitudeScatterPlot_BlockType', id: string | null }
      & { ' $fragmentRefs'?: { 'MagnitudeScatterPlotBlockFragment': MagnitudeScatterPlotBlockFragment } }
    ) | (
      { __typename: 'contentBlocks_questionBlock_BlockType', id: string | null }
      & { ' $fragmentRefs'?: { 'QuestionsBlockFragment': QuestionsBlockFragment } }
    ) | (
      { __typename: 'contentBlocks_referenceBlock_BlockType', id: string | null }
      & { ' $fragmentRefs'?: { 'ReferenceBlockFragment': ReferenceBlockFragment } }
    ) | { __typename: 'contentBlocks_scatterplotTool_BlockType', id: string | null } | (
      { __typename: 'contentBlocks_supernovaDistanceDistribution_BlockType', id: string | null }
      & { ' $fragmentRefs'?: { 'SupernovaDistanceDistributionBlockFragment': SupernovaDistanceDistributionBlockFragment } }
    ) | (
      { __typename: 'contentBlocks_table_BlockType', id: string | null }
      & { ' $fragmentRefs'?: { 'TableBlockFragment': TableBlockFragment } }
    ) | (
      { __typename: 'contentBlocks_text_BlockType', id: string | null }
      & { ' $fragmentRefs'?: { 'TextBlockFragment': TextBlockFragment } }
    ) | { __typename: 'contentBlocks_twoColumnContainer_BlockType', id: string | null } | (
      { __typename: 'contentBlocks_video_BlockType', id: string | null }
      & { ' $fragmentRefs'?: { 'VideoBlockFragment': VideoBlockFragment } }
    ) | { __typename: 'homepageContentBlocks_image_BlockType', id: string | null } | { __typename: 'homepageContentBlocks_investigationGrid_BlockType', id: string | null } | { __typename: 'homepageContentBlocks_text_BlockType', id: string | null } | { __typename: 'multiPartBlocks_multiselect_BlockType', id: string | null } | { __typename: 'multiPartBlocks_number_BlockType', id: string | null } | { __typename: 'multiPartBlocks_readonlyText_BlockType', id: string | null } | { __typename: 'multiPartBlocks_select_BlockType', id: string | null } | { __typename: 'multiPartBlocks_text_BlockType', id: string | null } | { __typename: 'questionWidgetsBlock_colorFilterToolBlock_BlockType', id: string | null } | { __typename: 'questionWidgetsBlock_isochronePlot_BlockType', id: string | null } | { __typename: 'questionWidgetsBlock_lightCurveBlock_BlockType', id: string | null } | { __typename: 'questionWidgetsBlock_sourceSelectorBlock_BlockType', id: string | null } | { __typename: 'referenceContentBlocks_cameraFilterTool_BlockType', id: string | null } | { __typename: 'referenceContentBlocks_colorFilterToolBlock_BlockType', id: string | null } | { __typename: 'referenceContentBlocks_filterTool_BlockType', id: string | null } | { __typename: 'referenceContentBlocks_image_BlockType', id: string | null } | { __typename: 'referenceContentBlocks_table_BlockType', id: string | null } | { __typename: 'referenceContentBlocks_text_BlockType', id: string | null } | null> | null } | { __typename: 'contentBlocks_colRight_BlockType', id: string | null, childblocks: Array<{ __typename: 'colorFilterToolObjects_filterimage_BlockType', id: string | null } | { __typename: 'colorFilterToolObjects_group_BlockType', id: string | null } | { __typename: 'colorFilterToolObjects_object_BlockType', id: string | null } | (
      { __typename: 'contentBlocks_barGraphTool_BlockType', id: string | null }
      & { ' $fragmentRefs'?: { 'BarGraphToolBlockFragment': BarGraphToolBlockFragment } }
    ) | { __typename: 'contentBlocks_cameraFilterTool_BlockType', id: string | null } | { __typename: 'contentBlocks_colLeft_BlockType', id: string | null } | { __typename: 'contentBlocks_colRight_BlockType', id: string | null } | (
      { __typename: 'contentBlocks_colorFilterToolBlock_BlockType', id: string | null }
      & { ' $fragmentRefs'?: { 'ColorFilterToolBlockFragment': ColorFilterToolBlockFragment } }
    ) | { __typename: 'contentBlocks_equation_BlockType', id: string | null } | (
      { __typename: 'contentBlocks_filterTool_BlockType', id: string | null }
      & { ' $fragmentRefs'?: { 'FilterToolBlockFragment': FilterToolBlockFragment } }
    ) | { __typename: 'contentBlocks_group_BlockType', id: string | null } | (
      { __typename: 'contentBlocks_image_BlockType', id: string | null }
      & { ' $fragmentRefs'?: { 'ImageBlockFragment': ImageBlockFragment } }
    ) | (
      { __typename: 'contentBlocks_magnitudeScatterPlot_BlockType', id: string | null }
      & { ' $fragmentRefs'?: { 'MagnitudeScatterPlotBlockFragment': MagnitudeScatterPlotBlockFragment } }
    ) | (
      { __typename: 'contentBlocks_questionBlock_BlockType', id: string | null }
      & { ' $fragmentRefs'?: { 'QuestionsBlockFragment': QuestionsBlockFragment } }
    ) | (
      { __typename: 'contentBlocks_referenceBlock_BlockType', id: string | null }
      & { ' $fragmentRefs'?: { 'ReferenceBlockFragment': ReferenceBlockFragment } }
    ) | { __typename: 'contentBlocks_scatterplotTool_BlockType', id: string | null } | (
      { __typename: 'contentBlocks_supernovaDistanceDistribution_BlockType', id: string | null }
      & { ' $fragmentRefs'?: { 'SupernovaDistanceDistributionBlockFragment': SupernovaDistanceDistributionBlockFragment } }
    ) | (
      { __typename: 'contentBlocks_table_BlockType', id: string | null }
      & { ' $fragmentRefs'?: { 'TableBlockFragment': TableBlockFragment } }
    ) | (
      { __typename: 'contentBlocks_text_BlockType', id: string | null }
      & { ' $fragmentRefs'?: { 'TextBlockFragment': TextBlockFragment } }
    ) | { __typename: 'contentBlocks_twoColumnContainer_BlockType', id: string | null } | (
      { __typename: 'contentBlocks_video_BlockType', id: string | null }
      & { ' $fragmentRefs'?: { 'VideoBlockFragment': VideoBlockFragment } }
    ) | { __typename: 'homepageContentBlocks_image_BlockType', id: string | null } | { __typename: 'homepageContentBlocks_investigationGrid_BlockType', id: string | null } | { __typename: 'homepageContentBlocks_text_BlockType', id: string | null } | { __typename: 'multiPartBlocks_multiselect_BlockType', id: string | null } | { __typename: 'multiPartBlocks_number_BlockType', id: string | null } | { __typename: 'multiPartBlocks_readonlyText_BlockType', id: string | null } | { __typename: 'multiPartBlocks_select_BlockType', id: string | null } | { __typename: 'multiPartBlocks_text_BlockType', id: string | null } | { __typename: 'questionWidgetsBlock_colorFilterToolBlock_BlockType', id: string | null } | { __typename: 'questionWidgetsBlock_isochronePlot_BlockType', id: string | null } | { __typename: 'questionWidgetsBlock_lightCurveBlock_BlockType', id: string | null } | { __typename: 'questionWidgetsBlock_sourceSelectorBlock_BlockType', id: string | null } | { __typename: 'referenceContentBlocks_cameraFilterTool_BlockType', id: string | null } | { __typename: 'referenceContentBlocks_colorFilterToolBlock_BlockType', id: string | null } | { __typename: 'referenceContentBlocks_filterTool_BlockType', id: string | null } | { __typename: 'referenceContentBlocks_image_BlockType', id: string | null } | { __typename: 'referenceContentBlocks_table_BlockType', id: string | null } | { __typename: 'referenceContentBlocks_text_BlockType', id: string | null } | null> | null } | { __typename?: 'contentBlocks_colorFilterToolBlock_BlockType' } | { __typename?: 'contentBlocks_equation_BlockType' } | { __typename?: 'contentBlocks_filterTool_BlockType' } | { __typename?: 'contentBlocks_group_BlockType' } | { __typename?: 'contentBlocks_image_BlockType' } | { __typename?: 'contentBlocks_magnitudeScatterPlot_BlockType' } | { __typename?: 'contentBlocks_questionBlock_BlockType' } | { __typename?: 'contentBlocks_referenceBlock_BlockType' } | { __typename?: 'contentBlocks_scatterplotTool_BlockType' } | { __typename?: 'contentBlocks_supernovaDistanceDistribution_BlockType' } | { __typename?: 'contentBlocks_table_BlockType' } | { __typename?: 'contentBlocks_text_BlockType' } | { __typename?: 'contentBlocks_twoColumnContainer_BlockType' } | { __typename?: 'contentBlocks_video_BlockType' } | { __typename?: 'homepageContentBlocks_image_BlockType' } | { __typename?: 'homepageContentBlocks_investigationGrid_BlockType' } | { __typename?: 'homepageContentBlocks_text_BlockType' } | { __typename?: 'multiPartBlocks_multiselect_BlockType' } | { __typename?: 'multiPartBlocks_number_BlockType' } | { __typename?: 'multiPartBlocks_readonlyText_BlockType' } | { __typename?: 'multiPartBlocks_select_BlockType' } | { __typename?: 'multiPartBlocks_text_BlockType' } | { __typename?: 'questionWidgetsBlock_colorFilterToolBlock_BlockType' } | { __typename?: 'questionWidgetsBlock_isochronePlot_BlockType' } | { __typename?: 'questionWidgetsBlock_lightCurveBlock_BlockType' } | { __typename?: 'questionWidgetsBlock_sourceSelectorBlock_BlockType' } | { __typename?: 'referenceContentBlocks_cameraFilterTool_BlockType' } | { __typename?: 'referenceContentBlocks_colorFilterToolBlock_BlockType' } | { __typename?: 'referenceContentBlocks_filterTool_BlockType' } | { __typename?: 'referenceContentBlocks_image_BlockType' } | { __typename?: 'referenceContentBlocks_table_BlockType' } | { __typename?: 'referenceContentBlocks_text_BlockType' } | null> | null } & { ' $fragmentName'?: 'TwoColumnContainerBlockFragment' };

export type VideoBlockFragment = { __typename?: 'contentBlocks_video_BlockType', id: string | null, caption: string | null, video: Array<never | null> | null } & { ' $fragmentName'?: 'VideoBlockFragment' };

export type ColorFilterToolEntryFragment = { __typename?: 'widgets_colorFilterTool_Entry', id: string | null, title: string | null, displayName: string | null, filterToolActions: Array<string | null> | null, filterColorOptionsLabels: Array<string | null> | null, filterColorOptionsValues: Array<string | null> | null, colorFilterToolObjects: Array<{ __typename?: 'colorFilterToolObjects_filterimage_BlockType' } | { __typename?: 'colorFilterToolObjects_group_BlockType', groupName: string | null, objects: Array<{ __typename?: 'colorFilterToolObjects_filterimage_BlockType' } | { __typename?: 'colorFilterToolObjects_group_BlockType' } | { __typename?: 'colorFilterToolObjects_object_BlockType', name: string | null, caption: string | null, filterImages: Array<{ __typename?: 'colorFilterToolObjects_filterimage_BlockType', isEnabled: boolean | null, isActive: boolean | null, max: any | null, min: any | null, defaultValue: any | null, label: string | null, color: string | null, image: Array<never | null> | null } | { __typename?: 'colorFilterToolObjects_group_BlockType' } | { __typename?: 'colorFilterToolObjects_object_BlockType' } | { __typename?: 'contentBlocks_barGraphTool_BlockType' } | { __typename?: 'contentBlocks_cameraFilterTool_BlockType' } | { __typename?: 'contentBlocks_colLeft_BlockType' } | { __typename?: 'contentBlocks_colRight_BlockType' } | { __typename?: 'contentBlocks_colorFilterToolBlock_BlockType' } | { __typename?: 'contentBlocks_equation_BlockType' } | { __typename?: 'contentBlocks_filterTool_BlockType' } | { __typename?: 'contentBlocks_group_BlockType' } | { __typename?: 'contentBlocks_image_BlockType' } | { __typename?: 'contentBlocks_magnitudeScatterPlot_BlockType' } | { __typename?: 'contentBlocks_questionBlock_BlockType' } | { __typename?: 'contentBlocks_referenceBlock_BlockType' } | { __typename?: 'contentBlocks_scatterplotTool_BlockType' } | { __typename?: 'contentBlocks_supernovaDistanceDistribution_BlockType' } | { __typename?: 'contentBlocks_table_BlockType' } | { __typename?: 'contentBlocks_text_BlockType' } | { __typename?: 'contentBlocks_twoColumnContainer_BlockType' } | { __typename?: 'contentBlocks_video_BlockType' } | { __typename?: 'homepageContentBlocks_image_BlockType' } | { __typename?: 'homepageContentBlocks_investigationGrid_BlockType' } | { __typename?: 'homepageContentBlocks_text_BlockType' } | { __typename?: 'multiPartBlocks_multiselect_BlockType' } | { __typename?: 'multiPartBlocks_number_BlockType' } | { __typename?: 'multiPartBlocks_readonlyText_BlockType' } | { __typename?: 'multiPartBlocks_select_BlockType' } | { __typename?: 'multiPartBlocks_text_BlockType' } | { __typename?: 'questionWidgetsBlock_colorFilterToolBlock_BlockType' } | { __typename?: 'questionWidgetsBlock_isochronePlot_BlockType' } | { __typename?: 'questionWidgetsBlock_lightCurveBlock_BlockType' } | { __typename?: 'questionWidgetsBlock_sourceSelectorBlock_BlockType' } | { __typename?: 'referenceContentBlocks_cameraFilterTool_BlockType' } | { __typename?: 'referenceContentBlocks_colorFilterToolBlock_BlockType' } | { __typename?: 'referenceContentBlocks_filterTool_BlockType' } | { __typename?: 'referenceContentBlocks_image_BlockType' } | { __typename?: 'referenceContentBlocks_table_BlockType' } | { __typename?: 'referenceContentBlocks_text_BlockType' } | null> | null } | { __typename?: 'contentBlocks_barGraphTool_BlockType' } | { __typename?: 'contentBlocks_cameraFilterTool_BlockType' } | { __typename?: 'contentBlocks_colLeft_BlockType' } | { __typename?: 'contentBlocks_colRight_BlockType' } | { __typename?: 'contentBlocks_colorFilterToolBlock_BlockType' } | { __typename?: 'contentBlocks_equation_BlockType' } | { __typename?: 'contentBlocks_filterTool_BlockType' } | { __typename?: 'contentBlocks_group_BlockType' } | { __typename?: 'contentBlocks_image_BlockType' } | { __typename?: 'contentBlocks_magnitudeScatterPlot_BlockType' } | { __typename?: 'contentBlocks_questionBlock_BlockType' } | { __typename?: 'contentBlocks_referenceBlock_BlockType' } | { __typename?: 'contentBlocks_scatterplotTool_BlockType' } | { __typename?: 'contentBlocks_supernovaDistanceDistribution_BlockType' } | { __typename?: 'contentBlocks_table_BlockType' } | { __typename?: 'contentBlocks_text_BlockType' } | { __typename?: 'contentBlocks_twoColumnContainer_BlockType' } | { __typename?: 'contentBlocks_video_BlockType' } | { __typename?: 'homepageContentBlocks_image_BlockType' } | { __typename?: 'homepageContentBlocks_investigationGrid_BlockType' } | { __typename?: 'homepageContentBlocks_text_BlockType' } | { __typename?: 'multiPartBlocks_multiselect_BlockType' } | { __typename?: 'multiPartBlocks_number_BlockType' } | { __typename?: 'multiPartBlocks_readonlyText_BlockType' } | { __typename?: 'multiPartBlocks_select_BlockType' } | { __typename?: 'multiPartBlocks_text_BlockType' } | { __typename?: 'questionWidgetsBlock_colorFilterToolBlock_BlockType' } | { __typename?: 'questionWidgetsBlock_isochronePlot_BlockType' } | { __typename?: 'questionWidgetsBlock_lightCurveBlock_BlockType' } | { __typename?: 'questionWidgetsBlock_sourceSelectorBlock_BlockType' } | { __typename?: 'referenceContentBlocks_cameraFilterTool_BlockType' } | { __typename?: 'referenceContentBlocks_colorFilterToolBlock_BlockType' } | { __typename?: 'referenceContentBlocks_filterTool_BlockType' } | { __typename?: 'referenceContentBlocks_image_BlockType' } | { __typename?: 'referenceContentBlocks_table_BlockType' } | { __typename?: 'referenceContentBlocks_text_BlockType' } | null> | null } | { __typename?: 'colorFilterToolObjects_object_BlockType' } | null> | null } & { ' $fragmentName'?: 'ColorFilterToolEntryFragment' };

export type LightCurveQuestionDataFragment = { __typename?: 'contentBlocks_supernovaDistanceDistribution_BlockType', questionEntries: Array<{ __typename?: 'datasets_starCluster_Entry' } | { __typename?: 'datasets_supernovaGalaxyObservations_Entry' } | { __typename?: 'homepage_homepage_Entry' } | { __typename?: 'investigations_default_Entry' } | { __typename?: 'investigations_investigationParent_Entry' } | { __typename?: 'investigations_investigationSectionBreakChild_Entry' } | { __typename?: 'pages_pages_Entry' } | { __typename?: 'pages_redirectPage_Entry' } | { __typename?: 'questions_default_Entry', id: string | null, questionWidgetsBlock: Array<{ __typename?: 'questionWidgetsBlock_colorFilterToolBlock_BlockType' } | { __typename?: 'questionWidgetsBlock_isochronePlot_BlockType' } | { __typename?: 'questionWidgetsBlock_lightCurveBlock_BlockType', lightCurveTool: Array<{ __typename?: 'datasets_starCluster_Entry' } | { __typename?: 'datasets_supernovaGalaxyObservations_Entry' } | { __typename?: 'homepage_homepage_Entry' } | { __typename?: 'investigations_default_Entry' } | { __typename?: 'investigations_investigationParent_Entry' } | { __typename?: 'investigations_investigationSectionBreakChild_Entry' } | { __typename?: 'pages_pages_Entry' } | { __typename?: 'pages_redirectPage_Entry' } | { __typename?: 'questions_default_Entry' } | { __typename?: 'referenceContent_default_Entry' } | { __typename?: 'widgets_colorFilterTool_Entry' } | { __typename?: 'widgets_isochronePlot_Entry' } | { __typename?: 'widgets_lightCurveTool_Entry', title: string | null, displayName: string | null, dataset: Array<{ __typename?: 'datasets_starCluster_Entry' } | { __typename?: 'datasets_supernovaGalaxyObservations_Entry', id: string | null, title: string | null, distance: any | null, lat: any | null, long: any | null } | { __typename?: 'homepage_homepage_Entry' } | { __typename?: 'investigations_default_Entry' } | { __typename?: 'investigations_investigationParent_Entry' } | { __typename?: 'investigations_investigationSectionBreakChild_Entry' } | { __typename?: 'pages_pages_Entry' } | { __typename?: 'pages_redirectPage_Entry' } | { __typename?: 'questions_default_Entry' } | { __typename?: 'referenceContent_default_Entry' } | { __typename?: 'widgets_colorFilterTool_Entry' } | { __typename?: 'widgets_isochronePlot_Entry' } | { __typename?: 'widgets_lightCurveTool_Entry' } | { __typename?: 'widgets_sourceSelector_Entry' } | null> } | { __typename?: 'widgets_sourceSelector_Entry' } | null> } | { __typename?: 'questionWidgetsBlock_sourceSelectorBlock_BlockType' } | null> | null } | { __typename?: 'referenceContent_default_Entry' } | { __typename?: 'widgets_colorFilterTool_Entry' } | { __typename?: 'widgets_isochronePlot_Entry' } | { __typename?: 'widgets_lightCurveTool_Entry' } | { __typename?: 'widgets_sourceSelector_Entry' } | null> } & { ' $fragmentName'?: 'LightCurveQuestionDataFragment' };

type ContentBlockFactory_ContentBlocks_BarGraphTool_BlockType_Fragment = (
  { __typename: 'contentBlocks_barGraphTool_BlockType' }
  & { ' $fragmentRefs'?: { 'BarGraphToolBlockFragment': BarGraphToolBlockFragment } }
) & { ' $fragmentName'?: 'ContentBlockFactory_ContentBlocks_BarGraphTool_BlockType_Fragment' };

type ContentBlockFactory_ContentBlocks_CameraFilterTool_BlockType_Fragment = (
  { __typename: 'contentBlocks_cameraFilterTool_BlockType' }
  & { ' $fragmentRefs'?: { 'CameraFilterToolBlockFragment': CameraFilterToolBlockFragment } }
) & { ' $fragmentName'?: 'ContentBlockFactory_ContentBlocks_CameraFilterTool_BlockType_Fragment' };

type ContentBlockFactory_ContentBlocks_ColLeft_BlockType_Fragment = { __typename: 'contentBlocks_colLeft_BlockType' } & { ' $fragmentName'?: 'ContentBlockFactory_ContentBlocks_ColLeft_BlockType_Fragment' };

type ContentBlockFactory_ContentBlocks_ColRight_BlockType_Fragment = { __typename: 'contentBlocks_colRight_BlockType' } & { ' $fragmentName'?: 'ContentBlockFactory_ContentBlocks_ColRight_BlockType_Fragment' };

type ContentBlockFactory_ContentBlocks_ColorFilterToolBlock_BlockType_Fragment = (
  { __typename: 'contentBlocks_colorFilterToolBlock_BlockType' }
  & { ' $fragmentRefs'?: { 'ColorFilterToolBlockFragment': ColorFilterToolBlockFragment } }
) & { ' $fragmentName'?: 'ContentBlockFactory_ContentBlocks_ColorFilterToolBlock_BlockType_Fragment' };

type ContentBlockFactory_ContentBlocks_Equation_BlockType_Fragment = (
  { __typename: 'contentBlocks_equation_BlockType' }
  & { ' $fragmentRefs'?: { 'EquationBlockFragment': EquationBlockFragment } }
) & { ' $fragmentName'?: 'ContentBlockFactory_ContentBlocks_Equation_BlockType_Fragment' };

type ContentBlockFactory_ContentBlocks_FilterTool_BlockType_Fragment = (
  { __typename: 'contentBlocks_filterTool_BlockType' }
  & { ' $fragmentRefs'?: { 'FilterToolBlockFragment': FilterToolBlockFragment } }
) & { ' $fragmentName'?: 'ContentBlockFactory_ContentBlocks_FilterTool_BlockType_Fragment' };

type ContentBlockFactory_ContentBlocks_Group_BlockType_Fragment = (
  { __typename: 'contentBlocks_group_BlockType' }
  & { ' $fragmentRefs'?: { 'InteractionGroupContainerBlockFragment': InteractionGroupContainerBlockFragment } }
) & { ' $fragmentName'?: 'ContentBlockFactory_ContentBlocks_Group_BlockType_Fragment' };

type ContentBlockFactory_ContentBlocks_Image_BlockType_Fragment = (
  { __typename: 'contentBlocks_image_BlockType' }
  & { ' $fragmentRefs'?: { 'ImageBlockFragment': ImageBlockFragment } }
) & { ' $fragmentName'?: 'ContentBlockFactory_ContentBlocks_Image_BlockType_Fragment' };

type ContentBlockFactory_ContentBlocks_MagnitudeScatterPlot_BlockType_Fragment = (
  { __typename: 'contentBlocks_magnitudeScatterPlot_BlockType' }
  & { ' $fragmentRefs'?: { 'MagnitudeScatterPlotBlockFragment': MagnitudeScatterPlotBlockFragment } }
) & { ' $fragmentName'?: 'ContentBlockFactory_ContentBlocks_MagnitudeScatterPlot_BlockType_Fragment' };

type ContentBlockFactory_ContentBlocks_QuestionBlock_BlockType_Fragment = (
  { __typename: 'contentBlocks_questionBlock_BlockType' }
  & { ' $fragmentRefs'?: { 'QuestionsBlockFragment': QuestionsBlockFragment } }
) & { ' $fragmentName'?: 'ContentBlockFactory_ContentBlocks_QuestionBlock_BlockType_Fragment' };

type ContentBlockFactory_ContentBlocks_ReferenceBlock_BlockType_Fragment = (
  { __typename: 'contentBlocks_referenceBlock_BlockType' }
  & { ' $fragmentRefs'?: { 'ReferenceBlockFragment': ReferenceBlockFragment } }
) & { ' $fragmentName'?: 'ContentBlockFactory_ContentBlocks_ReferenceBlock_BlockType_Fragment' };

type ContentBlockFactory_ContentBlocks_ScatterplotTool_BlockType_Fragment = { __typename: 'contentBlocks_scatterplotTool_BlockType' } & { ' $fragmentName'?: 'ContentBlockFactory_ContentBlocks_ScatterplotTool_BlockType_Fragment' };

type ContentBlockFactory_ContentBlocks_SupernovaDistanceDistribution_BlockType_Fragment = (
  { __typename: 'contentBlocks_supernovaDistanceDistribution_BlockType' }
  & { ' $fragmentRefs'?: { 'SupernovaDistanceDistributionBlockFragment': SupernovaDistanceDistributionBlockFragment } }
) & { ' $fragmentName'?: 'ContentBlockFactory_ContentBlocks_SupernovaDistanceDistribution_BlockType_Fragment' };

type ContentBlockFactory_ContentBlocks_Table_BlockType_Fragment = (
  { __typename: 'contentBlocks_table_BlockType' }
  & { ' $fragmentRefs'?: { 'TableBlockFragment': TableBlockFragment } }
) & { ' $fragmentName'?: 'ContentBlockFactory_ContentBlocks_Table_BlockType_Fragment' };

type ContentBlockFactory_ContentBlocks_Text_BlockType_Fragment = (
  { __typename: 'contentBlocks_text_BlockType' }
  & { ' $fragmentRefs'?: { 'TextBlockFragment': TextBlockFragment } }
) & { ' $fragmentName'?: 'ContentBlockFactory_ContentBlocks_Text_BlockType_Fragment' };

type ContentBlockFactory_ContentBlocks_TwoColumnContainer_BlockType_Fragment = (
  { __typename: 'contentBlocks_twoColumnContainer_BlockType' }
  & { ' $fragmentRefs'?: { 'TwoColumnContainerBlockFragment': TwoColumnContainerBlockFragment } }
) & { ' $fragmentName'?: 'ContentBlockFactory_ContentBlocks_TwoColumnContainer_BlockType_Fragment' };

type ContentBlockFactory_ContentBlocks_Video_BlockType_Fragment = (
  { __typename: 'contentBlocks_video_BlockType' }
  & { ' $fragmentRefs'?: { 'VideoBlockFragment': VideoBlockFragment } }
) & { ' $fragmentName'?: 'ContentBlockFactory_ContentBlocks_Video_BlockType_Fragment' };

export type ContentBlockFactoryFragment = ContentBlockFactory_ContentBlocks_BarGraphTool_BlockType_Fragment | ContentBlockFactory_ContentBlocks_CameraFilterTool_BlockType_Fragment | ContentBlockFactory_ContentBlocks_ColLeft_BlockType_Fragment | ContentBlockFactory_ContentBlocks_ColRight_BlockType_Fragment | ContentBlockFactory_ContentBlocks_ColorFilterToolBlock_BlockType_Fragment | ContentBlockFactory_ContentBlocks_Equation_BlockType_Fragment | ContentBlockFactory_ContentBlocks_FilterTool_BlockType_Fragment | ContentBlockFactory_ContentBlocks_Group_BlockType_Fragment | ContentBlockFactory_ContentBlocks_Image_BlockType_Fragment | ContentBlockFactory_ContentBlocks_MagnitudeScatterPlot_BlockType_Fragment | ContentBlockFactory_ContentBlocks_QuestionBlock_BlockType_Fragment | ContentBlockFactory_ContentBlocks_ReferenceBlock_BlockType_Fragment | ContentBlockFactory_ContentBlocks_ScatterplotTool_BlockType_Fragment | ContentBlockFactory_ContentBlocks_SupernovaDistanceDistribution_BlockType_Fragment | ContentBlockFactory_ContentBlocks_Table_BlockType_Fragment | ContentBlockFactory_ContentBlocks_Text_BlockType_Fragment | ContentBlockFactory_ContentBlocks_TwoColumnContainer_BlockType_Fragment | ContentBlockFactory_ContentBlocks_Video_BlockType_Fragment;

export type QuestionEntryFragment = (
  { __typename: 'questions_default_Entry', id: string | null, answerType: string | null, questionText: string | null, options: Array<{ __typename?: 'answerOptions_option_BlockType', label: string | null, value: string | null } | null> }
  & { ' $fragmentRefs'?: { 'CalculatorQuestionFragment': CalculatorQuestionFragment;'TabularQuestionFragment': TabularQuestionFragment;'WidgetQuestionFragment': WidgetQuestionFragment;'NumberQuestionFragment': NumberQuestionFragment;'MultipartQuestionFragment': MultipartQuestionFragment } }
) & { ' $fragmentName'?: 'QuestionEntryFragment' };

type TemplateFactory_Datasets_StarCluster_Entry_Fragment = { __typename: 'datasets_starCluster_Entry' } & { ' $fragmentName'?: 'TemplateFactory_Datasets_StarCluster_Entry_Fragment' };

type TemplateFactory_Datasets_SupernovaGalaxyObservations_Entry_Fragment = { __typename: 'datasets_supernovaGalaxyObservations_Entry' } & { ' $fragmentName'?: 'TemplateFactory_Datasets_SupernovaGalaxyObservations_Entry_Fragment' };

type TemplateFactory_Homepage_Homepage_Entry_Fragment = { __typename: 'homepage_homepage_Entry' } & { ' $fragmentName'?: 'TemplateFactory_Homepage_Homepage_Entry_Fragment' };

type TemplateFactory_Investigations_Default_Entry_Fragment = { __typename: 'investigations_default_Entry' } & { ' $fragmentName'?: 'TemplateFactory_Investigations_Default_Entry_Fragment' };

type TemplateFactory_Investigations_InvestigationParent_Entry_Fragment = { __typename: 'investigations_investigationParent_Entry' } & { ' $fragmentName'?: 'TemplateFactory_Investigations_InvestigationParent_Entry_Fragment' };

type TemplateFactory_Investigations_InvestigationSectionBreakChild_Entry_Fragment = { __typename: 'investigations_investigationSectionBreakChild_Entry' } & { ' $fragmentName'?: 'TemplateFactory_Investigations_InvestigationSectionBreakChild_Entry_Fragment' };

type TemplateFactory_Pages_Pages_Entry_Fragment = (
  { __typename: 'pages_pages_Entry' }
  & { ' $fragmentRefs'?: { 'PageTemplateFragment': PageTemplateFragment } }
) & { ' $fragmentName'?: 'TemplateFactory_Pages_Pages_Entry_Fragment' };

type TemplateFactory_Pages_RedirectPage_Entry_Fragment = { __typename: 'pages_redirectPage_Entry' } & { ' $fragmentName'?: 'TemplateFactory_Pages_RedirectPage_Entry_Fragment' };

type TemplateFactory_Questions_Default_Entry_Fragment = { __typename: 'questions_default_Entry' } & { ' $fragmentName'?: 'TemplateFactory_Questions_Default_Entry_Fragment' };

type TemplateFactory_ReferenceContent_Default_Entry_Fragment = { __typename: 'referenceContent_default_Entry' } & { ' $fragmentName'?: 'TemplateFactory_ReferenceContent_Default_Entry_Fragment' };

type TemplateFactory_Widgets_ColorFilterTool_Entry_Fragment = { __typename: 'widgets_colorFilterTool_Entry' } & { ' $fragmentName'?: 'TemplateFactory_Widgets_ColorFilterTool_Entry_Fragment' };

type TemplateFactory_Widgets_IsochronePlot_Entry_Fragment = { __typename: 'widgets_isochronePlot_Entry' } & { ' $fragmentName'?: 'TemplateFactory_Widgets_IsochronePlot_Entry_Fragment' };

type TemplateFactory_Widgets_LightCurveTool_Entry_Fragment = { __typename: 'widgets_lightCurveTool_Entry' } & { ' $fragmentName'?: 'TemplateFactory_Widgets_LightCurveTool_Entry_Fragment' };

type TemplateFactory_Widgets_SourceSelector_Entry_Fragment = { __typename: 'widgets_sourceSelector_Entry' } & { ' $fragmentName'?: 'TemplateFactory_Widgets_SourceSelector_Entry_Fragment' };

export type TemplateFactoryFragment = TemplateFactory_Datasets_StarCluster_Entry_Fragment | TemplateFactory_Datasets_SupernovaGalaxyObservations_Entry_Fragment | TemplateFactory_Homepage_Homepage_Entry_Fragment | TemplateFactory_Investigations_Default_Entry_Fragment | TemplateFactory_Investigations_InvestigationParent_Entry_Fragment | TemplateFactory_Investigations_InvestigationSectionBreakChild_Entry_Fragment | TemplateFactory_Pages_Pages_Entry_Fragment | TemplateFactory_Pages_RedirectPage_Entry_Fragment | TemplateFactory_Questions_Default_Entry_Fragment | TemplateFactory_ReferenceContent_Default_Entry_Fragment | TemplateFactory_Widgets_ColorFilterTool_Entry_Fragment | TemplateFactory_Widgets_IsochronePlot_Entry_Fragment | TemplateFactory_Widgets_LightCurveTool_Entry_Fragment | TemplateFactory_Widgets_SourceSelector_Entry_Fragment;

export type CalculatorQuestionFragment = { __typename?: 'questions_default_Entry', id: string | null, questionText: string | null, equation: string | null } & { ' $fragmentName'?: 'CalculatorQuestionFragment' };

export type MultiselectPartFragment = { __typename?: 'multiPartBlocks_multiselect_BlockType', id: string | null, type: string | null, options: Array<{ __typename?: 'answerOptions_option_BlockType', id: string | null, label: string | null, value: string | null } | null> } & { ' $fragmentName'?: 'MultiselectPartFragment' };

export type NumberPartFragment = { __typename?: 'multiPartBlocks_number_BlockType', id: string | null, minimum: any | null, maximum: any | null, precision: any | null, type: string | null, validation: Array<{ __typename?: 'validation_numberValidator_BlockType', id: string | null } | null> } & { ' $fragmentName'?: 'NumberPartFragment' };

export type ReadOnlyPartFragment = { __typename?: 'multiPartBlocks_readonlyText_BlockType', id: string | null, type: string | null, text: string | null } & { ' $fragmentName'?: 'ReadOnlyPartFragment' };

export type SelectPartFragment = { __typename?: 'multiPartBlocks_select_BlockType', id: string | null, type: string | null, options: Array<{ __typename?: 'answerOptions_option_BlockType', id: string | null, label: string | null, value: string | null } | null> } & { ' $fragmentName'?: 'SelectPartFragment' };

export type MultipartQuestionFragment = { __typename: 'questions_default_Entry', id: string | null, answerType: string | null, parts: Array<(
    { __typename?: 'multiPartBlocks_multiselect_BlockType', id: string | null, type: string | null }
    & { ' $fragmentRefs'?: { 'MultiselectPartFragment': MultiselectPartFragment } }
  ) | (
    { __typename?: 'multiPartBlocks_number_BlockType', id: string | null, type: string | null }
    & { ' $fragmentRefs'?: { 'NumberPartFragment': NumberPartFragment } }
  ) | (
    { __typename?: 'multiPartBlocks_readonlyText_BlockType', id: string | null, type: string | null }
    & { ' $fragmentRefs'?: { 'ReadOnlyPartFragment': ReadOnlyPartFragment } }
  ) | (
    { __typename?: 'multiPartBlocks_select_BlockType', id: string | null, type: string | null }
    & { ' $fragmentRefs'?: { 'SelectPartFragment': SelectPartFragment } }
  ) | { __typename?: 'multiPartBlocks_text_BlockType', id: string | null, type: string | null } | null> | null } & { ' $fragmentName'?: 'MultipartQuestionFragment' };

export type NumberQuestionFragment = { __typename: 'questions_default_Entry', id: string | null, questionText: string | null, minimum: any | null, maximum: any | null, precision: any | null, validation: Array<{ __typename?: 'validation_numberValidator_BlockType', id: string | null } | null> } & { ' $fragmentName'?: 'NumberQuestionFragment' };

export type TableRowsFragment = { __typename?: 'questions_default_Entry', id: string | null, header: Array<{ __typename?: 'tableHeader_BlockType', headerRow: Array<{ __typename?: 'headerRow_tableCell_BlockType', id: string | null, text: string | null, equation: string | null } | null> } | null>, rows: Array<{ __typename?: 'questionTable_BlockType', cells: Array<{ __typename?: 'tableCell_previousQuestion_BlockType', question: Array<{ __typename?: 'datasets_starCluster_Entry' } | { __typename?: 'datasets_supernovaGalaxyObservations_Entry' } | { __typename?: 'homepage_homepage_Entry' } | { __typename?: 'investigations_default_Entry' } | { __typename?: 'investigations_investigationParent_Entry' } | { __typename?: 'investigations_investigationSectionBreakChild_Entry' } | { __typename?: 'pages_pages_Entry' } | { __typename?: 'pages_redirectPage_Entry' } | { __typename?: 'questions_default_Entry', id: string | null, answerType: string | null, rows: Array<{ __typename?: 'questionTable_BlockType', cells: Array<{ __typename?: 'tableCell_previousQuestion_BlockType' } | { __typename?: 'tableCell_question_BlockType', id: string | null, answerType: string | null, options: Array<{ __typename?: 'options_BlockType', label: string | null, value: string | null } | null> } | { __typename?: 'tableCell_rowHeader_BlockType', id: string | null, equation: string | null, text: string | null } | { __typename?: 'tableCell_static_BlockType', id: string | null, equation: string | null, text: string | null } | null> } | null> } | { __typename?: 'referenceContent_default_Entry' } | { __typename?: 'widgets_colorFilterTool_Entry' } | { __typename?: 'widgets_isochronePlot_Entry' } | { __typename?: 'widgets_lightCurveTool_Entry' } | { __typename?: 'widgets_sourceSelector_Entry' } | null> } | { __typename?: 'tableCell_question_BlockType', id: string | null, answerType: string | null, options: Array<{ __typename?: 'options_BlockType', label: string | null, value: string | null } | null> } | { __typename?: 'tableCell_rowHeader_BlockType', id: string | null, equation: string | null, text: string | null } | { __typename?: 'tableCell_static_BlockType', id: string | null, equation: string | null, text: string | null } | null> } | null> } & { ' $fragmentName'?: 'TableRowsFragment' };

export type TabularQuestionFragment = (
  { __typename?: 'questions_default_Entry', id: string | null, questionText: string | null }
  & { ' $fragmentRefs'?: { 'TableRowsFragment': TableRowsFragment } }
) & { ' $fragmentName'?: 'TabularQuestionFragment' };

export type ColorFilterToolQuestionFragment = { __typename?: 'questionWidgetsBlock_colorFilterToolBlock_BlockType', colorFilterTool: Array<{ __typename?: 'datasets_starCluster_Entry' } | { __typename?: 'datasets_supernovaGalaxyObservations_Entry' } | { __typename?: 'homepage_homepage_Entry' } | { __typename?: 'investigations_default_Entry' } | { __typename?: 'investigations_investigationParent_Entry' } | { __typename?: 'investigations_investigationSectionBreakChild_Entry' } | { __typename?: 'pages_pages_Entry' } | { __typename?: 'pages_redirectPage_Entry' } | { __typename?: 'questions_default_Entry' } | { __typename?: 'referenceContent_default_Entry' } | (
    { __typename?: 'widgets_colorFilterTool_Entry' }
    & { ' $fragmentRefs'?: { 'ColorFilterToolEntryFragment': ColorFilterToolEntryFragment } }
  ) | { __typename?: 'widgets_isochronePlot_Entry' } | { __typename?: 'widgets_lightCurveTool_Entry' } | { __typename?: 'widgets_sourceSelector_Entry' } | null> } & { ' $fragmentName'?: 'ColorFilterToolQuestionFragment' };

export type IsochronePlotQuestionFragment = { __typename: 'questionWidgetsBlock_isochronePlot_BlockType', id: string | null, dataset: Array<{ __typename?: 'datasets_starCluster_Entry', id: string | null, title: string | null, yMin: any | null, yMax: any | null, xMin: any | null, xMax: any | null, ageLibrary: Array<{ __typename?: 'datasets_Asset', url: string | null } | null>, plotPoints: Array<{ __typename?: 'datasets_Asset', url: string | null } | null> } | { __typename?: 'datasets_supernovaGalaxyObservations_Entry' } | { __typename?: 'homepage_homepage_Entry' } | { __typename?: 'investigations_default_Entry' } | { __typename?: 'investigations_investigationParent_Entry' } | { __typename?: 'investigations_investigationSectionBreakChild_Entry' } | { __typename?: 'pages_pages_Entry' } | { __typename?: 'pages_redirectPage_Entry' } | { __typename?: 'questions_default_Entry' } | { __typename?: 'referenceContent_default_Entry' } | { __typename?: 'widgets_colorFilterTool_Entry' } | { __typename?: 'widgets_isochronePlot_Entry' } | { __typename?: 'widgets_lightCurveTool_Entry' } | { __typename?: 'widgets_sourceSelector_Entry' } | null> } & { ' $fragmentName'?: 'IsochronePlotQuestionFragment' };

export type LightCurveQuestionFragment = { __typename: 'questionWidgetsBlock_lightCurveBlock_BlockType', lightCurveTool: Array<{ __typename?: 'datasets_starCluster_Entry' } | { __typename?: 'datasets_supernovaGalaxyObservations_Entry' } | { __typename?: 'homepage_homepage_Entry' } | { __typename?: 'investigations_default_Entry' } | { __typename?: 'investigations_investigationParent_Entry' } | { __typename?: 'investigations_investigationSectionBreakChild_Entry' } | { __typename?: 'pages_pages_Entry' } | { __typename?: 'pages_redirectPage_Entry' } | { __typename?: 'questions_default_Entry' } | { __typename?: 'referenceContent_default_Entry' } | { __typename?: 'widgets_colorFilterTool_Entry' } | { __typename?: 'widgets_isochronePlot_Entry' } | { __typename?: 'widgets_lightCurveTool_Entry', title: string | null, displayName: string | null, yMin: any | null, yMax: any | null, dataset: Array<{ __typename?: 'datasets_starCluster_Entry' } | { __typename?: 'datasets_supernovaGalaxyObservations_Entry', id: string | null, peakMjd: any | null, json: Array<{ __typename?: 'datasets_Asset', url: string | null } | null> } | { __typename?: 'homepage_homepage_Entry' } | { __typename?: 'investigations_default_Entry' } | { __typename?: 'investigations_investigationParent_Entry' } | { __typename?: 'investigations_investigationSectionBreakChild_Entry' } | { __typename?: 'pages_pages_Entry' } | { __typename?: 'pages_redirectPage_Entry' } | { __typename?: 'questions_default_Entry' } | { __typename?: 'referenceContent_default_Entry' } | { __typename?: 'widgets_colorFilterTool_Entry' } | { __typename?: 'widgets_isochronePlot_Entry' } | { __typename?: 'widgets_lightCurveTool_Entry' } | { __typename?: 'widgets_sourceSelector_Entry' } | null> } | { __typename?: 'widgets_sourceSelector_Entry' } | null> } & { ' $fragmentName'?: 'LightCurveQuestionFragment' };

export type SourceSelectorQuestionFragment = { __typename: 'questionWidgetsBlock_sourceSelectorBlock_BlockType', sourceSelector: Array<{ __typename?: 'datasets_starCluster_Entry' } | { __typename?: 'datasets_supernovaGalaxyObservations_Entry' } | { __typename?: 'homepage_homepage_Entry' } | { __typename?: 'investigations_default_Entry' } | { __typename?: 'investigations_investigationParent_Entry' } | { __typename?: 'investigations_investigationSectionBreakChild_Entry' } | { __typename?: 'pages_pages_Entry' } | { __typename?: 'pages_redirectPage_Entry' } | { __typename?: 'questions_default_Entry' } | { __typename?: 'referenceContent_default_Entry' } | { __typename?: 'widgets_colorFilterTool_Entry' } | { __typename?: 'widgets_isochronePlot_Entry' } | { __typename?: 'widgets_lightCurveTool_Entry' } | { __typename?: 'widgets_sourceSelector_Entry', id: string | null, title: string | null, displayName: string | null, includeScatterPlot: boolean | null, yMin: any | null, yMax: any | null, dataset: Array<{ __typename?: 'datasets_starCluster_Entry' } | { __typename?: 'datasets_supernovaGalaxyObservations_Entry', id: string | null, peakMjd: any | null, sources: Array<{ __typename?: 'alertSources_source_BlockType', color: string | null, radius: any | null, x: any | null, y: any | null, type: string | null, id: string | null } | null>, json: Array<{ __typename?: 'datasets_Asset', url: string | null } | null>, imageAlbum: Array<never | null> | null } | { __typename?: 'homepage_homepage_Entry' } | { __typename?: 'investigations_default_Entry' } | { __typename?: 'investigations_investigationParent_Entry' } | { __typename?: 'investigations_investigationSectionBreakChild_Entry' } | { __typename?: 'pages_pages_Entry' } | { __typename?: 'pages_redirectPage_Entry' } | { __typename?: 'questions_default_Entry' } | { __typename?: 'referenceContent_default_Entry' } | { __typename?: 'widgets_colorFilterTool_Entry' } | { __typename?: 'widgets_isochronePlot_Entry' } | { __typename?: 'widgets_lightCurveTool_Entry' } | { __typename?: 'widgets_sourceSelector_Entry' } | null> } | null> } & { ' $fragmentName'?: 'SourceSelectorQuestionFragment' };

export type WidgetQuestionFragment = { __typename: 'questions_default_Entry', id: string | null, instructions: string | null, questionWidgetsBlock: Array<(
    { __typename: 'questionWidgetsBlock_colorFilterToolBlock_BlockType' }
    & { ' $fragmentRefs'?: { 'ColorFilterToolQuestionFragment': ColorFilterToolQuestionFragment } }
  ) | (
    { __typename: 'questionWidgetsBlock_isochronePlot_BlockType' }
    & { ' $fragmentRefs'?: { 'IsochronePlotQuestionFragment': IsochronePlotQuestionFragment } }
  ) | (
    { __typename: 'questionWidgetsBlock_lightCurveBlock_BlockType' }
    & { ' $fragmentRefs'?: { 'LightCurveQuestionFragment': LightCurveQuestionFragment } }
  ) | (
    { __typename: 'questionWidgetsBlock_sourceSelectorBlock_BlockType' }
    & { ' $fragmentRefs'?: { 'SourceSelectorQuestionFragment': SourceSelectorQuestionFragment } }
  ) | null> | null } & { ' $fragmentName'?: 'WidgetQuestionFragment' };

export type QuestionValidationQueryVariables = Exact<{
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>> | InputMaybe<Scalars['String']['input']>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>> | InputMaybe<Scalars['QueryArgument']['input']>>;
}>;


export type QuestionValidationQuery = { __typename?: 'Query', entry: { __typename?: 'datasets_starCluster_Entry' } | { __typename?: 'datasets_supernovaGalaxyObservations_Entry' } | { __typename?: 'homepage_homepage_Entry' } | { __typename?: 'investigations_default_Entry' } | { __typename?: 'investigations_investigationParent_Entry' } | { __typename?: 'investigations_investigationSectionBreakChild_Entry' } | { __typename?: 'pages_pages_Entry' } | { __typename?: 'pages_redirectPage_Entry' } | { __typename?: 'questions_default_Entry', validation: Array<{ __typename?: 'validation_numberValidator_BlockType', comparison: string | null, operator: string | null, message: string | null } | null>, multiPartBlocks: Array<{ __typename?: 'multiPartBlocks_multiselect_BlockType' } | { __typename?: 'multiPartBlocks_number_BlockType', id: string | null, validation: Array<{ __typename?: 'validation_numberValidator_BlockType', comparison: string | null, operator: string | null, message: string | null } | null> } | { __typename?: 'multiPartBlocks_readonlyText_BlockType' } | { __typename?: 'multiPartBlocks_select_BlockType' } | { __typename?: 'multiPartBlocks_text_BlockType' } | null> | null } | { __typename?: 'referenceContent_default_Entry' } | { __typename?: 'widgets_colorFilterTool_Entry' } | { __typename?: 'widgets_isochronePlot_Entry' } | { __typename?: 'widgets_lightCurveTool_Entry' } | { __typename?: 'widgets_sourceSelector_Entry' } | null };

export type HomepageTemplateFragment = { __typename: 'homepage_homepage_Entry', id: string | null, title: string | null, contentBlocks: Array<{ __typename: 'homepageContentBlocks_image_BlockType', id: string | null, caption: string | null, layout: string | null, image: Array<never | null> | null } | (
    { __typename: 'homepageContentBlocks_investigationGrid_BlockType' }
    & { ' $fragmentRefs'?: { 'InvestigationGridBlockFragment': InvestigationGridBlockFragment } }
  ) | { __typename: 'homepageContentBlocks_text_BlockType', id: string | null, text: string | null } | null> | null } & { ' $fragmentName'?: 'HomepageTemplateFragment' };

export type InvestigationChildPageTemplateFragment = { __typename: 'investigations_default_Entry', id: string | null, title: string | null, hasSavePoint: boolean | null, contentBlocks: Array<(
    { __typename?: 'contentBlocks_barGraphTool_BlockType' }
    & { ' $fragmentRefs'?: { 'ContentBlockFactory_ContentBlocks_BarGraphTool_BlockType_Fragment': ContentBlockFactory_ContentBlocks_BarGraphTool_BlockType_Fragment } }
  ) | (
    { __typename?: 'contentBlocks_cameraFilterTool_BlockType' }
    & { ' $fragmentRefs'?: { 'ContentBlockFactory_ContentBlocks_CameraFilterTool_BlockType_Fragment': ContentBlockFactory_ContentBlocks_CameraFilterTool_BlockType_Fragment } }
  ) | (
    { __typename?: 'contentBlocks_colLeft_BlockType' }
    & { ' $fragmentRefs'?: { 'ContentBlockFactory_ContentBlocks_ColLeft_BlockType_Fragment': ContentBlockFactory_ContentBlocks_ColLeft_BlockType_Fragment } }
  ) | (
    { __typename?: 'contentBlocks_colRight_BlockType' }
    & { ' $fragmentRefs'?: { 'ContentBlockFactory_ContentBlocks_ColRight_BlockType_Fragment': ContentBlockFactory_ContentBlocks_ColRight_BlockType_Fragment } }
  ) | (
    { __typename?: 'contentBlocks_colorFilterToolBlock_BlockType' }
    & { ' $fragmentRefs'?: { 'ContentBlockFactory_ContentBlocks_ColorFilterToolBlock_BlockType_Fragment': ContentBlockFactory_ContentBlocks_ColorFilterToolBlock_BlockType_Fragment } }
  ) | (
    { __typename?: 'contentBlocks_equation_BlockType' }
    & { ' $fragmentRefs'?: { 'ContentBlockFactory_ContentBlocks_Equation_BlockType_Fragment': ContentBlockFactory_ContentBlocks_Equation_BlockType_Fragment } }
  ) | (
    { __typename?: 'contentBlocks_filterTool_BlockType' }
    & { ' $fragmentRefs'?: { 'ContentBlockFactory_ContentBlocks_FilterTool_BlockType_Fragment': ContentBlockFactory_ContentBlocks_FilterTool_BlockType_Fragment } }
  ) | (
    { __typename?: 'contentBlocks_group_BlockType' }
    & { ' $fragmentRefs'?: { 'ContentBlockFactory_ContentBlocks_Group_BlockType_Fragment': ContentBlockFactory_ContentBlocks_Group_BlockType_Fragment } }
  ) | (
    { __typename?: 'contentBlocks_image_BlockType' }
    & { ' $fragmentRefs'?: { 'ContentBlockFactory_ContentBlocks_Image_BlockType_Fragment': ContentBlockFactory_ContentBlocks_Image_BlockType_Fragment } }
  ) | (
    { __typename?: 'contentBlocks_magnitudeScatterPlot_BlockType' }
    & { ' $fragmentRefs'?: { 'ContentBlockFactory_ContentBlocks_MagnitudeScatterPlot_BlockType_Fragment': ContentBlockFactory_ContentBlocks_MagnitudeScatterPlot_BlockType_Fragment } }
  ) | (
    { __typename?: 'contentBlocks_questionBlock_BlockType' }
    & { ' $fragmentRefs'?: { 'ContentBlockFactory_ContentBlocks_QuestionBlock_BlockType_Fragment': ContentBlockFactory_ContentBlocks_QuestionBlock_BlockType_Fragment } }
  ) | (
    { __typename?: 'contentBlocks_referenceBlock_BlockType' }
    & { ' $fragmentRefs'?: { 'ContentBlockFactory_ContentBlocks_ReferenceBlock_BlockType_Fragment': ContentBlockFactory_ContentBlocks_ReferenceBlock_BlockType_Fragment } }
  ) | (
    { __typename?: 'contentBlocks_scatterplotTool_BlockType' }
    & { ' $fragmentRefs'?: { 'ContentBlockFactory_ContentBlocks_ScatterplotTool_BlockType_Fragment': ContentBlockFactory_ContentBlocks_ScatterplotTool_BlockType_Fragment } }
  ) | (
    { __typename?: 'contentBlocks_supernovaDistanceDistribution_BlockType' }
    & { ' $fragmentRefs'?: { 'ContentBlockFactory_ContentBlocks_SupernovaDistanceDistribution_BlockType_Fragment': ContentBlockFactory_ContentBlocks_SupernovaDistanceDistribution_BlockType_Fragment } }
  ) | (
    { __typename?: 'contentBlocks_table_BlockType' }
    & { ' $fragmentRefs'?: { 'ContentBlockFactory_ContentBlocks_Table_BlockType_Fragment': ContentBlockFactory_ContentBlocks_Table_BlockType_Fragment } }
  ) | (
    { __typename?: 'contentBlocks_text_BlockType' }
    & { ' $fragmentRefs'?: { 'ContentBlockFactory_ContentBlocks_Text_BlockType_Fragment': ContentBlockFactory_ContentBlocks_Text_BlockType_Fragment } }
  ) | (
    { __typename?: 'contentBlocks_twoColumnContainer_BlockType' }
    & { ' $fragmentRefs'?: { 'ContentBlockFactory_ContentBlocks_TwoColumnContainer_BlockType_Fragment': ContentBlockFactory_ContentBlocks_TwoColumnContainer_BlockType_Fragment } }
  ) | (
    { __typename?: 'contentBlocks_video_BlockType' }
    & { ' $fragmentRefs'?: { 'ContentBlockFactory_ContentBlocks_Video_BlockType_Fragment': ContentBlockFactory_ContentBlocks_Video_BlockType_Fragment } }
  ) | null> | null, parent: { __typename?: 'datasets_starCluster_Entry', id: string | null } | { __typename?: 'datasets_supernovaGalaxyObservations_Entry', id: string | null } | { __typename?: 'homepage_homepage_Entry', id: string | null } | { __typename?: 'investigations_default_Entry', id: string | null } | { __typename?: 'investigations_investigationParent_Entry', id: string | null } | { __typename?: 'investigations_investigationSectionBreakChild_Entry', id: string | null } | { __typename?: 'pages_pages_Entry', id: string | null } | { __typename?: 'pages_redirectPage_Entry', id: string | null } | { __typename?: 'questions_default_Entry', id: string | null } | { __typename?: 'referenceContent_default_Entry', id: string | null } | { __typename?: 'widgets_colorFilterTool_Entry', id: string | null } | { __typename?: 'widgets_isochronePlot_Entry', id: string | null } | { __typename?: 'widgets_lightCurveTool_Entry', id: string | null } | { __typename?: 'widgets_sourceSelector_Entry', id: string | null } | null } & { ' $fragmentName'?: 'InvestigationChildPageTemplateFragment' };

export type InvestigationLandingPageTemplateFragment = { __typename?: 'investigations_investigationParent_Entry', title: string | null, image: Array<never | null> | null, children: Array<{ __typename?: 'datasets_starCluster_Entry', uri: string | null } | { __typename?: 'datasets_supernovaGalaxyObservations_Entry', uri: string | null } | { __typename?: 'homepage_homepage_Entry', uri: string | null } | { __typename?: 'investigations_default_Entry', uri: string | null } | { __typename?: 'investigations_investigationParent_Entry', uri: string | null } | { __typename?: 'investigations_investigationSectionBreakChild_Entry', uri: string | null } | { __typename?: 'pages_pages_Entry', uri: string | null } | { __typename?: 'pages_redirectPage_Entry', uri: string | null } | { __typename?: 'questions_default_Entry', uri: string | null } | { __typename?: 'referenceContent_default_Entry', uri: string | null } | { __typename?: 'widgets_colorFilterTool_Entry', uri: string | null } | { __typename?: 'widgets_isochronePlot_Entry', uri: string | null } | { __typename?: 'widgets_lightCurveTool_Entry', uri: string | null } | { __typename?: 'widgets_sourceSelector_Entry', uri: string | null }> } & { ' $fragmentName'?: 'InvestigationLandingPageTemplateFragment' };

export type InvestigationSectionBreakTemplateFragment = { __typename: 'investigations_investigationSectionBreakChild_Entry', id: string | null, text: string | null, parent: { __typename?: 'datasets_starCluster_Entry', id: string | null } | { __typename?: 'datasets_supernovaGalaxyObservations_Entry', id: string | null } | { __typename?: 'homepage_homepage_Entry', id: string | null } | { __typename?: 'investigations_default_Entry', id: string | null } | { __typename?: 'investigations_investigationParent_Entry', id: string | null } | { __typename?: 'investigations_investigationSectionBreakChild_Entry', id: string | null } | { __typename?: 'pages_pages_Entry', id: string | null } | { __typename?: 'pages_redirectPage_Entry', id: string | null } | { __typename?: 'questions_default_Entry', id: string | null } | { __typename?: 'referenceContent_default_Entry', id: string | null } | { __typename?: 'widgets_colorFilterTool_Entry', id: string | null } | { __typename?: 'widgets_isochronePlot_Entry', id: string | null } | { __typename?: 'widgets_lightCurveTool_Entry', id: string | null } | { __typename?: 'widgets_sourceSelector_Entry', id: string | null } | null, next: { __typename: 'datasets_starCluster_Entry', uri: string | null, parent: { __typename?: 'datasets_starCluster_Entry', id: string | null } | { __typename?: 'datasets_supernovaGalaxyObservations_Entry', id: string | null } | { __typename?: 'homepage_homepage_Entry', id: string | null } | { __typename?: 'investigations_default_Entry', id: string | null } | { __typename?: 'investigations_investigationParent_Entry', id: string | null } | { __typename?: 'investigations_investigationSectionBreakChild_Entry', id: string | null } | { __typename?: 'pages_pages_Entry', id: string | null } | { __typename?: 'pages_redirectPage_Entry', id: string | null } | { __typename?: 'questions_default_Entry', id: string | null } | { __typename?: 'referenceContent_default_Entry', id: string | null } | { __typename?: 'widgets_colorFilterTool_Entry', id: string | null } | { __typename?: 'widgets_isochronePlot_Entry', id: string | null } | { __typename?: 'widgets_lightCurveTool_Entry', id: string | null } | { __typename?: 'widgets_sourceSelector_Entry', id: string | null } | null } | { __typename: 'datasets_supernovaGalaxyObservations_Entry', uri: string | null, parent: { __typename?: 'datasets_starCluster_Entry', id: string | null } | { __typename?: 'datasets_supernovaGalaxyObservations_Entry', id: string | null } | { __typename?: 'homepage_homepage_Entry', id: string | null } | { __typename?: 'investigations_default_Entry', id: string | null } | { __typename?: 'investigations_investigationParent_Entry', id: string | null } | { __typename?: 'investigations_investigationSectionBreakChild_Entry', id: string | null } | { __typename?: 'pages_pages_Entry', id: string | null } | { __typename?: 'pages_redirectPage_Entry', id: string | null } | { __typename?: 'questions_default_Entry', id: string | null } | { __typename?: 'referenceContent_default_Entry', id: string | null } | { __typename?: 'widgets_colorFilterTool_Entry', id: string | null } | { __typename?: 'widgets_isochronePlot_Entry', id: string | null } | { __typename?: 'widgets_lightCurveTool_Entry', id: string | null } | { __typename?: 'widgets_sourceSelector_Entry', id: string | null } | null } | { __typename: 'homepage_homepage_Entry', uri: string | null, parent: { __typename?: 'datasets_starCluster_Entry', id: string | null } | { __typename?: 'datasets_supernovaGalaxyObservations_Entry', id: string | null } | { __typename?: 'homepage_homepage_Entry', id: string | null } | { __typename?: 'investigations_default_Entry', id: string | null } | { __typename?: 'investigations_investigationParent_Entry', id: string | null } | { __typename?: 'investigations_investigationSectionBreakChild_Entry', id: string | null } | { __typename?: 'pages_pages_Entry', id: string | null } | { __typename?: 'pages_redirectPage_Entry', id: string | null } | { __typename?: 'questions_default_Entry', id: string | null } | { __typename?: 'referenceContent_default_Entry', id: string | null } | { __typename?: 'widgets_colorFilterTool_Entry', id: string | null } | { __typename?: 'widgets_isochronePlot_Entry', id: string | null } | { __typename?: 'widgets_lightCurveTool_Entry', id: string | null } | { __typename?: 'widgets_sourceSelector_Entry', id: string | null } | null } | { __typename: 'investigations_default_Entry', uri: string | null, parent: { __typename?: 'datasets_starCluster_Entry', id: string | null } | { __typename?: 'datasets_supernovaGalaxyObservations_Entry', id: string | null } | { __typename?: 'homepage_homepage_Entry', id: string | null } | { __typename?: 'investigations_default_Entry', id: string | null } | { __typename?: 'investigations_investigationParent_Entry', id: string | null } | { __typename?: 'investigations_investigationSectionBreakChild_Entry', id: string | null } | { __typename?: 'pages_pages_Entry', id: string | null } | { __typename?: 'pages_redirectPage_Entry', id: string | null } | { __typename?: 'questions_default_Entry', id: string | null } | { __typename?: 'referenceContent_default_Entry', id: string | null } | { __typename?: 'widgets_colorFilterTool_Entry', id: string | null } | { __typename?: 'widgets_isochronePlot_Entry', id: string | null } | { __typename?: 'widgets_lightCurveTool_Entry', id: string | null } | { __typename?: 'widgets_sourceSelector_Entry', id: string | null } | null } | { __typename: 'investigations_investigationParent_Entry', uri: string | null, parent: { __typename?: 'datasets_starCluster_Entry', id: string | null } | { __typename?: 'datasets_supernovaGalaxyObservations_Entry', id: string | null } | { __typename?: 'homepage_homepage_Entry', id: string | null } | { __typename?: 'investigations_default_Entry', id: string | null } | { __typename?: 'investigations_investigationParent_Entry', id: string | null } | { __typename?: 'investigations_investigationSectionBreakChild_Entry', id: string | null } | { __typename?: 'pages_pages_Entry', id: string | null } | { __typename?: 'pages_redirectPage_Entry', id: string | null } | { __typename?: 'questions_default_Entry', id: string | null } | { __typename?: 'referenceContent_default_Entry', id: string | null } | { __typename?: 'widgets_colorFilterTool_Entry', id: string | null } | { __typename?: 'widgets_isochronePlot_Entry', id: string | null } | { __typename?: 'widgets_lightCurveTool_Entry', id: string | null } | { __typename?: 'widgets_sourceSelector_Entry', id: string | null } | null } | { __typename: 'investigations_investigationSectionBreakChild_Entry', uri: string | null, parent: { __typename?: 'datasets_starCluster_Entry', id: string | null } | { __typename?: 'datasets_supernovaGalaxyObservations_Entry', id: string | null } | { __typename?: 'homepage_homepage_Entry', id: string | null } | { __typename?: 'investigations_default_Entry', id: string | null } | { __typename?: 'investigations_investigationParent_Entry', id: string | null } | { __typename?: 'investigations_investigationSectionBreakChild_Entry', id: string | null } | { __typename?: 'pages_pages_Entry', id: string | null } | { __typename?: 'pages_redirectPage_Entry', id: string | null } | { __typename?: 'questions_default_Entry', id: string | null } | { __typename?: 'referenceContent_default_Entry', id: string | null } | { __typename?: 'widgets_colorFilterTool_Entry', id: string | null } | { __typename?: 'widgets_isochronePlot_Entry', id: string | null } | { __typename?: 'widgets_lightCurveTool_Entry', id: string | null } | { __typename?: 'widgets_sourceSelector_Entry', id: string | null } | null } | { __typename: 'pages_pages_Entry', uri: string | null, parent: { __typename?: 'datasets_starCluster_Entry', id: string | null } | { __typename?: 'datasets_supernovaGalaxyObservations_Entry', id: string | null } | { __typename?: 'homepage_homepage_Entry', id: string | null } | { __typename?: 'investigations_default_Entry', id: string | null } | { __typename?: 'investigations_investigationParent_Entry', id: string | null } | { __typename?: 'investigations_investigationSectionBreakChild_Entry', id: string | null } | { __typename?: 'pages_pages_Entry', id: string | null } | { __typename?: 'pages_redirectPage_Entry', id: string | null } | { __typename?: 'questions_default_Entry', id: string | null } | { __typename?: 'referenceContent_default_Entry', id: string | null } | { __typename?: 'widgets_colorFilterTool_Entry', id: string | null } | { __typename?: 'widgets_isochronePlot_Entry', id: string | null } | { __typename?: 'widgets_lightCurveTool_Entry', id: string | null } | { __typename?: 'widgets_sourceSelector_Entry', id: string | null } | null } | { __typename: 'pages_redirectPage_Entry', uri: string | null, parent: { __typename?: 'datasets_starCluster_Entry', id: string | null } | { __typename?: 'datasets_supernovaGalaxyObservations_Entry', id: string | null } | { __typename?: 'homepage_homepage_Entry', id: string | null } | { __typename?: 'investigations_default_Entry', id: string | null } | { __typename?: 'investigations_investigationParent_Entry', id: string | null } | { __typename?: 'investigations_investigationSectionBreakChild_Entry', id: string | null } | { __typename?: 'pages_pages_Entry', id: string | null } | { __typename?: 'pages_redirectPage_Entry', id: string | null } | { __typename?: 'questions_default_Entry', id: string | null } | { __typename?: 'referenceContent_default_Entry', id: string | null } | { __typename?: 'widgets_colorFilterTool_Entry', id: string | null } | { __typename?: 'widgets_isochronePlot_Entry', id: string | null } | { __typename?: 'widgets_lightCurveTool_Entry', id: string | null } | { __typename?: 'widgets_sourceSelector_Entry', id: string | null } | null } | { __typename: 'questions_default_Entry', uri: string | null, parent: { __typename?: 'datasets_starCluster_Entry', id: string | null } | { __typename?: 'datasets_supernovaGalaxyObservations_Entry', id: string | null } | { __typename?: 'homepage_homepage_Entry', id: string | null } | { __typename?: 'investigations_default_Entry', id: string | null } | { __typename?: 'investigations_investigationParent_Entry', id: string | null } | { __typename?: 'investigations_investigationSectionBreakChild_Entry', id: string | null } | { __typename?: 'pages_pages_Entry', id: string | null } | { __typename?: 'pages_redirectPage_Entry', id: string | null } | { __typename?: 'questions_default_Entry', id: string | null } | { __typename?: 'referenceContent_default_Entry', id: string | null } | { __typename?: 'widgets_colorFilterTool_Entry', id: string | null } | { __typename?: 'widgets_isochronePlot_Entry', id: string | null } | { __typename?: 'widgets_lightCurveTool_Entry', id: string | null } | { __typename?: 'widgets_sourceSelector_Entry', id: string | null } | null } | { __typename: 'referenceContent_default_Entry', uri: string | null, parent: { __typename?: 'datasets_starCluster_Entry', id: string | null } | { __typename?: 'datasets_supernovaGalaxyObservations_Entry', id: string | null } | { __typename?: 'homepage_homepage_Entry', id: string | null } | { __typename?: 'investigations_default_Entry', id: string | null } | { __typename?: 'investigations_investigationParent_Entry', id: string | null } | { __typename?: 'investigations_investigationSectionBreakChild_Entry', id: string | null } | { __typename?: 'pages_pages_Entry', id: string | null } | { __typename?: 'pages_redirectPage_Entry', id: string | null } | { __typename?: 'questions_default_Entry', id: string | null } | { __typename?: 'referenceContent_default_Entry', id: string | null } | { __typename?: 'widgets_colorFilterTool_Entry', id: string | null } | { __typename?: 'widgets_isochronePlot_Entry', id: string | null } | { __typename?: 'widgets_lightCurveTool_Entry', id: string | null } | { __typename?: 'widgets_sourceSelector_Entry', id: string | null } | null } | { __typename: 'widgets_colorFilterTool_Entry', uri: string | null, parent: { __typename?: 'datasets_starCluster_Entry', id: string | null } | { __typename?: 'datasets_supernovaGalaxyObservations_Entry', id: string | null } | { __typename?: 'homepage_homepage_Entry', id: string | null } | { __typename?: 'investigations_default_Entry', id: string | null } | { __typename?: 'investigations_investigationParent_Entry', id: string | null } | { __typename?: 'investigations_investigationSectionBreakChild_Entry', id: string | null } | { __typename?: 'pages_pages_Entry', id: string | null } | { __typename?: 'pages_redirectPage_Entry', id: string | null } | { __typename?: 'questions_default_Entry', id: string | null } | { __typename?: 'referenceContent_default_Entry', id: string | null } | { __typename?: 'widgets_colorFilterTool_Entry', id: string | null } | { __typename?: 'widgets_isochronePlot_Entry', id: string | null } | { __typename?: 'widgets_lightCurveTool_Entry', id: string | null } | { __typename?: 'widgets_sourceSelector_Entry', id: string | null } | null } | { __typename: 'widgets_isochronePlot_Entry', uri: string | null, parent: { __typename?: 'datasets_starCluster_Entry', id: string | null } | { __typename?: 'datasets_supernovaGalaxyObservations_Entry', id: string | null } | { __typename?: 'homepage_homepage_Entry', id: string | null } | { __typename?: 'investigations_default_Entry', id: string | null } | { __typename?: 'investigations_investigationParent_Entry', id: string | null } | { __typename?: 'investigations_investigationSectionBreakChild_Entry', id: string | null } | { __typename?: 'pages_pages_Entry', id: string | null } | { __typename?: 'pages_redirectPage_Entry', id: string | null } | { __typename?: 'questions_default_Entry', id: string | null } | { __typename?: 'referenceContent_default_Entry', id: string | null } | { __typename?: 'widgets_colorFilterTool_Entry', id: string | null } | { __typename?: 'widgets_isochronePlot_Entry', id: string | null } | { __typename?: 'widgets_lightCurveTool_Entry', id: string | null } | { __typename?: 'widgets_sourceSelector_Entry', id: string | null } | null } | { __typename: 'widgets_lightCurveTool_Entry', uri: string | null, parent: { __typename?: 'datasets_starCluster_Entry', id: string | null } | { __typename?: 'datasets_supernovaGalaxyObservations_Entry', id: string | null } | { __typename?: 'homepage_homepage_Entry', id: string | null } | { __typename?: 'investigations_default_Entry', id: string | null } | { __typename?: 'investigations_investigationParent_Entry', id: string | null } | { __typename?: 'investigations_investigationSectionBreakChild_Entry', id: string | null } | { __typename?: 'pages_pages_Entry', id: string | null } | { __typename?: 'pages_redirectPage_Entry', id: string | null } | { __typename?: 'questions_default_Entry', id: string | null } | { __typename?: 'referenceContent_default_Entry', id: string | null } | { __typename?: 'widgets_colorFilterTool_Entry', id: string | null } | { __typename?: 'widgets_isochronePlot_Entry', id: string | null } | { __typename?: 'widgets_lightCurveTool_Entry', id: string | null } | { __typename?: 'widgets_sourceSelector_Entry', id: string | null } | null } | { __typename: 'widgets_sourceSelector_Entry', uri: string | null, parent: { __typename?: 'datasets_starCluster_Entry', id: string | null } | { __typename?: 'datasets_supernovaGalaxyObservations_Entry', id: string | null } | { __typename?: 'homepage_homepage_Entry', id: string | null } | { __typename?: 'investigations_default_Entry', id: string | null } | { __typename?: 'investigations_investigationParent_Entry', id: string | null } | { __typename?: 'investigations_investigationSectionBreakChild_Entry', id: string | null } | { __typename?: 'pages_pages_Entry', id: string | null } | { __typename?: 'pages_redirectPage_Entry', id: string | null } | { __typename?: 'questions_default_Entry', id: string | null } | { __typename?: 'referenceContent_default_Entry', id: string | null } | { __typename?: 'widgets_colorFilterTool_Entry', id: string | null } | { __typename?: 'widgets_isochronePlot_Entry', id: string | null } | { __typename?: 'widgets_lightCurveTool_Entry', id: string | null } | { __typename?: 'widgets_sourceSelector_Entry', id: string | null } | null } | null } & { ' $fragmentName'?: 'InvestigationSectionBreakTemplateFragment' };

export type PageTemplateFragment = { __typename?: 'pages_pages_Entry', id: string | null, title: string | null, contentBlocks: Array<(
    { __typename?: 'contentBlocks_barGraphTool_BlockType' }
    & { ' $fragmentRefs'?: { 'ContentBlockFactory_ContentBlocks_BarGraphTool_BlockType_Fragment': ContentBlockFactory_ContentBlocks_BarGraphTool_BlockType_Fragment } }
  ) | (
    { __typename?: 'contentBlocks_cameraFilterTool_BlockType' }
    & { ' $fragmentRefs'?: { 'ContentBlockFactory_ContentBlocks_CameraFilterTool_BlockType_Fragment': ContentBlockFactory_ContentBlocks_CameraFilterTool_BlockType_Fragment } }
  ) | (
    { __typename?: 'contentBlocks_colLeft_BlockType' }
    & { ' $fragmentRefs'?: { 'ContentBlockFactory_ContentBlocks_ColLeft_BlockType_Fragment': ContentBlockFactory_ContentBlocks_ColLeft_BlockType_Fragment } }
  ) | (
    { __typename?: 'contentBlocks_colRight_BlockType' }
    & { ' $fragmentRefs'?: { 'ContentBlockFactory_ContentBlocks_ColRight_BlockType_Fragment': ContentBlockFactory_ContentBlocks_ColRight_BlockType_Fragment } }
  ) | (
    { __typename?: 'contentBlocks_colorFilterToolBlock_BlockType' }
    & { ' $fragmentRefs'?: { 'ContentBlockFactory_ContentBlocks_ColorFilterToolBlock_BlockType_Fragment': ContentBlockFactory_ContentBlocks_ColorFilterToolBlock_BlockType_Fragment } }
  ) | (
    { __typename?: 'contentBlocks_equation_BlockType' }
    & { ' $fragmentRefs'?: { 'ContentBlockFactory_ContentBlocks_Equation_BlockType_Fragment': ContentBlockFactory_ContentBlocks_Equation_BlockType_Fragment } }
  ) | (
    { __typename?: 'contentBlocks_filterTool_BlockType' }
    & { ' $fragmentRefs'?: { 'ContentBlockFactory_ContentBlocks_FilterTool_BlockType_Fragment': ContentBlockFactory_ContentBlocks_FilterTool_BlockType_Fragment } }
  ) | (
    { __typename?: 'contentBlocks_group_BlockType' }
    & { ' $fragmentRefs'?: { 'ContentBlockFactory_ContentBlocks_Group_BlockType_Fragment': ContentBlockFactory_ContentBlocks_Group_BlockType_Fragment } }
  ) | (
    { __typename?: 'contentBlocks_image_BlockType' }
    & { ' $fragmentRefs'?: { 'ContentBlockFactory_ContentBlocks_Image_BlockType_Fragment': ContentBlockFactory_ContentBlocks_Image_BlockType_Fragment } }
  ) | (
    { __typename?: 'contentBlocks_magnitudeScatterPlot_BlockType' }
    & { ' $fragmentRefs'?: { 'ContentBlockFactory_ContentBlocks_MagnitudeScatterPlot_BlockType_Fragment': ContentBlockFactory_ContentBlocks_MagnitudeScatterPlot_BlockType_Fragment } }
  ) | (
    { __typename?: 'contentBlocks_questionBlock_BlockType' }
    & { ' $fragmentRefs'?: { 'ContentBlockFactory_ContentBlocks_QuestionBlock_BlockType_Fragment': ContentBlockFactory_ContentBlocks_QuestionBlock_BlockType_Fragment } }
  ) | (
    { __typename?: 'contentBlocks_referenceBlock_BlockType' }
    & { ' $fragmentRefs'?: { 'ContentBlockFactory_ContentBlocks_ReferenceBlock_BlockType_Fragment': ContentBlockFactory_ContentBlocks_ReferenceBlock_BlockType_Fragment } }
  ) | (
    { __typename?: 'contentBlocks_scatterplotTool_BlockType' }
    & { ' $fragmentRefs'?: { 'ContentBlockFactory_ContentBlocks_ScatterplotTool_BlockType_Fragment': ContentBlockFactory_ContentBlocks_ScatterplotTool_BlockType_Fragment } }
  ) | (
    { __typename?: 'contentBlocks_supernovaDistanceDistribution_BlockType' }
    & { ' $fragmentRefs'?: { 'ContentBlockFactory_ContentBlocks_SupernovaDistanceDistribution_BlockType_Fragment': ContentBlockFactory_ContentBlocks_SupernovaDistanceDistribution_BlockType_Fragment } }
  ) | (
    { __typename?: 'contentBlocks_table_BlockType' }
    & { ' $fragmentRefs'?: { 'ContentBlockFactory_ContentBlocks_Table_BlockType_Fragment': ContentBlockFactory_ContentBlocks_Table_BlockType_Fragment } }
  ) | (
    { __typename?: 'contentBlocks_text_BlockType' }
    & { ' $fragmentRefs'?: { 'ContentBlockFactory_ContentBlocks_Text_BlockType_Fragment': ContentBlockFactory_ContentBlocks_Text_BlockType_Fragment } }
  ) | (
    { __typename?: 'contentBlocks_twoColumnContainer_BlockType' }
    & { ' $fragmentRefs'?: { 'ContentBlockFactory_ContentBlocks_TwoColumnContainer_BlockType_Fragment': ContentBlockFactory_ContentBlocks_TwoColumnContainer_BlockType_Fragment } }
  ) | (
    { __typename?: 'contentBlocks_video_BlockType' }
    & { ' $fragmentRefs'?: { 'ContentBlockFactory_ContentBlocks_Video_BlockType_Fragment': ContentBlockFactory_ContentBlocks_Video_BlockType_Fragment } }
  ) | null> | null } & { ' $fragmentName'?: 'PageTemplateFragment' };

export type ReferenceContentTemplateFragment = { __typename: 'referenceContent_default_Entry', title: string | null, id: string | null, contentBlocks: Array<{ __typename: 'referenceContentBlocks_cameraFilterTool_BlockType' } | { __typename: 'referenceContentBlocks_colorFilterToolBlock_BlockType' } | { __typename: 'referenceContentBlocks_filterTool_BlockType' } | { __typename: 'referenceContentBlocks_image_BlockType', id: string | null, caption: string | null, layout: string | null, image: Array<never | null> | null } | { __typename: 'referenceContentBlocks_table_BlockType', id: string | null, caption: string | null, contentHeading: string | null, displayTable: Array<{ __typename?: 'displayTable_BlockType', tableRow: Array<{ __typename?: 'tableRow_previousQuestion_BlockType' } | { __typename?: 'tableRow_rowHeader_BlockType' } | { __typename?: 'tableRow_tableCell_BlockType', id: string | null, cellContent: string | null } | null> } | null> } | { __typename: 'referenceContentBlocks_text_BlockType', id: string | null, text: string | null } | null> | null } & { ' $fragmentName'?: 'ReferenceContentTemplateFragment' };

export type ResendActivationMutationVariables = Exact<{
  email: Scalars['String']['input'];
}>;


export type ResendActivationMutation = { __typename?: 'Mutation', resendActivation: string };

export type SetPasswordMutationVariables = Exact<{
  password: Scalars['String']['input'];
  code: Scalars['String']['input'];
  id: Scalars['String']['input'];
}>;


export type SetPasswordMutation = { __typename?: 'Mutation', setPassword: string };

export type AuthenticateMutationVariables = Exact<{
  email: Scalars['String']['input'];
  password: Scalars['String']['input'];
}>;


export type AuthenticateMutation = { __typename?: 'Mutation', authenticate: (
    { __typename?: 'Auth' }
    & { ' $fragmentRefs'?: { 'AuthFragmentFragment': AuthFragmentFragment } }
  ) };

export type AuthFragmentFragment = { __typename?: 'Auth', jwt: string | null, jwtExpiresAt: number | null, refreshToken: string | null, refreshTokenExpiresAt: number | null, user: (
    { __typename?: 'User' }
    & { ' $fragmentRefs'?: { 'UserFragmentFragment': UserFragmentFragment } }
  ) | null } & { ' $fragmentName'?: 'AuthFragmentFragment' };

export type UserFragmentFragment = { __typename?: 'User', id: string | null, status: string | null } & { ' $fragmentName'?: 'UserFragmentFragment' };

export type RefreshTokenMutationVariables = Exact<{
  refreshToken: Scalars['String']['input'];
}>;


export type RefreshTokenMutation = { __typename?: 'Mutation', refreshToken: (
    { __typename?: 'Auth' }
    & { ' $fragmentRefs'?: { 'AuthFragmentFragment': AuthFragmentFragment } }
  ) };

export type DeleteRefreshTokenMutationVariables = Exact<{
  refreshToken: Scalars['String']['input'];
}>;


export type DeleteRefreshTokenMutation = { __typename?: 'Mutation', deleteRefreshToken: boolean };

export const TextBlockFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"TextBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_text_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}}]} as unknown as DocumentNode<TextBlockFragment, unknown>;
export const ImageBlockFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ImageBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_image_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"caption"}},{"kind":"Field","name":{"kind":"Name","value":"layout"}},{"kind":"Field","name":{"kind":"Name","value":"image"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"directUrlPreview"}},{"kind":"Field","name":{"kind":"Name","value":"directUrlOriginal"}},{"kind":"Field","name":{"kind":"Name","value":"PNG"}},{"kind":"Field","name":{"kind":"Name","value":"HighJPG"}},{"kind":"Field","name":{"kind":"Name","value":"LowJPG"}},{"kind":"Field","name":{"kind":"Name","value":"preview"}}]}},{"kind":"Field","name":{"kind":"Name","value":"width"}},{"kind":"Field","name":{"kind":"Name","value":"height"}},{"kind":"Field","alias":{"kind":"Name","value":"metadata"},"name":{"kind":"Name","value":"additional"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"AltTextEN"}},{"kind":"Field","name":{"kind":"Name","value":"AltTextES"}},{"kind":"Field","name":{"kind":"Name","value":"CaptionEN"}},{"kind":"Field","name":{"kind":"Name","value":"CaptionES"}},{"kind":"Field","name":{"kind":"Name","value":"Credit"}}]}}]}}]}}]} as unknown as DocumentNode<ImageBlockFragment, unknown>;
export const TableBlockFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"TableBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_table_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"caption"}},{"kind":"Field","name":{"kind":"Name","value":"contentHeading"}},{"kind":"Field","alias":{"kind":"Name","value":"header"},"name":{"kind":"Name","value":"tableHeader"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"headerRow"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"headerRow_tableCell_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"text"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}}]}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"rows"},"name":{"kind":"Name","value":"displayTable"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"displayTable_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"cells"},"name":{"kind":"Name","value":"tableRow"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableRow_tableCell_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"text"},"name":{"kind":"Name","value":"cellContent"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableRow_rowHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"text"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableRow_previousQuestion_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"question"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"answerType"}},{"kind":"Field","alias":{"kind":"Name","value":"rows"},"name":{"kind":"Name","value":"questionTable"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionTable_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"cells"},"name":{"kind":"Name","value":"tableCell"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_question_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"answerType"},"name":{"kind":"Name","value":"questionType"}},{"kind":"Field","name":{"kind":"Name","value":"options"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"options_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_static_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_rowHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<TableBlockFragment, unknown>;
export const VideoBlockFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"VideoBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_video_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"caption"}},{"kind":"Field","name":{"kind":"Name","value":"video"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"directUrlPreview"}},{"kind":"Field","name":{"kind":"Name","value":"directUrlPreviewPlay"}}]}},{"kind":"Field","name":{"kind":"Name","value":"width"}},{"kind":"Field","name":{"kind":"Name","value":"height"}},{"kind":"Field","alias":{"kind":"Name","value":"metadata"},"name":{"kind":"Name","value":"additional"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"CaptionEN"}},{"kind":"Field","name":{"kind":"Name","value":"CaptionES"}},{"kind":"Field","name":{"kind":"Name","value":"Credit"}}]}}]}}]}}]} as unknown as DocumentNode<VideoBlockFragment, unknown>;
export const CalculatorQuestionFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"CalculatorQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"questionText"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}}]}}]} as unknown as DocumentNode<CalculatorQuestionFragment, unknown>;
export const TableRowsFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"TableRows"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"header"},"name":{"kind":"Name","value":"tableHeader"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"headerRow"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"headerRow_tableCell_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"text"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}}]}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"rows"},"name":{"kind":"Name","value":"questionTable"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionTable_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"cells"},"name":{"kind":"Name","value":"tableCell"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_question_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"answerType"},"name":{"kind":"Name","value":"questionType"}},{"kind":"Field","name":{"kind":"Name","value":"options"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"options_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_static_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_rowHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_previousQuestion_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"question"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"answerType"}},{"kind":"Field","alias":{"kind":"Name","value":"rows"},"name":{"kind":"Name","value":"questionTable"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionTable_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"cells"},"name":{"kind":"Name","value":"tableCell"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_question_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"answerType"},"name":{"kind":"Name","value":"questionType"}},{"kind":"Field","name":{"kind":"Name","value":"options"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"options_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_static_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_rowHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<TableRowsFragment, unknown>;
export const TabularQuestionFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"TabularQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"questionText"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TableRows"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"TableRows"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"header"},"name":{"kind":"Name","value":"tableHeader"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"headerRow"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"headerRow_tableCell_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"text"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}}]}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"rows"},"name":{"kind":"Name","value":"questionTable"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionTable_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"cells"},"name":{"kind":"Name","value":"tableCell"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_question_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"answerType"},"name":{"kind":"Name","value":"questionType"}},{"kind":"Field","name":{"kind":"Name","value":"options"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"options_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_static_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_rowHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_previousQuestion_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"question"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"answerType"}},{"kind":"Field","alias":{"kind":"Name","value":"rows"},"name":{"kind":"Name","value":"questionTable"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionTable_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"cells"},"name":{"kind":"Name","value":"tableCell"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_question_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"answerType"},"name":{"kind":"Name","value":"questionType"}},{"kind":"Field","name":{"kind":"Name","value":"options"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"options_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_static_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_rowHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<TabularQuestionFragment, unknown>;
export const ColorFilterToolEntryFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ColorFilterToolEntry"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"widgets_colorFilterTool_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"filterToolActions"}},{"kind":"Field","alias":{"kind":"Name","value":"filterColorOptionsLabels"},"name":{"kind":"Name","value":"filterColorOptions"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"label"},"value":{"kind":"BooleanValue","value":true}}]},{"kind":"Field","alias":{"kind":"Name","value":"filterColorOptionsValues"},"name":{"kind":"Name","value":"filterColorOptions"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"label"},"value":{"kind":"BooleanValue","value":false}}]},{"kind":"Field","name":{"kind":"Name","value":"colorFilterToolObjects"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"colorFilterToolObjects_group_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"groupName"}},{"kind":"Field","alias":{"kind":"Name","value":"objects"},"name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"colorFilterToolObjects_object_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"name"},"name":{"kind":"Name","value":"objectName"}},{"kind":"Field","alias":{"kind":"Name","value":"caption"},"name":{"kind":"Name","value":"objectCaption"}},{"kind":"Field","alias":{"kind":"Name","value":"filterImages"},"name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"colorFilterToolObjects_filterimage_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"isEnabled"}},{"kind":"Field","name":{"kind":"Name","value":"isActive"}},{"kind":"Field","name":{"kind":"Name","value":"image"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"directUrlPreview"}}]}},{"kind":"Field","name":{"kind":"Name","value":"width"}},{"kind":"Field","name":{"kind":"Name","value":"height"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"max"},"name":{"kind":"Name","value":"colorToolMax"}},{"kind":"Field","alias":{"kind":"Name","value":"min"},"name":{"kind":"Name","value":"colorToolMin"}},{"kind":"Field","alias":{"kind":"Name","value":"defaultValue"},"name":{"kind":"Name","value":"colorToolDefaultValue"}},{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"filter"}},{"kind":"Field","alias":{"kind":"Name","value":"color"},"name":{"kind":"Name","value":"preSelectedColor"}}]}}]}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<ColorFilterToolEntryFragment, unknown>;
export const ColorFilterToolQuestionFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ColorFilterToolQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionWidgetsBlock_colorFilterToolBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"colorFilterTool"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ColorFilterToolEntry"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ColorFilterToolEntry"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"widgets_colorFilterTool_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"filterToolActions"}},{"kind":"Field","alias":{"kind":"Name","value":"filterColorOptionsLabels"},"name":{"kind":"Name","value":"filterColorOptions"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"label"},"value":{"kind":"BooleanValue","value":true}}]},{"kind":"Field","alias":{"kind":"Name","value":"filterColorOptionsValues"},"name":{"kind":"Name","value":"filterColorOptions"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"label"},"value":{"kind":"BooleanValue","value":false}}]},{"kind":"Field","name":{"kind":"Name","value":"colorFilterToolObjects"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"colorFilterToolObjects_group_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"groupName"}},{"kind":"Field","alias":{"kind":"Name","value":"objects"},"name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"colorFilterToolObjects_object_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"name"},"name":{"kind":"Name","value":"objectName"}},{"kind":"Field","alias":{"kind":"Name","value":"caption"},"name":{"kind":"Name","value":"objectCaption"}},{"kind":"Field","alias":{"kind":"Name","value":"filterImages"},"name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"colorFilterToolObjects_filterimage_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"isEnabled"}},{"kind":"Field","name":{"kind":"Name","value":"isActive"}},{"kind":"Field","name":{"kind":"Name","value":"image"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"directUrlPreview"}}]}},{"kind":"Field","name":{"kind":"Name","value":"width"}},{"kind":"Field","name":{"kind":"Name","value":"height"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"max"},"name":{"kind":"Name","value":"colorToolMax"}},{"kind":"Field","alias":{"kind":"Name","value":"min"},"name":{"kind":"Name","value":"colorToolMin"}},{"kind":"Field","alias":{"kind":"Name","value":"defaultValue"},"name":{"kind":"Name","value":"colorToolDefaultValue"}},{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"filter"}},{"kind":"Field","alias":{"kind":"Name","value":"color"},"name":{"kind":"Name","value":"preSelectedColor"}}]}}]}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<ColorFilterToolQuestionFragment, unknown>;
export const SourceSelectorQuestionFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"SourceSelectorQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionWidgetsBlock_sourceSelectorBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"sourceSelector"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"widgets_sourceSelector_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"includeScatterPlot"}},{"kind":"Field","alias":{"kind":"Name","value":"yMin"},"name":{"kind":"Name","value":"yAxisMin"}},{"kind":"Field","alias":{"kind":"Name","value":"yMax"},"name":{"kind":"Name","value":"yAxisMax"}},{"kind":"Field","name":{"kind":"Name","value":"dataset"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_supernovaGalaxyObservations_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"peakMjd"},"name":{"kind":"Name","value":"mjd"}},{"kind":"Field","alias":{"kind":"Name","value":"sources"},"name":{"kind":"Name","value":"alertSources"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"alertSources_source_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"color"}},{"kind":"Field","alias":{"kind":"Name","value":"x"},"name":{"kind":"Name","value":"xCoord"}},{"kind":"Field","alias":{"kind":"Name","value":"y"},"name":{"kind":"Name","value":"yCoord"}},{"kind":"Field","name":{"kind":"Name","value":"radius"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"sourceType"}},{"kind":"Field","alias":{"kind":"Name","value":"id"},"name":{"kind":"Name","value":"sourceName"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"json"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"imageAlbum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"directUrlPreview"}}]}}]}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<SourceSelectorQuestionFragment, unknown>;
export const LightCurveQuestionFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"LightCurveQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionWidgetsBlock_lightCurveBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"lightCurveTool"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"widgets_lightCurveTool_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"dataset"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_supernovaGalaxyObservations_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"peakMjd"},"name":{"kind":"Name","value":"mjd"}},{"kind":"Field","name":{"kind":"Name","value":"json"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"yMin"},"name":{"kind":"Name","value":"yAxisMin"}},{"kind":"Field","alias":{"kind":"Name","value":"yMax"},"name":{"kind":"Name","value":"yAxisMax"}}]}}]}}]}}]} as unknown as DocumentNode<LightCurveQuestionFragment, unknown>;
export const IsochronePlotQuestionFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"IsochronePlotQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionWidgetsBlock_isochronePlot_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"dataset"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_starCluster_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","alias":{"kind":"Name","value":"ageLibrary"},"name":{"kind":"Name","value":"json"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"plotPoints"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"yMin"},"name":{"kind":"Name","value":"yAxisMin"}},{"kind":"Field","alias":{"kind":"Name","value":"yMax"},"name":{"kind":"Name","value":"yAxisMax"}},{"kind":"Field","alias":{"kind":"Name","value":"xMin"},"name":{"kind":"Name","value":"xAxisMin"}},{"kind":"Field","alias":{"kind":"Name","value":"xMax"},"name":{"kind":"Name","value":"xAxisMax"}}]}}]}}]}}]} as unknown as DocumentNode<IsochronePlotQuestionFragment, unknown>;
export const WidgetQuestionFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"WidgetQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"instructions"},"name":{"kind":"Name","value":"widgetInstructions"}},{"kind":"Field","name":{"kind":"Name","value":"questionWidgetsBlock"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ColorFilterToolQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SourceSelectorQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"LightCurveQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"IsochronePlotQuestion"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ColorFilterToolEntry"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"widgets_colorFilterTool_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"filterToolActions"}},{"kind":"Field","alias":{"kind":"Name","value":"filterColorOptionsLabels"},"name":{"kind":"Name","value":"filterColorOptions"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"label"},"value":{"kind":"BooleanValue","value":true}}]},{"kind":"Field","alias":{"kind":"Name","value":"filterColorOptionsValues"},"name":{"kind":"Name","value":"filterColorOptions"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"label"},"value":{"kind":"BooleanValue","value":false}}]},{"kind":"Field","name":{"kind":"Name","value":"colorFilterToolObjects"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"colorFilterToolObjects_group_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"groupName"}},{"kind":"Field","alias":{"kind":"Name","value":"objects"},"name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"colorFilterToolObjects_object_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"name"},"name":{"kind":"Name","value":"objectName"}},{"kind":"Field","alias":{"kind":"Name","value":"caption"},"name":{"kind":"Name","value":"objectCaption"}},{"kind":"Field","alias":{"kind":"Name","value":"filterImages"},"name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"colorFilterToolObjects_filterimage_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"isEnabled"}},{"kind":"Field","name":{"kind":"Name","value":"isActive"}},{"kind":"Field","name":{"kind":"Name","value":"image"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"directUrlPreview"}}]}},{"kind":"Field","name":{"kind":"Name","value":"width"}},{"kind":"Field","name":{"kind":"Name","value":"height"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"max"},"name":{"kind":"Name","value":"colorToolMax"}},{"kind":"Field","alias":{"kind":"Name","value":"min"},"name":{"kind":"Name","value":"colorToolMin"}},{"kind":"Field","alias":{"kind":"Name","value":"defaultValue"},"name":{"kind":"Name","value":"colorToolDefaultValue"}},{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"filter"}},{"kind":"Field","alias":{"kind":"Name","value":"color"},"name":{"kind":"Name","value":"preSelectedColor"}}]}}]}}]}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ColorFilterToolQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionWidgetsBlock_colorFilterToolBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"colorFilterTool"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ColorFilterToolEntry"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"SourceSelectorQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionWidgetsBlock_sourceSelectorBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"sourceSelector"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"widgets_sourceSelector_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"includeScatterPlot"}},{"kind":"Field","alias":{"kind":"Name","value":"yMin"},"name":{"kind":"Name","value":"yAxisMin"}},{"kind":"Field","alias":{"kind":"Name","value":"yMax"},"name":{"kind":"Name","value":"yAxisMax"}},{"kind":"Field","name":{"kind":"Name","value":"dataset"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_supernovaGalaxyObservations_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"peakMjd"},"name":{"kind":"Name","value":"mjd"}},{"kind":"Field","alias":{"kind":"Name","value":"sources"},"name":{"kind":"Name","value":"alertSources"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"alertSources_source_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"color"}},{"kind":"Field","alias":{"kind":"Name","value":"x"},"name":{"kind":"Name","value":"xCoord"}},{"kind":"Field","alias":{"kind":"Name","value":"y"},"name":{"kind":"Name","value":"yCoord"}},{"kind":"Field","name":{"kind":"Name","value":"radius"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"sourceType"}},{"kind":"Field","alias":{"kind":"Name","value":"id"},"name":{"kind":"Name","value":"sourceName"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"json"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"imageAlbum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"directUrlPreview"}}]}}]}}]}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"LightCurveQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionWidgetsBlock_lightCurveBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"lightCurveTool"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"widgets_lightCurveTool_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"dataset"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_supernovaGalaxyObservations_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"peakMjd"},"name":{"kind":"Name","value":"mjd"}},{"kind":"Field","name":{"kind":"Name","value":"json"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"yMin"},"name":{"kind":"Name","value":"yAxisMin"}},{"kind":"Field","alias":{"kind":"Name","value":"yMax"},"name":{"kind":"Name","value":"yAxisMax"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"IsochronePlotQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionWidgetsBlock_isochronePlot_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"dataset"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_starCluster_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","alias":{"kind":"Name","value":"ageLibrary"},"name":{"kind":"Name","value":"json"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"plotPoints"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"yMin"},"name":{"kind":"Name","value":"yAxisMin"}},{"kind":"Field","alias":{"kind":"Name","value":"yMax"},"name":{"kind":"Name","value":"yAxisMax"}},{"kind":"Field","alias":{"kind":"Name","value":"xMin"},"name":{"kind":"Name","value":"xAxisMin"}},{"kind":"Field","alias":{"kind":"Name","value":"xMax"},"name":{"kind":"Name","value":"xAxisMax"}}]}}]}}]}}]} as unknown as DocumentNode<WidgetQuestionFragment, unknown>;
export const NumberQuestionFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"NumberQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"questionText"}},{"kind":"Field","name":{"kind":"Name","value":"minimum"}},{"kind":"Field","name":{"kind":"Name","value":"maximum"}},{"kind":"Field","name":{"kind":"Name","value":"precision"}},{"kind":"Field","name":{"kind":"Name","value":"validation"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"validation_numberValidator_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]}}]} as unknown as DocumentNode<NumberQuestionFragment, unknown>;
export const SelectPartFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"SelectPart"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"multiPartBlocks_select_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}},{"kind":"Field","alias":{"kind":"Name","value":"options"},"name":{"kind":"Name","value":"answerOptions"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"answerOptions_option_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}}]} as unknown as DocumentNode<SelectPartFragment, unknown>;
export const MultiselectPartFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"MultiselectPart"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"multiPartBlocks_multiselect_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}},{"kind":"Field","alias":{"kind":"Name","value":"options"},"name":{"kind":"Name","value":"answerOptions"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"answerOptions_option_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}}]} as unknown as DocumentNode<MultiselectPartFragment, unknown>;
export const NumberPartFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"NumberPart"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"multiPartBlocks_number_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}},{"kind":"Field","name":{"kind":"Name","value":"minimum"}},{"kind":"Field","name":{"kind":"Name","value":"maximum"}},{"kind":"Field","name":{"kind":"Name","value":"precision"}},{"kind":"Field","name":{"kind":"Name","value":"validation"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"validation_numberValidator_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]}}]} as unknown as DocumentNode<NumberPartFragment, unknown>;
export const ReadOnlyPartFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ReadOnlyPart"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"multiPartBlocks_readonlyText_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}},{"kind":"Field","alias":{"kind":"Name","value":"text"},"name":{"kind":"Name","value":"questionText"}}]}}]} as unknown as DocumentNode<ReadOnlyPartFragment, unknown>;
export const MultipartQuestionFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"MultipartQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"answerType"}},{"kind":"Field","alias":{"kind":"Name","value":"parts"},"name":{"kind":"Name","value":"multiPartBlocks"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"NeoBlockInterface"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SelectPart"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"MultiselectPart"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"NumberPart"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ReadOnlyPart"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"SelectPart"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"multiPartBlocks_select_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}},{"kind":"Field","alias":{"kind":"Name","value":"options"},"name":{"kind":"Name","value":"answerOptions"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"answerOptions_option_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"MultiselectPart"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"multiPartBlocks_multiselect_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}},{"kind":"Field","alias":{"kind":"Name","value":"options"},"name":{"kind":"Name","value":"answerOptions"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"answerOptions_option_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"NumberPart"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"multiPartBlocks_number_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}},{"kind":"Field","name":{"kind":"Name","value":"minimum"}},{"kind":"Field","name":{"kind":"Name","value":"maximum"}},{"kind":"Field","name":{"kind":"Name","value":"precision"}},{"kind":"Field","name":{"kind":"Name","value":"validation"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"validation_numberValidator_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ReadOnlyPart"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"multiPartBlocks_readonlyText_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}},{"kind":"Field","alias":{"kind":"Name","value":"text"},"name":{"kind":"Name","value":"questionText"}}]}}]} as unknown as DocumentNode<MultipartQuestionFragment, unknown>;
export const QuestionEntryFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"QuestionEntry"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"answerType"}},{"kind":"Field","name":{"kind":"Name","value":"questionText"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"CalculatorQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TabularQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"WidgetQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"NumberQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"MultipartQuestion"}},{"kind":"Field","alias":{"kind":"Name","value":"options"},"name":{"kind":"Name","value":"answerOptions"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"answerOptions_option_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"TableRows"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"header"},"name":{"kind":"Name","value":"tableHeader"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"headerRow"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"headerRow_tableCell_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"text"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}}]}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"rows"},"name":{"kind":"Name","value":"questionTable"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionTable_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"cells"},"name":{"kind":"Name","value":"tableCell"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_question_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"answerType"},"name":{"kind":"Name","value":"questionType"}},{"kind":"Field","name":{"kind":"Name","value":"options"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"options_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_static_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_rowHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_previousQuestion_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"question"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"answerType"}},{"kind":"Field","alias":{"kind":"Name","value":"rows"},"name":{"kind":"Name","value":"questionTable"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionTable_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"cells"},"name":{"kind":"Name","value":"tableCell"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_question_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"answerType"},"name":{"kind":"Name","value":"questionType"}},{"kind":"Field","name":{"kind":"Name","value":"options"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"options_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_static_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_rowHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ColorFilterToolEntry"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"widgets_colorFilterTool_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"filterToolActions"}},{"kind":"Field","alias":{"kind":"Name","value":"filterColorOptionsLabels"},"name":{"kind":"Name","value":"filterColorOptions"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"label"},"value":{"kind":"BooleanValue","value":true}}]},{"kind":"Field","alias":{"kind":"Name","value":"filterColorOptionsValues"},"name":{"kind":"Name","value":"filterColorOptions"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"label"},"value":{"kind":"BooleanValue","value":false}}]},{"kind":"Field","name":{"kind":"Name","value":"colorFilterToolObjects"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"colorFilterToolObjects_group_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"groupName"}},{"kind":"Field","alias":{"kind":"Name","value":"objects"},"name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"colorFilterToolObjects_object_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"name"},"name":{"kind":"Name","value":"objectName"}},{"kind":"Field","alias":{"kind":"Name","value":"caption"},"name":{"kind":"Name","value":"objectCaption"}},{"kind":"Field","alias":{"kind":"Name","value":"filterImages"},"name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"colorFilterToolObjects_filterimage_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"isEnabled"}},{"kind":"Field","name":{"kind":"Name","value":"isActive"}},{"kind":"Field","name":{"kind":"Name","value":"image"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"directUrlPreview"}}]}},{"kind":"Field","name":{"kind":"Name","value":"width"}},{"kind":"Field","name":{"kind":"Name","value":"height"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"max"},"name":{"kind":"Name","value":"colorToolMax"}},{"kind":"Field","alias":{"kind":"Name","value":"min"},"name":{"kind":"Name","value":"colorToolMin"}},{"kind":"Field","alias":{"kind":"Name","value":"defaultValue"},"name":{"kind":"Name","value":"colorToolDefaultValue"}},{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"filter"}},{"kind":"Field","alias":{"kind":"Name","value":"color"},"name":{"kind":"Name","value":"preSelectedColor"}}]}}]}}]}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ColorFilterToolQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionWidgetsBlock_colorFilterToolBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"colorFilterTool"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ColorFilterToolEntry"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"SourceSelectorQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionWidgetsBlock_sourceSelectorBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"sourceSelector"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"widgets_sourceSelector_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"includeScatterPlot"}},{"kind":"Field","alias":{"kind":"Name","value":"yMin"},"name":{"kind":"Name","value":"yAxisMin"}},{"kind":"Field","alias":{"kind":"Name","value":"yMax"},"name":{"kind":"Name","value":"yAxisMax"}},{"kind":"Field","name":{"kind":"Name","value":"dataset"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_supernovaGalaxyObservations_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"peakMjd"},"name":{"kind":"Name","value":"mjd"}},{"kind":"Field","alias":{"kind":"Name","value":"sources"},"name":{"kind":"Name","value":"alertSources"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"alertSources_source_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"color"}},{"kind":"Field","alias":{"kind":"Name","value":"x"},"name":{"kind":"Name","value":"xCoord"}},{"kind":"Field","alias":{"kind":"Name","value":"y"},"name":{"kind":"Name","value":"yCoord"}},{"kind":"Field","name":{"kind":"Name","value":"radius"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"sourceType"}},{"kind":"Field","alias":{"kind":"Name","value":"id"},"name":{"kind":"Name","value":"sourceName"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"json"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"imageAlbum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"directUrlPreview"}}]}}]}}]}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"LightCurveQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionWidgetsBlock_lightCurveBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"lightCurveTool"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"widgets_lightCurveTool_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"dataset"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_supernovaGalaxyObservations_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"peakMjd"},"name":{"kind":"Name","value":"mjd"}},{"kind":"Field","name":{"kind":"Name","value":"json"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"yMin"},"name":{"kind":"Name","value":"yAxisMin"}},{"kind":"Field","alias":{"kind":"Name","value":"yMax"},"name":{"kind":"Name","value":"yAxisMax"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"IsochronePlotQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionWidgetsBlock_isochronePlot_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"dataset"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_starCluster_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","alias":{"kind":"Name","value":"ageLibrary"},"name":{"kind":"Name","value":"json"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"plotPoints"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"yMin"},"name":{"kind":"Name","value":"yAxisMin"}},{"kind":"Field","alias":{"kind":"Name","value":"yMax"},"name":{"kind":"Name","value":"yAxisMax"}},{"kind":"Field","alias":{"kind":"Name","value":"xMin"},"name":{"kind":"Name","value":"xAxisMin"}},{"kind":"Field","alias":{"kind":"Name","value":"xMax"},"name":{"kind":"Name","value":"xAxisMax"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"SelectPart"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"multiPartBlocks_select_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}},{"kind":"Field","alias":{"kind":"Name","value":"options"},"name":{"kind":"Name","value":"answerOptions"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"answerOptions_option_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"MultiselectPart"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"multiPartBlocks_multiselect_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}},{"kind":"Field","alias":{"kind":"Name","value":"options"},"name":{"kind":"Name","value":"answerOptions"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"answerOptions_option_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"NumberPart"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"multiPartBlocks_number_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}},{"kind":"Field","name":{"kind":"Name","value":"minimum"}},{"kind":"Field","name":{"kind":"Name","value":"maximum"}},{"kind":"Field","name":{"kind":"Name","value":"precision"}},{"kind":"Field","name":{"kind":"Name","value":"validation"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"validation_numberValidator_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ReadOnlyPart"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"multiPartBlocks_readonlyText_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}},{"kind":"Field","alias":{"kind":"Name","value":"text"},"name":{"kind":"Name","value":"questionText"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"CalculatorQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"questionText"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"TabularQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"questionText"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TableRows"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"WidgetQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"instructions"},"name":{"kind":"Name","value":"widgetInstructions"}},{"kind":"Field","name":{"kind":"Name","value":"questionWidgetsBlock"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ColorFilterToolQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SourceSelectorQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"LightCurveQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"IsochronePlotQuestion"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"NumberQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"questionText"}},{"kind":"Field","name":{"kind":"Name","value":"minimum"}},{"kind":"Field","name":{"kind":"Name","value":"maximum"}},{"kind":"Field","name":{"kind":"Name","value":"precision"}},{"kind":"Field","name":{"kind":"Name","value":"validation"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"validation_numberValidator_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"MultipartQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"answerType"}},{"kind":"Field","alias":{"kind":"Name","value":"parts"},"name":{"kind":"Name","value":"multiPartBlocks"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"NeoBlockInterface"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SelectPart"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"MultiselectPart"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"NumberPart"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ReadOnlyPart"}}]}}]}}]} as unknown as DocumentNode<QuestionEntryFragment, unknown>;
export const QuestionsBlockFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"QuestionsBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_questionBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"questionEntries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"QuestionEntry"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"CalculatorQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"questionText"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"TableRows"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"header"},"name":{"kind":"Name","value":"tableHeader"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"headerRow"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"headerRow_tableCell_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"text"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}}]}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"rows"},"name":{"kind":"Name","value":"questionTable"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionTable_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"cells"},"name":{"kind":"Name","value":"tableCell"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_question_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"answerType"},"name":{"kind":"Name","value":"questionType"}},{"kind":"Field","name":{"kind":"Name","value":"options"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"options_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_static_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_rowHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_previousQuestion_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"question"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"answerType"}},{"kind":"Field","alias":{"kind":"Name","value":"rows"},"name":{"kind":"Name","value":"questionTable"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionTable_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"cells"},"name":{"kind":"Name","value":"tableCell"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_question_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"answerType"},"name":{"kind":"Name","value":"questionType"}},{"kind":"Field","name":{"kind":"Name","value":"options"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"options_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_static_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_rowHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"TabularQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"questionText"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TableRows"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ColorFilterToolEntry"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"widgets_colorFilterTool_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"filterToolActions"}},{"kind":"Field","alias":{"kind":"Name","value":"filterColorOptionsLabels"},"name":{"kind":"Name","value":"filterColorOptions"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"label"},"value":{"kind":"BooleanValue","value":true}}]},{"kind":"Field","alias":{"kind":"Name","value":"filterColorOptionsValues"},"name":{"kind":"Name","value":"filterColorOptions"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"label"},"value":{"kind":"BooleanValue","value":false}}]},{"kind":"Field","name":{"kind":"Name","value":"colorFilterToolObjects"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"colorFilterToolObjects_group_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"groupName"}},{"kind":"Field","alias":{"kind":"Name","value":"objects"},"name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"colorFilterToolObjects_object_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"name"},"name":{"kind":"Name","value":"objectName"}},{"kind":"Field","alias":{"kind":"Name","value":"caption"},"name":{"kind":"Name","value":"objectCaption"}},{"kind":"Field","alias":{"kind":"Name","value":"filterImages"},"name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"colorFilterToolObjects_filterimage_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"isEnabled"}},{"kind":"Field","name":{"kind":"Name","value":"isActive"}},{"kind":"Field","name":{"kind":"Name","value":"image"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"directUrlPreview"}}]}},{"kind":"Field","name":{"kind":"Name","value":"width"}},{"kind":"Field","name":{"kind":"Name","value":"height"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"max"},"name":{"kind":"Name","value":"colorToolMax"}},{"kind":"Field","alias":{"kind":"Name","value":"min"},"name":{"kind":"Name","value":"colorToolMin"}},{"kind":"Field","alias":{"kind":"Name","value":"defaultValue"},"name":{"kind":"Name","value":"colorToolDefaultValue"}},{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"filter"}},{"kind":"Field","alias":{"kind":"Name","value":"color"},"name":{"kind":"Name","value":"preSelectedColor"}}]}}]}}]}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ColorFilterToolQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionWidgetsBlock_colorFilterToolBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"colorFilterTool"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ColorFilterToolEntry"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"SourceSelectorQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionWidgetsBlock_sourceSelectorBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"sourceSelector"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"widgets_sourceSelector_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"includeScatterPlot"}},{"kind":"Field","alias":{"kind":"Name","value":"yMin"},"name":{"kind":"Name","value":"yAxisMin"}},{"kind":"Field","alias":{"kind":"Name","value":"yMax"},"name":{"kind":"Name","value":"yAxisMax"}},{"kind":"Field","name":{"kind":"Name","value":"dataset"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_supernovaGalaxyObservations_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"peakMjd"},"name":{"kind":"Name","value":"mjd"}},{"kind":"Field","alias":{"kind":"Name","value":"sources"},"name":{"kind":"Name","value":"alertSources"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"alertSources_source_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"color"}},{"kind":"Field","alias":{"kind":"Name","value":"x"},"name":{"kind":"Name","value":"xCoord"}},{"kind":"Field","alias":{"kind":"Name","value":"y"},"name":{"kind":"Name","value":"yCoord"}},{"kind":"Field","name":{"kind":"Name","value":"radius"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"sourceType"}},{"kind":"Field","alias":{"kind":"Name","value":"id"},"name":{"kind":"Name","value":"sourceName"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"json"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"imageAlbum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"directUrlPreview"}}]}}]}}]}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"LightCurveQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionWidgetsBlock_lightCurveBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"lightCurveTool"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"widgets_lightCurveTool_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"dataset"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_supernovaGalaxyObservations_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"peakMjd"},"name":{"kind":"Name","value":"mjd"}},{"kind":"Field","name":{"kind":"Name","value":"json"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"yMin"},"name":{"kind":"Name","value":"yAxisMin"}},{"kind":"Field","alias":{"kind":"Name","value":"yMax"},"name":{"kind":"Name","value":"yAxisMax"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"IsochronePlotQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionWidgetsBlock_isochronePlot_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"dataset"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_starCluster_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","alias":{"kind":"Name","value":"ageLibrary"},"name":{"kind":"Name","value":"json"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"plotPoints"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"yMin"},"name":{"kind":"Name","value":"yAxisMin"}},{"kind":"Field","alias":{"kind":"Name","value":"yMax"},"name":{"kind":"Name","value":"yAxisMax"}},{"kind":"Field","alias":{"kind":"Name","value":"xMin"},"name":{"kind":"Name","value":"xAxisMin"}},{"kind":"Field","alias":{"kind":"Name","value":"xMax"},"name":{"kind":"Name","value":"xAxisMax"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"WidgetQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"instructions"},"name":{"kind":"Name","value":"widgetInstructions"}},{"kind":"Field","name":{"kind":"Name","value":"questionWidgetsBlock"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ColorFilterToolQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SourceSelectorQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"LightCurveQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"IsochronePlotQuestion"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"NumberQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"questionText"}},{"kind":"Field","name":{"kind":"Name","value":"minimum"}},{"kind":"Field","name":{"kind":"Name","value":"maximum"}},{"kind":"Field","name":{"kind":"Name","value":"precision"}},{"kind":"Field","name":{"kind":"Name","value":"validation"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"validation_numberValidator_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"SelectPart"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"multiPartBlocks_select_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}},{"kind":"Field","alias":{"kind":"Name","value":"options"},"name":{"kind":"Name","value":"answerOptions"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"answerOptions_option_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"MultiselectPart"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"multiPartBlocks_multiselect_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}},{"kind":"Field","alias":{"kind":"Name","value":"options"},"name":{"kind":"Name","value":"answerOptions"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"answerOptions_option_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"NumberPart"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"multiPartBlocks_number_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}},{"kind":"Field","name":{"kind":"Name","value":"minimum"}},{"kind":"Field","name":{"kind":"Name","value":"maximum"}},{"kind":"Field","name":{"kind":"Name","value":"precision"}},{"kind":"Field","name":{"kind":"Name","value":"validation"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"validation_numberValidator_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ReadOnlyPart"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"multiPartBlocks_readonlyText_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}},{"kind":"Field","alias":{"kind":"Name","value":"text"},"name":{"kind":"Name","value":"questionText"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"MultipartQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"answerType"}},{"kind":"Field","alias":{"kind":"Name","value":"parts"},"name":{"kind":"Name","value":"multiPartBlocks"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"NeoBlockInterface"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SelectPart"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"MultiselectPart"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"NumberPart"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ReadOnlyPart"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"QuestionEntry"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"answerType"}},{"kind":"Field","name":{"kind":"Name","value":"questionText"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"CalculatorQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TabularQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"WidgetQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"NumberQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"MultipartQuestion"}},{"kind":"Field","alias":{"kind":"Name","value":"options"},"name":{"kind":"Name","value":"answerOptions"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"answerOptions_option_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}}]} as unknown as DocumentNode<QuestionsBlockFragment, unknown>;
export const BarGraphToolBlockFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"BarGraphToolBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_barGraphTool_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"yAxisMin"}},{"kind":"Field","name":{"kind":"Name","value":"yAxisMax"}},{"kind":"Field","name":{"kind":"Name","value":"yAxisLabel"}},{"kind":"Field","name":{"kind":"Name","value":"xAxisLabel"}},{"kind":"Field","name":{"kind":"Name","value":"graphBars"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"graphBars_bar_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"yValue"}},{"kind":"Field","name":{"kind":"Name","value":"label"}}]}}]}}]}}]} as unknown as DocumentNode<BarGraphToolBlockFragment, unknown>;
export const FilterToolBlockFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"FilterToolBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_filterTool_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"preSelectedColor"}},{"kind":"Field","name":{"kind":"Name","value":"readOnly"}},{"kind":"Field","name":{"kind":"Name","value":"widgetInstructions"}}]}}]} as unknown as DocumentNode<FilterToolBlockFragment, unknown>;
export const ReferenceBlockFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ReferenceBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_referenceBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"referenceEntries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"referenceContent_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"uri"}},{"kind":"Field","name":{"kind":"Name","value":"slug"}}]}}]}}]}}]} as unknown as DocumentNode<ReferenceBlockFragment, unknown>;
export const ColorFilterToolBlockFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ColorFilterToolBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_colorFilterToolBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"colorFilterTool"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ColorFilterToolEntry"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ColorFilterToolEntry"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"widgets_colorFilterTool_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"filterToolActions"}},{"kind":"Field","alias":{"kind":"Name","value":"filterColorOptionsLabels"},"name":{"kind":"Name","value":"filterColorOptions"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"label"},"value":{"kind":"BooleanValue","value":true}}]},{"kind":"Field","alias":{"kind":"Name","value":"filterColorOptionsValues"},"name":{"kind":"Name","value":"filterColorOptions"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"label"},"value":{"kind":"BooleanValue","value":false}}]},{"kind":"Field","name":{"kind":"Name","value":"colorFilterToolObjects"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"colorFilterToolObjects_group_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"groupName"}},{"kind":"Field","alias":{"kind":"Name","value":"objects"},"name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"colorFilterToolObjects_object_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"name"},"name":{"kind":"Name","value":"objectName"}},{"kind":"Field","alias":{"kind":"Name","value":"caption"},"name":{"kind":"Name","value":"objectCaption"}},{"kind":"Field","alias":{"kind":"Name","value":"filterImages"},"name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"colorFilterToolObjects_filterimage_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"isEnabled"}},{"kind":"Field","name":{"kind":"Name","value":"isActive"}},{"kind":"Field","name":{"kind":"Name","value":"image"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"directUrlPreview"}}]}},{"kind":"Field","name":{"kind":"Name","value":"width"}},{"kind":"Field","name":{"kind":"Name","value":"height"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"max"},"name":{"kind":"Name","value":"colorToolMax"}},{"kind":"Field","alias":{"kind":"Name","value":"min"},"name":{"kind":"Name","value":"colorToolMin"}},{"kind":"Field","alias":{"kind":"Name","value":"defaultValue"},"name":{"kind":"Name","value":"colorToolDefaultValue"}},{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"filter"}},{"kind":"Field","alias":{"kind":"Name","value":"color"},"name":{"kind":"Name","value":"preSelectedColor"}}]}}]}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<ColorFilterToolBlockFragment, unknown>;
export const LightCurveQuestionDataFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"LightCurveQuestionData"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_supernovaDistanceDistribution_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"questionEntries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"questionWidgetsBlock"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionWidgetsBlock_lightCurveBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"lightCurveTool"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"widgets_lightCurveTool_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"dataset"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_supernovaGalaxyObservations_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"distance"}},{"kind":"Field","alias":{"kind":"Name","value":"lat"},"name":{"kind":"Name","value":"galacticLatitude"}},{"kind":"Field","alias":{"kind":"Name","value":"long"},"name":{"kind":"Name","value":"galacticLongitude"}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<LightCurveQuestionDataFragment, unknown>;
export const SupernovaDistanceDistributionBlockFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"SupernovaDistanceDistributionBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_supernovaDistanceDistribution_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"instructions"},"name":{"kind":"Name","value":"widgetInstructions"}},{"kind":"Field","name":{"kind":"Name","value":"imageAlbum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"directUrlPreview"}},{"kind":"Field","name":{"kind":"Name","value":"directUrlOriginal"}}]}},{"kind":"Field","name":{"kind":"Name","value":"width"}},{"kind":"Field","name":{"kind":"Name","value":"height"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"json"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"step"},"name":{"kind":"Name","value":"binSize"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"LightCurveQuestionData"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"LightCurveQuestionData"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_supernovaDistanceDistribution_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"questionEntries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"questionWidgetsBlock"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionWidgetsBlock_lightCurveBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"lightCurveTool"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"widgets_lightCurveTool_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"dataset"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_supernovaGalaxyObservations_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"distance"}},{"kind":"Field","alias":{"kind":"Name","value":"lat"},"name":{"kind":"Name","value":"galacticLatitude"}},{"kind":"Field","alias":{"kind":"Name","value":"long"},"name":{"kind":"Name","value":"galacticLongitude"}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<SupernovaDistanceDistributionBlockFragment, unknown>;
export const MagnitudeScatterPlotBlockFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"MagnitudeScatterPlotBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_magnitudeScatterPlot_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"lightCurveTool"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"widgets_lightCurveTool_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"dataset"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_supernovaGalaxyObservations_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","alias":{"kind":"Name","value":"peakMjd"},"name":{"kind":"Name","value":"mjd"}},{"kind":"Field","name":{"kind":"Name","value":"json"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"yMin"},"name":{"kind":"Name","value":"yAxisMin"}},{"kind":"Field","alias":{"kind":"Name","value":"yMax"},"name":{"kind":"Name","value":"yAxisMax"}}]}}]}}]}}]} as unknown as DocumentNode<MagnitudeScatterPlotBlockFragment, unknown>;
export const TwoColumnContainerBlockFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"TwoColumnContainerBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_twoColumnContainer_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"columns"},"name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_colLeft_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"childblocks"},"name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TextBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ImageBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TableBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"VideoBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"QuestionsBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"BarGraphToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"FilterToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ReferenceBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ColorFilterToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SupernovaDistanceDistributionBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"MagnitudeScatterPlotBlock"}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_colRight_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"childblocks"},"name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TextBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ImageBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TableBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"VideoBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"QuestionsBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"BarGraphToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"FilterToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ReferenceBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ColorFilterToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SupernovaDistanceDistributionBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"MagnitudeScatterPlotBlock"}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"CalculatorQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"questionText"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"TableRows"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"header"},"name":{"kind":"Name","value":"tableHeader"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"headerRow"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"headerRow_tableCell_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"text"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}}]}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"rows"},"name":{"kind":"Name","value":"questionTable"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionTable_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"cells"},"name":{"kind":"Name","value":"tableCell"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_question_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"answerType"},"name":{"kind":"Name","value":"questionType"}},{"kind":"Field","name":{"kind":"Name","value":"options"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"options_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_static_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_rowHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_previousQuestion_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"question"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"answerType"}},{"kind":"Field","alias":{"kind":"Name","value":"rows"},"name":{"kind":"Name","value":"questionTable"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionTable_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"cells"},"name":{"kind":"Name","value":"tableCell"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_question_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"answerType"},"name":{"kind":"Name","value":"questionType"}},{"kind":"Field","name":{"kind":"Name","value":"options"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"options_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_static_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_rowHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"TabularQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"questionText"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TableRows"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ColorFilterToolEntry"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"widgets_colorFilterTool_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"filterToolActions"}},{"kind":"Field","alias":{"kind":"Name","value":"filterColorOptionsLabels"},"name":{"kind":"Name","value":"filterColorOptions"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"label"},"value":{"kind":"BooleanValue","value":true}}]},{"kind":"Field","alias":{"kind":"Name","value":"filterColorOptionsValues"},"name":{"kind":"Name","value":"filterColorOptions"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"label"},"value":{"kind":"BooleanValue","value":false}}]},{"kind":"Field","name":{"kind":"Name","value":"colorFilterToolObjects"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"colorFilterToolObjects_group_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"groupName"}},{"kind":"Field","alias":{"kind":"Name","value":"objects"},"name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"colorFilterToolObjects_object_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"name"},"name":{"kind":"Name","value":"objectName"}},{"kind":"Field","alias":{"kind":"Name","value":"caption"},"name":{"kind":"Name","value":"objectCaption"}},{"kind":"Field","alias":{"kind":"Name","value":"filterImages"},"name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"colorFilterToolObjects_filterimage_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"isEnabled"}},{"kind":"Field","name":{"kind":"Name","value":"isActive"}},{"kind":"Field","name":{"kind":"Name","value":"image"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"directUrlPreview"}}]}},{"kind":"Field","name":{"kind":"Name","value":"width"}},{"kind":"Field","name":{"kind":"Name","value":"height"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"max"},"name":{"kind":"Name","value":"colorToolMax"}},{"kind":"Field","alias":{"kind":"Name","value":"min"},"name":{"kind":"Name","value":"colorToolMin"}},{"kind":"Field","alias":{"kind":"Name","value":"defaultValue"},"name":{"kind":"Name","value":"colorToolDefaultValue"}},{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"filter"}},{"kind":"Field","alias":{"kind":"Name","value":"color"},"name":{"kind":"Name","value":"preSelectedColor"}}]}}]}}]}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ColorFilterToolQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionWidgetsBlock_colorFilterToolBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"colorFilterTool"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ColorFilterToolEntry"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"SourceSelectorQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionWidgetsBlock_sourceSelectorBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"sourceSelector"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"widgets_sourceSelector_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"includeScatterPlot"}},{"kind":"Field","alias":{"kind":"Name","value":"yMin"},"name":{"kind":"Name","value":"yAxisMin"}},{"kind":"Field","alias":{"kind":"Name","value":"yMax"},"name":{"kind":"Name","value":"yAxisMax"}},{"kind":"Field","name":{"kind":"Name","value":"dataset"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_supernovaGalaxyObservations_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"peakMjd"},"name":{"kind":"Name","value":"mjd"}},{"kind":"Field","alias":{"kind":"Name","value":"sources"},"name":{"kind":"Name","value":"alertSources"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"alertSources_source_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"color"}},{"kind":"Field","alias":{"kind":"Name","value":"x"},"name":{"kind":"Name","value":"xCoord"}},{"kind":"Field","alias":{"kind":"Name","value":"y"},"name":{"kind":"Name","value":"yCoord"}},{"kind":"Field","name":{"kind":"Name","value":"radius"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"sourceType"}},{"kind":"Field","alias":{"kind":"Name","value":"id"},"name":{"kind":"Name","value":"sourceName"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"json"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"imageAlbum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"directUrlPreview"}}]}}]}}]}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"LightCurveQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionWidgetsBlock_lightCurveBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"lightCurveTool"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"widgets_lightCurveTool_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"dataset"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_supernovaGalaxyObservations_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"peakMjd"},"name":{"kind":"Name","value":"mjd"}},{"kind":"Field","name":{"kind":"Name","value":"json"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"yMin"},"name":{"kind":"Name","value":"yAxisMin"}},{"kind":"Field","alias":{"kind":"Name","value":"yMax"},"name":{"kind":"Name","value":"yAxisMax"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"IsochronePlotQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionWidgetsBlock_isochronePlot_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"dataset"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_starCluster_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","alias":{"kind":"Name","value":"ageLibrary"},"name":{"kind":"Name","value":"json"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"plotPoints"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"yMin"},"name":{"kind":"Name","value":"yAxisMin"}},{"kind":"Field","alias":{"kind":"Name","value":"yMax"},"name":{"kind":"Name","value":"yAxisMax"}},{"kind":"Field","alias":{"kind":"Name","value":"xMin"},"name":{"kind":"Name","value":"xAxisMin"}},{"kind":"Field","alias":{"kind":"Name","value":"xMax"},"name":{"kind":"Name","value":"xAxisMax"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"WidgetQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"instructions"},"name":{"kind":"Name","value":"widgetInstructions"}},{"kind":"Field","name":{"kind":"Name","value":"questionWidgetsBlock"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ColorFilterToolQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SourceSelectorQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"LightCurveQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"IsochronePlotQuestion"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"NumberQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"questionText"}},{"kind":"Field","name":{"kind":"Name","value":"minimum"}},{"kind":"Field","name":{"kind":"Name","value":"maximum"}},{"kind":"Field","name":{"kind":"Name","value":"precision"}},{"kind":"Field","name":{"kind":"Name","value":"validation"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"validation_numberValidator_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"SelectPart"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"multiPartBlocks_select_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}},{"kind":"Field","alias":{"kind":"Name","value":"options"},"name":{"kind":"Name","value":"answerOptions"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"answerOptions_option_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"MultiselectPart"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"multiPartBlocks_multiselect_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}},{"kind":"Field","alias":{"kind":"Name","value":"options"},"name":{"kind":"Name","value":"answerOptions"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"answerOptions_option_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"NumberPart"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"multiPartBlocks_number_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}},{"kind":"Field","name":{"kind":"Name","value":"minimum"}},{"kind":"Field","name":{"kind":"Name","value":"maximum"}},{"kind":"Field","name":{"kind":"Name","value":"precision"}},{"kind":"Field","name":{"kind":"Name","value":"validation"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"validation_numberValidator_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ReadOnlyPart"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"multiPartBlocks_readonlyText_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}},{"kind":"Field","alias":{"kind":"Name","value":"text"},"name":{"kind":"Name","value":"questionText"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"MultipartQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"answerType"}},{"kind":"Field","alias":{"kind":"Name","value":"parts"},"name":{"kind":"Name","value":"multiPartBlocks"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"NeoBlockInterface"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SelectPart"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"MultiselectPart"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"NumberPart"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ReadOnlyPart"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"QuestionEntry"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"answerType"}},{"kind":"Field","name":{"kind":"Name","value":"questionText"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"CalculatorQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TabularQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"WidgetQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"NumberQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"MultipartQuestion"}},{"kind":"Field","alias":{"kind":"Name","value":"options"},"name":{"kind":"Name","value":"answerOptions"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"answerOptions_option_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"LightCurveQuestionData"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_supernovaDistanceDistribution_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"questionEntries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"questionWidgetsBlock"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionWidgetsBlock_lightCurveBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"lightCurveTool"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"widgets_lightCurveTool_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"dataset"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_supernovaGalaxyObservations_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"distance"}},{"kind":"Field","alias":{"kind":"Name","value":"lat"},"name":{"kind":"Name","value":"galacticLatitude"}},{"kind":"Field","alias":{"kind":"Name","value":"long"},"name":{"kind":"Name","value":"galacticLongitude"}}]}}]}}]}}]}}]}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"TextBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_text_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ImageBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_image_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"caption"}},{"kind":"Field","name":{"kind":"Name","value":"layout"}},{"kind":"Field","name":{"kind":"Name","value":"image"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"directUrlPreview"}},{"kind":"Field","name":{"kind":"Name","value":"directUrlOriginal"}},{"kind":"Field","name":{"kind":"Name","value":"PNG"}},{"kind":"Field","name":{"kind":"Name","value":"HighJPG"}},{"kind":"Field","name":{"kind":"Name","value":"LowJPG"}},{"kind":"Field","name":{"kind":"Name","value":"preview"}}]}},{"kind":"Field","name":{"kind":"Name","value":"width"}},{"kind":"Field","name":{"kind":"Name","value":"height"}},{"kind":"Field","alias":{"kind":"Name","value":"metadata"},"name":{"kind":"Name","value":"additional"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"AltTextEN"}},{"kind":"Field","name":{"kind":"Name","value":"AltTextES"}},{"kind":"Field","name":{"kind":"Name","value":"CaptionEN"}},{"kind":"Field","name":{"kind":"Name","value":"CaptionES"}},{"kind":"Field","name":{"kind":"Name","value":"Credit"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"TableBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_table_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"caption"}},{"kind":"Field","name":{"kind":"Name","value":"contentHeading"}},{"kind":"Field","alias":{"kind":"Name","value":"header"},"name":{"kind":"Name","value":"tableHeader"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"headerRow"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"headerRow_tableCell_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"text"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}}]}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"rows"},"name":{"kind":"Name","value":"displayTable"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"displayTable_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"cells"},"name":{"kind":"Name","value":"tableRow"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableRow_tableCell_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"text"},"name":{"kind":"Name","value":"cellContent"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableRow_rowHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"text"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableRow_previousQuestion_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"question"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"answerType"}},{"kind":"Field","alias":{"kind":"Name","value":"rows"},"name":{"kind":"Name","value":"questionTable"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionTable_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"cells"},"name":{"kind":"Name","value":"tableCell"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_question_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"answerType"},"name":{"kind":"Name","value":"questionType"}},{"kind":"Field","name":{"kind":"Name","value":"options"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"options_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_static_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_rowHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"VideoBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_video_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"caption"}},{"kind":"Field","name":{"kind":"Name","value":"video"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"directUrlPreview"}},{"kind":"Field","name":{"kind":"Name","value":"directUrlPreviewPlay"}}]}},{"kind":"Field","name":{"kind":"Name","value":"width"}},{"kind":"Field","name":{"kind":"Name","value":"height"}},{"kind":"Field","alias":{"kind":"Name","value":"metadata"},"name":{"kind":"Name","value":"additional"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"CaptionEN"}},{"kind":"Field","name":{"kind":"Name","value":"CaptionES"}},{"kind":"Field","name":{"kind":"Name","value":"Credit"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"QuestionsBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_questionBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"questionEntries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"QuestionEntry"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"BarGraphToolBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_barGraphTool_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"yAxisMin"}},{"kind":"Field","name":{"kind":"Name","value":"yAxisMax"}},{"kind":"Field","name":{"kind":"Name","value":"yAxisLabel"}},{"kind":"Field","name":{"kind":"Name","value":"xAxisLabel"}},{"kind":"Field","name":{"kind":"Name","value":"graphBars"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"graphBars_bar_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"yValue"}},{"kind":"Field","name":{"kind":"Name","value":"label"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"FilterToolBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_filterTool_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"preSelectedColor"}},{"kind":"Field","name":{"kind":"Name","value":"readOnly"}},{"kind":"Field","name":{"kind":"Name","value":"widgetInstructions"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ReferenceBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_referenceBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"referenceEntries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"referenceContent_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"uri"}},{"kind":"Field","name":{"kind":"Name","value":"slug"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ColorFilterToolBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_colorFilterToolBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"colorFilterTool"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ColorFilterToolEntry"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"SupernovaDistanceDistributionBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_supernovaDistanceDistribution_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"instructions"},"name":{"kind":"Name","value":"widgetInstructions"}},{"kind":"Field","name":{"kind":"Name","value":"imageAlbum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"directUrlPreview"}},{"kind":"Field","name":{"kind":"Name","value":"directUrlOriginal"}}]}},{"kind":"Field","name":{"kind":"Name","value":"width"}},{"kind":"Field","name":{"kind":"Name","value":"height"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"json"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"step"},"name":{"kind":"Name","value":"binSize"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"LightCurveQuestionData"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"MagnitudeScatterPlotBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_magnitudeScatterPlot_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"lightCurveTool"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"widgets_lightCurveTool_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"dataset"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_supernovaGalaxyObservations_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","alias":{"kind":"Name","value":"peakMjd"},"name":{"kind":"Name","value":"mjd"}},{"kind":"Field","name":{"kind":"Name","value":"json"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"yMin"},"name":{"kind":"Name","value":"yAxisMin"}},{"kind":"Field","alias":{"kind":"Name","value":"yMax"},"name":{"kind":"Name","value":"yAxisMax"}}]}}]}}]}}]} as unknown as DocumentNode<TwoColumnContainerBlockFragment, unknown>;
export const InteractionGroupContainerBlockFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"InteractionGroupContainerBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_group_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","alias":{"kind":"Name","value":"childBlocks"},"name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TextBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ImageBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"VideoBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TableBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"QuestionsBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"BarGraphToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"FilterToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ReferenceBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ColorFilterToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SupernovaDistanceDistributionBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"MagnitudeScatterPlotBlock"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"CalculatorQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"questionText"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"TableRows"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"header"},"name":{"kind":"Name","value":"tableHeader"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"headerRow"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"headerRow_tableCell_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"text"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}}]}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"rows"},"name":{"kind":"Name","value":"questionTable"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionTable_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"cells"},"name":{"kind":"Name","value":"tableCell"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_question_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"answerType"},"name":{"kind":"Name","value":"questionType"}},{"kind":"Field","name":{"kind":"Name","value":"options"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"options_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_static_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_rowHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_previousQuestion_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"question"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"answerType"}},{"kind":"Field","alias":{"kind":"Name","value":"rows"},"name":{"kind":"Name","value":"questionTable"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionTable_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"cells"},"name":{"kind":"Name","value":"tableCell"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_question_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"answerType"},"name":{"kind":"Name","value":"questionType"}},{"kind":"Field","name":{"kind":"Name","value":"options"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"options_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_static_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_rowHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"TabularQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"questionText"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TableRows"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ColorFilterToolEntry"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"widgets_colorFilterTool_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"filterToolActions"}},{"kind":"Field","alias":{"kind":"Name","value":"filterColorOptionsLabels"},"name":{"kind":"Name","value":"filterColorOptions"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"label"},"value":{"kind":"BooleanValue","value":true}}]},{"kind":"Field","alias":{"kind":"Name","value":"filterColorOptionsValues"},"name":{"kind":"Name","value":"filterColorOptions"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"label"},"value":{"kind":"BooleanValue","value":false}}]},{"kind":"Field","name":{"kind":"Name","value":"colorFilterToolObjects"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"colorFilterToolObjects_group_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"groupName"}},{"kind":"Field","alias":{"kind":"Name","value":"objects"},"name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"colorFilterToolObjects_object_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"name"},"name":{"kind":"Name","value":"objectName"}},{"kind":"Field","alias":{"kind":"Name","value":"caption"},"name":{"kind":"Name","value":"objectCaption"}},{"kind":"Field","alias":{"kind":"Name","value":"filterImages"},"name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"colorFilterToolObjects_filterimage_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"isEnabled"}},{"kind":"Field","name":{"kind":"Name","value":"isActive"}},{"kind":"Field","name":{"kind":"Name","value":"image"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"directUrlPreview"}}]}},{"kind":"Field","name":{"kind":"Name","value":"width"}},{"kind":"Field","name":{"kind":"Name","value":"height"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"max"},"name":{"kind":"Name","value":"colorToolMax"}},{"kind":"Field","alias":{"kind":"Name","value":"min"},"name":{"kind":"Name","value":"colorToolMin"}},{"kind":"Field","alias":{"kind":"Name","value":"defaultValue"},"name":{"kind":"Name","value":"colorToolDefaultValue"}},{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"filter"}},{"kind":"Field","alias":{"kind":"Name","value":"color"},"name":{"kind":"Name","value":"preSelectedColor"}}]}}]}}]}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ColorFilterToolQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionWidgetsBlock_colorFilterToolBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"colorFilterTool"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ColorFilterToolEntry"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"SourceSelectorQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionWidgetsBlock_sourceSelectorBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"sourceSelector"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"widgets_sourceSelector_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"includeScatterPlot"}},{"kind":"Field","alias":{"kind":"Name","value":"yMin"},"name":{"kind":"Name","value":"yAxisMin"}},{"kind":"Field","alias":{"kind":"Name","value":"yMax"},"name":{"kind":"Name","value":"yAxisMax"}},{"kind":"Field","name":{"kind":"Name","value":"dataset"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_supernovaGalaxyObservations_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"peakMjd"},"name":{"kind":"Name","value":"mjd"}},{"kind":"Field","alias":{"kind":"Name","value":"sources"},"name":{"kind":"Name","value":"alertSources"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"alertSources_source_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"color"}},{"kind":"Field","alias":{"kind":"Name","value":"x"},"name":{"kind":"Name","value":"xCoord"}},{"kind":"Field","alias":{"kind":"Name","value":"y"},"name":{"kind":"Name","value":"yCoord"}},{"kind":"Field","name":{"kind":"Name","value":"radius"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"sourceType"}},{"kind":"Field","alias":{"kind":"Name","value":"id"},"name":{"kind":"Name","value":"sourceName"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"json"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"imageAlbum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"directUrlPreview"}}]}}]}}]}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"LightCurveQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionWidgetsBlock_lightCurveBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"lightCurveTool"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"widgets_lightCurveTool_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"dataset"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_supernovaGalaxyObservations_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"peakMjd"},"name":{"kind":"Name","value":"mjd"}},{"kind":"Field","name":{"kind":"Name","value":"json"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"yMin"},"name":{"kind":"Name","value":"yAxisMin"}},{"kind":"Field","alias":{"kind":"Name","value":"yMax"},"name":{"kind":"Name","value":"yAxisMax"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"IsochronePlotQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionWidgetsBlock_isochronePlot_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"dataset"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_starCluster_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","alias":{"kind":"Name","value":"ageLibrary"},"name":{"kind":"Name","value":"json"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"plotPoints"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"yMin"},"name":{"kind":"Name","value":"yAxisMin"}},{"kind":"Field","alias":{"kind":"Name","value":"yMax"},"name":{"kind":"Name","value":"yAxisMax"}},{"kind":"Field","alias":{"kind":"Name","value":"xMin"},"name":{"kind":"Name","value":"xAxisMin"}},{"kind":"Field","alias":{"kind":"Name","value":"xMax"},"name":{"kind":"Name","value":"xAxisMax"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"WidgetQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"instructions"},"name":{"kind":"Name","value":"widgetInstructions"}},{"kind":"Field","name":{"kind":"Name","value":"questionWidgetsBlock"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ColorFilterToolQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SourceSelectorQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"LightCurveQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"IsochronePlotQuestion"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"NumberQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"questionText"}},{"kind":"Field","name":{"kind":"Name","value":"minimum"}},{"kind":"Field","name":{"kind":"Name","value":"maximum"}},{"kind":"Field","name":{"kind":"Name","value":"precision"}},{"kind":"Field","name":{"kind":"Name","value":"validation"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"validation_numberValidator_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"SelectPart"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"multiPartBlocks_select_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}},{"kind":"Field","alias":{"kind":"Name","value":"options"},"name":{"kind":"Name","value":"answerOptions"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"answerOptions_option_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"MultiselectPart"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"multiPartBlocks_multiselect_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}},{"kind":"Field","alias":{"kind":"Name","value":"options"},"name":{"kind":"Name","value":"answerOptions"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"answerOptions_option_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"NumberPart"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"multiPartBlocks_number_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}},{"kind":"Field","name":{"kind":"Name","value":"minimum"}},{"kind":"Field","name":{"kind":"Name","value":"maximum"}},{"kind":"Field","name":{"kind":"Name","value":"precision"}},{"kind":"Field","name":{"kind":"Name","value":"validation"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"validation_numberValidator_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ReadOnlyPart"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"multiPartBlocks_readonlyText_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}},{"kind":"Field","alias":{"kind":"Name","value":"text"},"name":{"kind":"Name","value":"questionText"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"MultipartQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"answerType"}},{"kind":"Field","alias":{"kind":"Name","value":"parts"},"name":{"kind":"Name","value":"multiPartBlocks"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"NeoBlockInterface"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SelectPart"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"MultiselectPart"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"NumberPart"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ReadOnlyPart"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"QuestionEntry"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"answerType"}},{"kind":"Field","name":{"kind":"Name","value":"questionText"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"CalculatorQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TabularQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"WidgetQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"NumberQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"MultipartQuestion"}},{"kind":"Field","alias":{"kind":"Name","value":"options"},"name":{"kind":"Name","value":"answerOptions"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"answerOptions_option_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"LightCurveQuestionData"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_supernovaDistanceDistribution_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"questionEntries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"questionWidgetsBlock"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionWidgetsBlock_lightCurveBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"lightCurveTool"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"widgets_lightCurveTool_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"dataset"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_supernovaGalaxyObservations_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"distance"}},{"kind":"Field","alias":{"kind":"Name","value":"lat"},"name":{"kind":"Name","value":"galacticLatitude"}},{"kind":"Field","alias":{"kind":"Name","value":"long"},"name":{"kind":"Name","value":"galacticLongitude"}}]}}]}}]}}]}}]}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"TextBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_text_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ImageBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_image_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"caption"}},{"kind":"Field","name":{"kind":"Name","value":"layout"}},{"kind":"Field","name":{"kind":"Name","value":"image"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"directUrlPreview"}},{"kind":"Field","name":{"kind":"Name","value":"directUrlOriginal"}},{"kind":"Field","name":{"kind":"Name","value":"PNG"}},{"kind":"Field","name":{"kind":"Name","value":"HighJPG"}},{"kind":"Field","name":{"kind":"Name","value":"LowJPG"}},{"kind":"Field","name":{"kind":"Name","value":"preview"}}]}},{"kind":"Field","name":{"kind":"Name","value":"width"}},{"kind":"Field","name":{"kind":"Name","value":"height"}},{"kind":"Field","alias":{"kind":"Name","value":"metadata"},"name":{"kind":"Name","value":"additional"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"AltTextEN"}},{"kind":"Field","name":{"kind":"Name","value":"AltTextES"}},{"kind":"Field","name":{"kind":"Name","value":"CaptionEN"}},{"kind":"Field","name":{"kind":"Name","value":"CaptionES"}},{"kind":"Field","name":{"kind":"Name","value":"Credit"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"VideoBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_video_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"caption"}},{"kind":"Field","name":{"kind":"Name","value":"video"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"directUrlPreview"}},{"kind":"Field","name":{"kind":"Name","value":"directUrlPreviewPlay"}}]}},{"kind":"Field","name":{"kind":"Name","value":"width"}},{"kind":"Field","name":{"kind":"Name","value":"height"}},{"kind":"Field","alias":{"kind":"Name","value":"metadata"},"name":{"kind":"Name","value":"additional"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"CaptionEN"}},{"kind":"Field","name":{"kind":"Name","value":"CaptionES"}},{"kind":"Field","name":{"kind":"Name","value":"Credit"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"TableBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_table_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"caption"}},{"kind":"Field","name":{"kind":"Name","value":"contentHeading"}},{"kind":"Field","alias":{"kind":"Name","value":"header"},"name":{"kind":"Name","value":"tableHeader"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"headerRow"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"headerRow_tableCell_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"text"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}}]}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"rows"},"name":{"kind":"Name","value":"displayTable"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"displayTable_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"cells"},"name":{"kind":"Name","value":"tableRow"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableRow_tableCell_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"text"},"name":{"kind":"Name","value":"cellContent"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableRow_rowHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"text"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableRow_previousQuestion_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"question"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"answerType"}},{"kind":"Field","alias":{"kind":"Name","value":"rows"},"name":{"kind":"Name","value":"questionTable"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionTable_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"cells"},"name":{"kind":"Name","value":"tableCell"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_question_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"answerType"},"name":{"kind":"Name","value":"questionType"}},{"kind":"Field","name":{"kind":"Name","value":"options"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"options_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_static_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_rowHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"QuestionsBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_questionBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"questionEntries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"QuestionEntry"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"BarGraphToolBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_barGraphTool_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"yAxisMin"}},{"kind":"Field","name":{"kind":"Name","value":"yAxisMax"}},{"kind":"Field","name":{"kind":"Name","value":"yAxisLabel"}},{"kind":"Field","name":{"kind":"Name","value":"xAxisLabel"}},{"kind":"Field","name":{"kind":"Name","value":"graphBars"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"graphBars_bar_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"yValue"}},{"kind":"Field","name":{"kind":"Name","value":"label"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"FilterToolBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_filterTool_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"preSelectedColor"}},{"kind":"Field","name":{"kind":"Name","value":"readOnly"}},{"kind":"Field","name":{"kind":"Name","value":"widgetInstructions"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ReferenceBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_referenceBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"referenceEntries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"referenceContent_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"uri"}},{"kind":"Field","name":{"kind":"Name","value":"slug"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ColorFilterToolBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_colorFilterToolBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"colorFilterTool"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ColorFilterToolEntry"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"SupernovaDistanceDistributionBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_supernovaDistanceDistribution_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"instructions"},"name":{"kind":"Name","value":"widgetInstructions"}},{"kind":"Field","name":{"kind":"Name","value":"imageAlbum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"directUrlPreview"}},{"kind":"Field","name":{"kind":"Name","value":"directUrlOriginal"}}]}},{"kind":"Field","name":{"kind":"Name","value":"width"}},{"kind":"Field","name":{"kind":"Name","value":"height"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"json"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"step"},"name":{"kind":"Name","value":"binSize"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"LightCurveQuestionData"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"MagnitudeScatterPlotBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_magnitudeScatterPlot_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"lightCurveTool"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"widgets_lightCurveTool_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"dataset"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_supernovaGalaxyObservations_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","alias":{"kind":"Name","value":"peakMjd"},"name":{"kind":"Name","value":"mjd"}},{"kind":"Field","name":{"kind":"Name","value":"json"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"yMin"},"name":{"kind":"Name","value":"yAxisMin"}},{"kind":"Field","alias":{"kind":"Name","value":"yMax"},"name":{"kind":"Name","value":"yAxisMax"}}]}}]}}]}}]} as unknown as DocumentNode<InteractionGroupContainerBlockFragment, unknown>;
export const CameraFilterToolBlockFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"CameraFilterToolBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_cameraFilterTool_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"widgetInstructions"}}]}}]} as unknown as DocumentNode<CameraFilterToolBlockFragment, unknown>;
export const EquationBlockFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"EquationBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_equation_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"latex"}}]}}]} as unknown as DocumentNode<EquationBlockFragment, unknown>;
export const ContentBlockFactoryFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ContentBlockFactory"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_NeoField"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TwoColumnContainerBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"InteractionGroupContainerBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TextBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ImageBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"VideoBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TableBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"QuestionsBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"BarGraphToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"FilterToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ReferenceBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ColorFilterToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"CameraFilterToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"EquationBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SupernovaDistanceDistributionBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"MagnitudeScatterPlotBlock"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"TextBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_text_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ImageBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_image_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"caption"}},{"kind":"Field","name":{"kind":"Name","value":"layout"}},{"kind":"Field","name":{"kind":"Name","value":"image"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"directUrlPreview"}},{"kind":"Field","name":{"kind":"Name","value":"directUrlOriginal"}},{"kind":"Field","name":{"kind":"Name","value":"PNG"}},{"kind":"Field","name":{"kind":"Name","value":"HighJPG"}},{"kind":"Field","name":{"kind":"Name","value":"LowJPG"}},{"kind":"Field","name":{"kind":"Name","value":"preview"}}]}},{"kind":"Field","name":{"kind":"Name","value":"width"}},{"kind":"Field","name":{"kind":"Name","value":"height"}},{"kind":"Field","alias":{"kind":"Name","value":"metadata"},"name":{"kind":"Name","value":"additional"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"AltTextEN"}},{"kind":"Field","name":{"kind":"Name","value":"AltTextES"}},{"kind":"Field","name":{"kind":"Name","value":"CaptionEN"}},{"kind":"Field","name":{"kind":"Name","value":"CaptionES"}},{"kind":"Field","name":{"kind":"Name","value":"Credit"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"TableBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_table_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"caption"}},{"kind":"Field","name":{"kind":"Name","value":"contentHeading"}},{"kind":"Field","alias":{"kind":"Name","value":"header"},"name":{"kind":"Name","value":"tableHeader"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"headerRow"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"headerRow_tableCell_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"text"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}}]}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"rows"},"name":{"kind":"Name","value":"displayTable"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"displayTable_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"cells"},"name":{"kind":"Name","value":"tableRow"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableRow_tableCell_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"text"},"name":{"kind":"Name","value":"cellContent"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableRow_rowHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"text"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableRow_previousQuestion_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"question"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"answerType"}},{"kind":"Field","alias":{"kind":"Name","value":"rows"},"name":{"kind":"Name","value":"questionTable"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionTable_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"cells"},"name":{"kind":"Name","value":"tableCell"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_question_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"answerType"},"name":{"kind":"Name","value":"questionType"}},{"kind":"Field","name":{"kind":"Name","value":"options"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"options_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_static_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_rowHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"VideoBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_video_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"caption"}},{"kind":"Field","name":{"kind":"Name","value":"video"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"directUrlPreview"}},{"kind":"Field","name":{"kind":"Name","value":"directUrlPreviewPlay"}}]}},{"kind":"Field","name":{"kind":"Name","value":"width"}},{"kind":"Field","name":{"kind":"Name","value":"height"}},{"kind":"Field","alias":{"kind":"Name","value":"metadata"},"name":{"kind":"Name","value":"additional"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"CaptionEN"}},{"kind":"Field","name":{"kind":"Name","value":"CaptionES"}},{"kind":"Field","name":{"kind":"Name","value":"Credit"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"CalculatorQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"questionText"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"TableRows"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"header"},"name":{"kind":"Name","value":"tableHeader"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"headerRow"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"headerRow_tableCell_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"text"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}}]}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"rows"},"name":{"kind":"Name","value":"questionTable"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionTable_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"cells"},"name":{"kind":"Name","value":"tableCell"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_question_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"answerType"},"name":{"kind":"Name","value":"questionType"}},{"kind":"Field","name":{"kind":"Name","value":"options"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"options_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_static_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_rowHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_previousQuestion_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"question"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"answerType"}},{"kind":"Field","alias":{"kind":"Name","value":"rows"},"name":{"kind":"Name","value":"questionTable"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionTable_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"cells"},"name":{"kind":"Name","value":"tableCell"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_question_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"answerType"},"name":{"kind":"Name","value":"questionType"}},{"kind":"Field","name":{"kind":"Name","value":"options"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"options_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_static_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_rowHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"TabularQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"questionText"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TableRows"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ColorFilterToolEntry"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"widgets_colorFilterTool_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"filterToolActions"}},{"kind":"Field","alias":{"kind":"Name","value":"filterColorOptionsLabels"},"name":{"kind":"Name","value":"filterColorOptions"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"label"},"value":{"kind":"BooleanValue","value":true}}]},{"kind":"Field","alias":{"kind":"Name","value":"filterColorOptionsValues"},"name":{"kind":"Name","value":"filterColorOptions"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"label"},"value":{"kind":"BooleanValue","value":false}}]},{"kind":"Field","name":{"kind":"Name","value":"colorFilterToolObjects"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"colorFilterToolObjects_group_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"groupName"}},{"kind":"Field","alias":{"kind":"Name","value":"objects"},"name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"colorFilterToolObjects_object_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"name"},"name":{"kind":"Name","value":"objectName"}},{"kind":"Field","alias":{"kind":"Name","value":"caption"},"name":{"kind":"Name","value":"objectCaption"}},{"kind":"Field","alias":{"kind":"Name","value":"filterImages"},"name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"colorFilterToolObjects_filterimage_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"isEnabled"}},{"kind":"Field","name":{"kind":"Name","value":"isActive"}},{"kind":"Field","name":{"kind":"Name","value":"image"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"directUrlPreview"}}]}},{"kind":"Field","name":{"kind":"Name","value":"width"}},{"kind":"Field","name":{"kind":"Name","value":"height"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"max"},"name":{"kind":"Name","value":"colorToolMax"}},{"kind":"Field","alias":{"kind":"Name","value":"min"},"name":{"kind":"Name","value":"colorToolMin"}},{"kind":"Field","alias":{"kind":"Name","value":"defaultValue"},"name":{"kind":"Name","value":"colorToolDefaultValue"}},{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"filter"}},{"kind":"Field","alias":{"kind":"Name","value":"color"},"name":{"kind":"Name","value":"preSelectedColor"}}]}}]}}]}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ColorFilterToolQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionWidgetsBlock_colorFilterToolBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"colorFilterTool"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ColorFilterToolEntry"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"SourceSelectorQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionWidgetsBlock_sourceSelectorBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"sourceSelector"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"widgets_sourceSelector_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"includeScatterPlot"}},{"kind":"Field","alias":{"kind":"Name","value":"yMin"},"name":{"kind":"Name","value":"yAxisMin"}},{"kind":"Field","alias":{"kind":"Name","value":"yMax"},"name":{"kind":"Name","value":"yAxisMax"}},{"kind":"Field","name":{"kind":"Name","value":"dataset"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_supernovaGalaxyObservations_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"peakMjd"},"name":{"kind":"Name","value":"mjd"}},{"kind":"Field","alias":{"kind":"Name","value":"sources"},"name":{"kind":"Name","value":"alertSources"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"alertSources_source_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"color"}},{"kind":"Field","alias":{"kind":"Name","value":"x"},"name":{"kind":"Name","value":"xCoord"}},{"kind":"Field","alias":{"kind":"Name","value":"y"},"name":{"kind":"Name","value":"yCoord"}},{"kind":"Field","name":{"kind":"Name","value":"radius"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"sourceType"}},{"kind":"Field","alias":{"kind":"Name","value":"id"},"name":{"kind":"Name","value":"sourceName"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"json"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"imageAlbum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"directUrlPreview"}}]}}]}}]}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"LightCurveQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionWidgetsBlock_lightCurveBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"lightCurveTool"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"widgets_lightCurveTool_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"dataset"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_supernovaGalaxyObservations_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"peakMjd"},"name":{"kind":"Name","value":"mjd"}},{"kind":"Field","name":{"kind":"Name","value":"json"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"yMin"},"name":{"kind":"Name","value":"yAxisMin"}},{"kind":"Field","alias":{"kind":"Name","value":"yMax"},"name":{"kind":"Name","value":"yAxisMax"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"IsochronePlotQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionWidgetsBlock_isochronePlot_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"dataset"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_starCluster_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","alias":{"kind":"Name","value":"ageLibrary"},"name":{"kind":"Name","value":"json"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"plotPoints"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"yMin"},"name":{"kind":"Name","value":"yAxisMin"}},{"kind":"Field","alias":{"kind":"Name","value":"yMax"},"name":{"kind":"Name","value":"yAxisMax"}},{"kind":"Field","alias":{"kind":"Name","value":"xMin"},"name":{"kind":"Name","value":"xAxisMin"}},{"kind":"Field","alias":{"kind":"Name","value":"xMax"},"name":{"kind":"Name","value":"xAxisMax"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"WidgetQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"instructions"},"name":{"kind":"Name","value":"widgetInstructions"}},{"kind":"Field","name":{"kind":"Name","value":"questionWidgetsBlock"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ColorFilterToolQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SourceSelectorQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"LightCurveQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"IsochronePlotQuestion"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"NumberQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"questionText"}},{"kind":"Field","name":{"kind":"Name","value":"minimum"}},{"kind":"Field","name":{"kind":"Name","value":"maximum"}},{"kind":"Field","name":{"kind":"Name","value":"precision"}},{"kind":"Field","name":{"kind":"Name","value":"validation"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"validation_numberValidator_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"SelectPart"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"multiPartBlocks_select_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}},{"kind":"Field","alias":{"kind":"Name","value":"options"},"name":{"kind":"Name","value":"answerOptions"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"answerOptions_option_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"MultiselectPart"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"multiPartBlocks_multiselect_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}},{"kind":"Field","alias":{"kind":"Name","value":"options"},"name":{"kind":"Name","value":"answerOptions"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"answerOptions_option_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"NumberPart"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"multiPartBlocks_number_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}},{"kind":"Field","name":{"kind":"Name","value":"minimum"}},{"kind":"Field","name":{"kind":"Name","value":"maximum"}},{"kind":"Field","name":{"kind":"Name","value":"precision"}},{"kind":"Field","name":{"kind":"Name","value":"validation"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"validation_numberValidator_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ReadOnlyPart"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"multiPartBlocks_readonlyText_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}},{"kind":"Field","alias":{"kind":"Name","value":"text"},"name":{"kind":"Name","value":"questionText"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"MultipartQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"answerType"}},{"kind":"Field","alias":{"kind":"Name","value":"parts"},"name":{"kind":"Name","value":"multiPartBlocks"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"NeoBlockInterface"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SelectPart"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"MultiselectPart"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"NumberPart"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ReadOnlyPart"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"QuestionEntry"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"answerType"}},{"kind":"Field","name":{"kind":"Name","value":"questionText"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"CalculatorQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TabularQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"WidgetQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"NumberQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"MultipartQuestion"}},{"kind":"Field","alias":{"kind":"Name","value":"options"},"name":{"kind":"Name","value":"answerOptions"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"answerOptions_option_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"QuestionsBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_questionBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"questionEntries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"QuestionEntry"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"BarGraphToolBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_barGraphTool_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"yAxisMin"}},{"kind":"Field","name":{"kind":"Name","value":"yAxisMax"}},{"kind":"Field","name":{"kind":"Name","value":"yAxisLabel"}},{"kind":"Field","name":{"kind":"Name","value":"xAxisLabel"}},{"kind":"Field","name":{"kind":"Name","value":"graphBars"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"graphBars_bar_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"yValue"}},{"kind":"Field","name":{"kind":"Name","value":"label"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"FilterToolBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_filterTool_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"preSelectedColor"}},{"kind":"Field","name":{"kind":"Name","value":"readOnly"}},{"kind":"Field","name":{"kind":"Name","value":"widgetInstructions"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ReferenceBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_referenceBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"referenceEntries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"referenceContent_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"uri"}},{"kind":"Field","name":{"kind":"Name","value":"slug"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ColorFilterToolBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_colorFilterToolBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"colorFilterTool"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ColorFilterToolEntry"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"LightCurveQuestionData"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_supernovaDistanceDistribution_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"questionEntries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"questionWidgetsBlock"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionWidgetsBlock_lightCurveBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"lightCurveTool"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"widgets_lightCurveTool_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"dataset"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_supernovaGalaxyObservations_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"distance"}},{"kind":"Field","alias":{"kind":"Name","value":"lat"},"name":{"kind":"Name","value":"galacticLatitude"}},{"kind":"Field","alias":{"kind":"Name","value":"long"},"name":{"kind":"Name","value":"galacticLongitude"}}]}}]}}]}}]}}]}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"SupernovaDistanceDistributionBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_supernovaDistanceDistribution_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"instructions"},"name":{"kind":"Name","value":"widgetInstructions"}},{"kind":"Field","name":{"kind":"Name","value":"imageAlbum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"directUrlPreview"}},{"kind":"Field","name":{"kind":"Name","value":"directUrlOriginal"}}]}},{"kind":"Field","name":{"kind":"Name","value":"width"}},{"kind":"Field","name":{"kind":"Name","value":"height"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"json"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"step"},"name":{"kind":"Name","value":"binSize"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"LightCurveQuestionData"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"MagnitudeScatterPlotBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_magnitudeScatterPlot_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"lightCurveTool"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"widgets_lightCurveTool_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"dataset"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_supernovaGalaxyObservations_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","alias":{"kind":"Name","value":"peakMjd"},"name":{"kind":"Name","value":"mjd"}},{"kind":"Field","name":{"kind":"Name","value":"json"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"yMin"},"name":{"kind":"Name","value":"yAxisMin"}},{"kind":"Field","alias":{"kind":"Name","value":"yMax"},"name":{"kind":"Name","value":"yAxisMax"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"TwoColumnContainerBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_twoColumnContainer_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"columns"},"name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_colLeft_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"childblocks"},"name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TextBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ImageBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TableBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"VideoBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"QuestionsBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"BarGraphToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"FilterToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ReferenceBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ColorFilterToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SupernovaDistanceDistributionBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"MagnitudeScatterPlotBlock"}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_colRight_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"childblocks"},"name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TextBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ImageBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TableBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"VideoBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"QuestionsBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"BarGraphToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"FilterToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ReferenceBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ColorFilterToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SupernovaDistanceDistributionBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"MagnitudeScatterPlotBlock"}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"InteractionGroupContainerBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_group_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","alias":{"kind":"Name","value":"childBlocks"},"name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TextBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ImageBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"VideoBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TableBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"QuestionsBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"BarGraphToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"FilterToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ReferenceBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ColorFilterToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SupernovaDistanceDistributionBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"MagnitudeScatterPlotBlock"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"CameraFilterToolBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_cameraFilterTool_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"widgetInstructions"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"EquationBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_equation_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"latex"}}]}}]} as unknown as DocumentNode<ContentBlockFactoryFragment, unknown>;
export const PageTemplateFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"PageTemplate"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"pages_pages_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"contentBlocks"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ContentBlockFactory"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"TextBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_text_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ImageBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_image_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"caption"}},{"kind":"Field","name":{"kind":"Name","value":"layout"}},{"kind":"Field","name":{"kind":"Name","value":"image"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"directUrlPreview"}},{"kind":"Field","name":{"kind":"Name","value":"directUrlOriginal"}},{"kind":"Field","name":{"kind":"Name","value":"PNG"}},{"kind":"Field","name":{"kind":"Name","value":"HighJPG"}},{"kind":"Field","name":{"kind":"Name","value":"LowJPG"}},{"kind":"Field","name":{"kind":"Name","value":"preview"}}]}},{"kind":"Field","name":{"kind":"Name","value":"width"}},{"kind":"Field","name":{"kind":"Name","value":"height"}},{"kind":"Field","alias":{"kind":"Name","value":"metadata"},"name":{"kind":"Name","value":"additional"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"AltTextEN"}},{"kind":"Field","name":{"kind":"Name","value":"AltTextES"}},{"kind":"Field","name":{"kind":"Name","value":"CaptionEN"}},{"kind":"Field","name":{"kind":"Name","value":"CaptionES"}},{"kind":"Field","name":{"kind":"Name","value":"Credit"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"TableBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_table_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"caption"}},{"kind":"Field","name":{"kind":"Name","value":"contentHeading"}},{"kind":"Field","alias":{"kind":"Name","value":"header"},"name":{"kind":"Name","value":"tableHeader"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"headerRow"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"headerRow_tableCell_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"text"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}}]}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"rows"},"name":{"kind":"Name","value":"displayTable"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"displayTable_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"cells"},"name":{"kind":"Name","value":"tableRow"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableRow_tableCell_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"text"},"name":{"kind":"Name","value":"cellContent"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableRow_rowHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"text"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableRow_previousQuestion_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"question"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"answerType"}},{"kind":"Field","alias":{"kind":"Name","value":"rows"},"name":{"kind":"Name","value":"questionTable"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionTable_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"cells"},"name":{"kind":"Name","value":"tableCell"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_question_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"answerType"},"name":{"kind":"Name","value":"questionType"}},{"kind":"Field","name":{"kind":"Name","value":"options"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"options_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_static_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_rowHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"VideoBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_video_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"caption"}},{"kind":"Field","name":{"kind":"Name","value":"video"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"directUrlPreview"}},{"kind":"Field","name":{"kind":"Name","value":"directUrlPreviewPlay"}}]}},{"kind":"Field","name":{"kind":"Name","value":"width"}},{"kind":"Field","name":{"kind":"Name","value":"height"}},{"kind":"Field","alias":{"kind":"Name","value":"metadata"},"name":{"kind":"Name","value":"additional"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"CaptionEN"}},{"kind":"Field","name":{"kind":"Name","value":"CaptionES"}},{"kind":"Field","name":{"kind":"Name","value":"Credit"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"CalculatorQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"questionText"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"TableRows"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"header"},"name":{"kind":"Name","value":"tableHeader"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"headerRow"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"headerRow_tableCell_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"text"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}}]}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"rows"},"name":{"kind":"Name","value":"questionTable"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionTable_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"cells"},"name":{"kind":"Name","value":"tableCell"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_question_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"answerType"},"name":{"kind":"Name","value":"questionType"}},{"kind":"Field","name":{"kind":"Name","value":"options"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"options_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_static_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_rowHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_previousQuestion_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"question"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"answerType"}},{"kind":"Field","alias":{"kind":"Name","value":"rows"},"name":{"kind":"Name","value":"questionTable"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionTable_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"cells"},"name":{"kind":"Name","value":"tableCell"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_question_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"answerType"},"name":{"kind":"Name","value":"questionType"}},{"kind":"Field","name":{"kind":"Name","value":"options"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"options_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_static_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_rowHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"TabularQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"questionText"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TableRows"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ColorFilterToolEntry"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"widgets_colorFilterTool_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"filterToolActions"}},{"kind":"Field","alias":{"kind":"Name","value":"filterColorOptionsLabels"},"name":{"kind":"Name","value":"filterColorOptions"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"label"},"value":{"kind":"BooleanValue","value":true}}]},{"kind":"Field","alias":{"kind":"Name","value":"filterColorOptionsValues"},"name":{"kind":"Name","value":"filterColorOptions"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"label"},"value":{"kind":"BooleanValue","value":false}}]},{"kind":"Field","name":{"kind":"Name","value":"colorFilterToolObjects"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"colorFilterToolObjects_group_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"groupName"}},{"kind":"Field","alias":{"kind":"Name","value":"objects"},"name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"colorFilterToolObjects_object_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"name"},"name":{"kind":"Name","value":"objectName"}},{"kind":"Field","alias":{"kind":"Name","value":"caption"},"name":{"kind":"Name","value":"objectCaption"}},{"kind":"Field","alias":{"kind":"Name","value":"filterImages"},"name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"colorFilterToolObjects_filterimage_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"isEnabled"}},{"kind":"Field","name":{"kind":"Name","value":"isActive"}},{"kind":"Field","name":{"kind":"Name","value":"image"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"directUrlPreview"}}]}},{"kind":"Field","name":{"kind":"Name","value":"width"}},{"kind":"Field","name":{"kind":"Name","value":"height"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"max"},"name":{"kind":"Name","value":"colorToolMax"}},{"kind":"Field","alias":{"kind":"Name","value":"min"},"name":{"kind":"Name","value":"colorToolMin"}},{"kind":"Field","alias":{"kind":"Name","value":"defaultValue"},"name":{"kind":"Name","value":"colorToolDefaultValue"}},{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"filter"}},{"kind":"Field","alias":{"kind":"Name","value":"color"},"name":{"kind":"Name","value":"preSelectedColor"}}]}}]}}]}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ColorFilterToolQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionWidgetsBlock_colorFilterToolBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"colorFilterTool"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ColorFilterToolEntry"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"SourceSelectorQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionWidgetsBlock_sourceSelectorBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"sourceSelector"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"widgets_sourceSelector_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"includeScatterPlot"}},{"kind":"Field","alias":{"kind":"Name","value":"yMin"},"name":{"kind":"Name","value":"yAxisMin"}},{"kind":"Field","alias":{"kind":"Name","value":"yMax"},"name":{"kind":"Name","value":"yAxisMax"}},{"kind":"Field","name":{"kind":"Name","value":"dataset"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_supernovaGalaxyObservations_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"peakMjd"},"name":{"kind":"Name","value":"mjd"}},{"kind":"Field","alias":{"kind":"Name","value":"sources"},"name":{"kind":"Name","value":"alertSources"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"alertSources_source_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"color"}},{"kind":"Field","alias":{"kind":"Name","value":"x"},"name":{"kind":"Name","value":"xCoord"}},{"kind":"Field","alias":{"kind":"Name","value":"y"},"name":{"kind":"Name","value":"yCoord"}},{"kind":"Field","name":{"kind":"Name","value":"radius"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"sourceType"}},{"kind":"Field","alias":{"kind":"Name","value":"id"},"name":{"kind":"Name","value":"sourceName"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"json"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"imageAlbum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"directUrlPreview"}}]}}]}}]}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"LightCurveQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionWidgetsBlock_lightCurveBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"lightCurveTool"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"widgets_lightCurveTool_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"dataset"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_supernovaGalaxyObservations_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"peakMjd"},"name":{"kind":"Name","value":"mjd"}},{"kind":"Field","name":{"kind":"Name","value":"json"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"yMin"},"name":{"kind":"Name","value":"yAxisMin"}},{"kind":"Field","alias":{"kind":"Name","value":"yMax"},"name":{"kind":"Name","value":"yAxisMax"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"IsochronePlotQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionWidgetsBlock_isochronePlot_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"dataset"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_starCluster_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","alias":{"kind":"Name","value":"ageLibrary"},"name":{"kind":"Name","value":"json"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"plotPoints"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"yMin"},"name":{"kind":"Name","value":"yAxisMin"}},{"kind":"Field","alias":{"kind":"Name","value":"yMax"},"name":{"kind":"Name","value":"yAxisMax"}},{"kind":"Field","alias":{"kind":"Name","value":"xMin"},"name":{"kind":"Name","value":"xAxisMin"}},{"kind":"Field","alias":{"kind":"Name","value":"xMax"},"name":{"kind":"Name","value":"xAxisMax"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"WidgetQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"instructions"},"name":{"kind":"Name","value":"widgetInstructions"}},{"kind":"Field","name":{"kind":"Name","value":"questionWidgetsBlock"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ColorFilterToolQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SourceSelectorQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"LightCurveQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"IsochronePlotQuestion"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"NumberQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"questionText"}},{"kind":"Field","name":{"kind":"Name","value":"minimum"}},{"kind":"Field","name":{"kind":"Name","value":"maximum"}},{"kind":"Field","name":{"kind":"Name","value":"precision"}},{"kind":"Field","name":{"kind":"Name","value":"validation"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"validation_numberValidator_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"SelectPart"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"multiPartBlocks_select_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}},{"kind":"Field","alias":{"kind":"Name","value":"options"},"name":{"kind":"Name","value":"answerOptions"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"answerOptions_option_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"MultiselectPart"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"multiPartBlocks_multiselect_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}},{"kind":"Field","alias":{"kind":"Name","value":"options"},"name":{"kind":"Name","value":"answerOptions"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"answerOptions_option_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"NumberPart"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"multiPartBlocks_number_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}},{"kind":"Field","name":{"kind":"Name","value":"minimum"}},{"kind":"Field","name":{"kind":"Name","value":"maximum"}},{"kind":"Field","name":{"kind":"Name","value":"precision"}},{"kind":"Field","name":{"kind":"Name","value":"validation"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"validation_numberValidator_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ReadOnlyPart"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"multiPartBlocks_readonlyText_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}},{"kind":"Field","alias":{"kind":"Name","value":"text"},"name":{"kind":"Name","value":"questionText"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"MultipartQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"answerType"}},{"kind":"Field","alias":{"kind":"Name","value":"parts"},"name":{"kind":"Name","value":"multiPartBlocks"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"NeoBlockInterface"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SelectPart"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"MultiselectPart"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"NumberPart"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ReadOnlyPart"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"QuestionEntry"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"answerType"}},{"kind":"Field","name":{"kind":"Name","value":"questionText"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"CalculatorQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TabularQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"WidgetQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"NumberQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"MultipartQuestion"}},{"kind":"Field","alias":{"kind":"Name","value":"options"},"name":{"kind":"Name","value":"answerOptions"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"answerOptions_option_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"QuestionsBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_questionBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"questionEntries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"QuestionEntry"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"BarGraphToolBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_barGraphTool_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"yAxisMin"}},{"kind":"Field","name":{"kind":"Name","value":"yAxisMax"}},{"kind":"Field","name":{"kind":"Name","value":"yAxisLabel"}},{"kind":"Field","name":{"kind":"Name","value":"xAxisLabel"}},{"kind":"Field","name":{"kind":"Name","value":"graphBars"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"graphBars_bar_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"yValue"}},{"kind":"Field","name":{"kind":"Name","value":"label"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"FilterToolBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_filterTool_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"preSelectedColor"}},{"kind":"Field","name":{"kind":"Name","value":"readOnly"}},{"kind":"Field","name":{"kind":"Name","value":"widgetInstructions"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ReferenceBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_referenceBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"referenceEntries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"referenceContent_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"uri"}},{"kind":"Field","name":{"kind":"Name","value":"slug"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ColorFilterToolBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_colorFilterToolBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"colorFilterTool"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ColorFilterToolEntry"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"LightCurveQuestionData"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_supernovaDistanceDistribution_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"questionEntries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"questionWidgetsBlock"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionWidgetsBlock_lightCurveBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"lightCurveTool"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"widgets_lightCurveTool_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"dataset"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_supernovaGalaxyObservations_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"distance"}},{"kind":"Field","alias":{"kind":"Name","value":"lat"},"name":{"kind":"Name","value":"galacticLatitude"}},{"kind":"Field","alias":{"kind":"Name","value":"long"},"name":{"kind":"Name","value":"galacticLongitude"}}]}}]}}]}}]}}]}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"SupernovaDistanceDistributionBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_supernovaDistanceDistribution_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"instructions"},"name":{"kind":"Name","value":"widgetInstructions"}},{"kind":"Field","name":{"kind":"Name","value":"imageAlbum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"directUrlPreview"}},{"kind":"Field","name":{"kind":"Name","value":"directUrlOriginal"}}]}},{"kind":"Field","name":{"kind":"Name","value":"width"}},{"kind":"Field","name":{"kind":"Name","value":"height"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"json"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"step"},"name":{"kind":"Name","value":"binSize"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"LightCurveQuestionData"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"MagnitudeScatterPlotBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_magnitudeScatterPlot_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"lightCurveTool"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"widgets_lightCurveTool_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"dataset"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_supernovaGalaxyObservations_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","alias":{"kind":"Name","value":"peakMjd"},"name":{"kind":"Name","value":"mjd"}},{"kind":"Field","name":{"kind":"Name","value":"json"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"yMin"},"name":{"kind":"Name","value":"yAxisMin"}},{"kind":"Field","alias":{"kind":"Name","value":"yMax"},"name":{"kind":"Name","value":"yAxisMax"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"TwoColumnContainerBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_twoColumnContainer_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"columns"},"name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_colLeft_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"childblocks"},"name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TextBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ImageBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TableBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"VideoBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"QuestionsBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"BarGraphToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"FilterToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ReferenceBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ColorFilterToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SupernovaDistanceDistributionBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"MagnitudeScatterPlotBlock"}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_colRight_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"childblocks"},"name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TextBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ImageBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TableBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"VideoBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"QuestionsBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"BarGraphToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"FilterToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ReferenceBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ColorFilterToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SupernovaDistanceDistributionBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"MagnitudeScatterPlotBlock"}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"InteractionGroupContainerBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_group_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","alias":{"kind":"Name","value":"childBlocks"},"name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TextBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ImageBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"VideoBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TableBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"QuestionsBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"BarGraphToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"FilterToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ReferenceBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ColorFilterToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SupernovaDistanceDistributionBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"MagnitudeScatterPlotBlock"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"CameraFilterToolBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_cameraFilterTool_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"widgetInstructions"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"EquationBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_equation_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"latex"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ContentBlockFactory"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_NeoField"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TwoColumnContainerBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"InteractionGroupContainerBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TextBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ImageBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"VideoBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TableBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"QuestionsBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"BarGraphToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"FilterToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ReferenceBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ColorFilterToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"CameraFilterToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"EquationBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SupernovaDistanceDistributionBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"MagnitudeScatterPlotBlock"}}]}}]} as unknown as DocumentNode<PageTemplateFragment, unknown>;
export const TemplateFactoryFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"TemplateFactory"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"EntryInterface"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PageTemplate"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"TextBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_text_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ImageBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_image_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"caption"}},{"kind":"Field","name":{"kind":"Name","value":"layout"}},{"kind":"Field","name":{"kind":"Name","value":"image"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"directUrlPreview"}},{"kind":"Field","name":{"kind":"Name","value":"directUrlOriginal"}},{"kind":"Field","name":{"kind":"Name","value":"PNG"}},{"kind":"Field","name":{"kind":"Name","value":"HighJPG"}},{"kind":"Field","name":{"kind":"Name","value":"LowJPG"}},{"kind":"Field","name":{"kind":"Name","value":"preview"}}]}},{"kind":"Field","name":{"kind":"Name","value":"width"}},{"kind":"Field","name":{"kind":"Name","value":"height"}},{"kind":"Field","alias":{"kind":"Name","value":"metadata"},"name":{"kind":"Name","value":"additional"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"AltTextEN"}},{"kind":"Field","name":{"kind":"Name","value":"AltTextES"}},{"kind":"Field","name":{"kind":"Name","value":"CaptionEN"}},{"kind":"Field","name":{"kind":"Name","value":"CaptionES"}},{"kind":"Field","name":{"kind":"Name","value":"Credit"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"TableBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_table_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"caption"}},{"kind":"Field","name":{"kind":"Name","value":"contentHeading"}},{"kind":"Field","alias":{"kind":"Name","value":"header"},"name":{"kind":"Name","value":"tableHeader"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"headerRow"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"headerRow_tableCell_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"text"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}}]}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"rows"},"name":{"kind":"Name","value":"displayTable"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"displayTable_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"cells"},"name":{"kind":"Name","value":"tableRow"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableRow_tableCell_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"text"},"name":{"kind":"Name","value":"cellContent"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableRow_rowHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"text"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableRow_previousQuestion_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"question"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"answerType"}},{"kind":"Field","alias":{"kind":"Name","value":"rows"},"name":{"kind":"Name","value":"questionTable"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionTable_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"cells"},"name":{"kind":"Name","value":"tableCell"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_question_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"answerType"},"name":{"kind":"Name","value":"questionType"}},{"kind":"Field","name":{"kind":"Name","value":"options"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"options_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_static_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_rowHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"VideoBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_video_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"caption"}},{"kind":"Field","name":{"kind":"Name","value":"video"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"directUrlPreview"}},{"kind":"Field","name":{"kind":"Name","value":"directUrlPreviewPlay"}}]}},{"kind":"Field","name":{"kind":"Name","value":"width"}},{"kind":"Field","name":{"kind":"Name","value":"height"}},{"kind":"Field","alias":{"kind":"Name","value":"metadata"},"name":{"kind":"Name","value":"additional"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"CaptionEN"}},{"kind":"Field","name":{"kind":"Name","value":"CaptionES"}},{"kind":"Field","name":{"kind":"Name","value":"Credit"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"CalculatorQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"questionText"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"TableRows"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"header"},"name":{"kind":"Name","value":"tableHeader"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"headerRow"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"headerRow_tableCell_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"text"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}}]}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"rows"},"name":{"kind":"Name","value":"questionTable"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionTable_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"cells"},"name":{"kind":"Name","value":"tableCell"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_question_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"answerType"},"name":{"kind":"Name","value":"questionType"}},{"kind":"Field","name":{"kind":"Name","value":"options"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"options_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_static_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_rowHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_previousQuestion_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"question"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"answerType"}},{"kind":"Field","alias":{"kind":"Name","value":"rows"},"name":{"kind":"Name","value":"questionTable"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionTable_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"cells"},"name":{"kind":"Name","value":"tableCell"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_question_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"answerType"},"name":{"kind":"Name","value":"questionType"}},{"kind":"Field","name":{"kind":"Name","value":"options"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"options_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_static_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_rowHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"TabularQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"questionText"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TableRows"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ColorFilterToolEntry"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"widgets_colorFilterTool_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"filterToolActions"}},{"kind":"Field","alias":{"kind":"Name","value":"filterColorOptionsLabels"},"name":{"kind":"Name","value":"filterColorOptions"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"label"},"value":{"kind":"BooleanValue","value":true}}]},{"kind":"Field","alias":{"kind":"Name","value":"filterColorOptionsValues"},"name":{"kind":"Name","value":"filterColorOptions"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"label"},"value":{"kind":"BooleanValue","value":false}}]},{"kind":"Field","name":{"kind":"Name","value":"colorFilterToolObjects"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"colorFilterToolObjects_group_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"groupName"}},{"kind":"Field","alias":{"kind":"Name","value":"objects"},"name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"colorFilterToolObjects_object_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"name"},"name":{"kind":"Name","value":"objectName"}},{"kind":"Field","alias":{"kind":"Name","value":"caption"},"name":{"kind":"Name","value":"objectCaption"}},{"kind":"Field","alias":{"kind":"Name","value":"filterImages"},"name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"colorFilterToolObjects_filterimage_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"isEnabled"}},{"kind":"Field","name":{"kind":"Name","value":"isActive"}},{"kind":"Field","name":{"kind":"Name","value":"image"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"directUrlPreview"}}]}},{"kind":"Field","name":{"kind":"Name","value":"width"}},{"kind":"Field","name":{"kind":"Name","value":"height"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"max"},"name":{"kind":"Name","value":"colorToolMax"}},{"kind":"Field","alias":{"kind":"Name","value":"min"},"name":{"kind":"Name","value":"colorToolMin"}},{"kind":"Field","alias":{"kind":"Name","value":"defaultValue"},"name":{"kind":"Name","value":"colorToolDefaultValue"}},{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"filter"}},{"kind":"Field","alias":{"kind":"Name","value":"color"},"name":{"kind":"Name","value":"preSelectedColor"}}]}}]}}]}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ColorFilterToolQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionWidgetsBlock_colorFilterToolBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"colorFilterTool"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ColorFilterToolEntry"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"SourceSelectorQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionWidgetsBlock_sourceSelectorBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"sourceSelector"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"widgets_sourceSelector_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"includeScatterPlot"}},{"kind":"Field","alias":{"kind":"Name","value":"yMin"},"name":{"kind":"Name","value":"yAxisMin"}},{"kind":"Field","alias":{"kind":"Name","value":"yMax"},"name":{"kind":"Name","value":"yAxisMax"}},{"kind":"Field","name":{"kind":"Name","value":"dataset"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_supernovaGalaxyObservations_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"peakMjd"},"name":{"kind":"Name","value":"mjd"}},{"kind":"Field","alias":{"kind":"Name","value":"sources"},"name":{"kind":"Name","value":"alertSources"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"alertSources_source_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"color"}},{"kind":"Field","alias":{"kind":"Name","value":"x"},"name":{"kind":"Name","value":"xCoord"}},{"kind":"Field","alias":{"kind":"Name","value":"y"},"name":{"kind":"Name","value":"yCoord"}},{"kind":"Field","name":{"kind":"Name","value":"radius"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"sourceType"}},{"kind":"Field","alias":{"kind":"Name","value":"id"},"name":{"kind":"Name","value":"sourceName"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"json"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"imageAlbum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"directUrlPreview"}}]}}]}}]}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"LightCurveQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionWidgetsBlock_lightCurveBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"lightCurveTool"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"widgets_lightCurveTool_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"dataset"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_supernovaGalaxyObservations_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"peakMjd"},"name":{"kind":"Name","value":"mjd"}},{"kind":"Field","name":{"kind":"Name","value":"json"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"yMin"},"name":{"kind":"Name","value":"yAxisMin"}},{"kind":"Field","alias":{"kind":"Name","value":"yMax"},"name":{"kind":"Name","value":"yAxisMax"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"IsochronePlotQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionWidgetsBlock_isochronePlot_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"dataset"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_starCluster_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","alias":{"kind":"Name","value":"ageLibrary"},"name":{"kind":"Name","value":"json"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"plotPoints"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"yMin"},"name":{"kind":"Name","value":"yAxisMin"}},{"kind":"Field","alias":{"kind":"Name","value":"yMax"},"name":{"kind":"Name","value":"yAxisMax"}},{"kind":"Field","alias":{"kind":"Name","value":"xMin"},"name":{"kind":"Name","value":"xAxisMin"}},{"kind":"Field","alias":{"kind":"Name","value":"xMax"},"name":{"kind":"Name","value":"xAxisMax"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"WidgetQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"instructions"},"name":{"kind":"Name","value":"widgetInstructions"}},{"kind":"Field","name":{"kind":"Name","value":"questionWidgetsBlock"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ColorFilterToolQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SourceSelectorQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"LightCurveQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"IsochronePlotQuestion"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"NumberQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"questionText"}},{"kind":"Field","name":{"kind":"Name","value":"minimum"}},{"kind":"Field","name":{"kind":"Name","value":"maximum"}},{"kind":"Field","name":{"kind":"Name","value":"precision"}},{"kind":"Field","name":{"kind":"Name","value":"validation"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"validation_numberValidator_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"SelectPart"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"multiPartBlocks_select_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}},{"kind":"Field","alias":{"kind":"Name","value":"options"},"name":{"kind":"Name","value":"answerOptions"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"answerOptions_option_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"MultiselectPart"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"multiPartBlocks_multiselect_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}},{"kind":"Field","alias":{"kind":"Name","value":"options"},"name":{"kind":"Name","value":"answerOptions"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"answerOptions_option_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"NumberPart"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"multiPartBlocks_number_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}},{"kind":"Field","name":{"kind":"Name","value":"minimum"}},{"kind":"Field","name":{"kind":"Name","value":"maximum"}},{"kind":"Field","name":{"kind":"Name","value":"precision"}},{"kind":"Field","name":{"kind":"Name","value":"validation"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"validation_numberValidator_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ReadOnlyPart"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"multiPartBlocks_readonlyText_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}},{"kind":"Field","alias":{"kind":"Name","value":"text"},"name":{"kind":"Name","value":"questionText"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"MultipartQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"answerType"}},{"kind":"Field","alias":{"kind":"Name","value":"parts"},"name":{"kind":"Name","value":"multiPartBlocks"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"NeoBlockInterface"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SelectPart"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"MultiselectPart"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"NumberPart"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ReadOnlyPart"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"QuestionEntry"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"answerType"}},{"kind":"Field","name":{"kind":"Name","value":"questionText"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"CalculatorQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TabularQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"WidgetQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"NumberQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"MultipartQuestion"}},{"kind":"Field","alias":{"kind":"Name","value":"options"},"name":{"kind":"Name","value":"answerOptions"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"answerOptions_option_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"QuestionsBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_questionBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"questionEntries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"QuestionEntry"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"BarGraphToolBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_barGraphTool_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"yAxisMin"}},{"kind":"Field","name":{"kind":"Name","value":"yAxisMax"}},{"kind":"Field","name":{"kind":"Name","value":"yAxisLabel"}},{"kind":"Field","name":{"kind":"Name","value":"xAxisLabel"}},{"kind":"Field","name":{"kind":"Name","value":"graphBars"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"graphBars_bar_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"yValue"}},{"kind":"Field","name":{"kind":"Name","value":"label"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"FilterToolBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_filterTool_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"preSelectedColor"}},{"kind":"Field","name":{"kind":"Name","value":"readOnly"}},{"kind":"Field","name":{"kind":"Name","value":"widgetInstructions"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ReferenceBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_referenceBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"referenceEntries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"referenceContent_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"uri"}},{"kind":"Field","name":{"kind":"Name","value":"slug"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ColorFilterToolBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_colorFilterToolBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"colorFilterTool"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ColorFilterToolEntry"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"LightCurveQuestionData"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_supernovaDistanceDistribution_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"questionEntries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"questionWidgetsBlock"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionWidgetsBlock_lightCurveBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"lightCurveTool"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"widgets_lightCurveTool_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"dataset"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_supernovaGalaxyObservations_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"distance"}},{"kind":"Field","alias":{"kind":"Name","value":"lat"},"name":{"kind":"Name","value":"galacticLatitude"}},{"kind":"Field","alias":{"kind":"Name","value":"long"},"name":{"kind":"Name","value":"galacticLongitude"}}]}}]}}]}}]}}]}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"SupernovaDistanceDistributionBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_supernovaDistanceDistribution_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"instructions"},"name":{"kind":"Name","value":"widgetInstructions"}},{"kind":"Field","name":{"kind":"Name","value":"imageAlbum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"directUrlPreview"}},{"kind":"Field","name":{"kind":"Name","value":"directUrlOriginal"}}]}},{"kind":"Field","name":{"kind":"Name","value":"width"}},{"kind":"Field","name":{"kind":"Name","value":"height"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"json"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"step"},"name":{"kind":"Name","value":"binSize"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"LightCurveQuestionData"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"MagnitudeScatterPlotBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_magnitudeScatterPlot_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"lightCurveTool"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"widgets_lightCurveTool_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"dataset"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_supernovaGalaxyObservations_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","alias":{"kind":"Name","value":"peakMjd"},"name":{"kind":"Name","value":"mjd"}},{"kind":"Field","name":{"kind":"Name","value":"json"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"yMin"},"name":{"kind":"Name","value":"yAxisMin"}},{"kind":"Field","alias":{"kind":"Name","value":"yMax"},"name":{"kind":"Name","value":"yAxisMax"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"TwoColumnContainerBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_twoColumnContainer_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"columns"},"name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_colLeft_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"childblocks"},"name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TextBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ImageBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TableBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"VideoBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"QuestionsBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"BarGraphToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"FilterToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ReferenceBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ColorFilterToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SupernovaDistanceDistributionBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"MagnitudeScatterPlotBlock"}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_colRight_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"childblocks"},"name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TextBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ImageBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TableBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"VideoBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"QuestionsBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"BarGraphToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"FilterToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ReferenceBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ColorFilterToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SupernovaDistanceDistributionBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"MagnitudeScatterPlotBlock"}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"InteractionGroupContainerBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_group_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","alias":{"kind":"Name","value":"childBlocks"},"name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TextBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ImageBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"VideoBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TableBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"QuestionsBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"BarGraphToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"FilterToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ReferenceBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ColorFilterToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SupernovaDistanceDistributionBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"MagnitudeScatterPlotBlock"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"CameraFilterToolBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_cameraFilterTool_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"widgetInstructions"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"EquationBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_equation_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"latex"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ContentBlockFactory"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_NeoField"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TwoColumnContainerBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"InteractionGroupContainerBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TextBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ImageBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"VideoBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TableBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"QuestionsBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"BarGraphToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"FilterToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ReferenceBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ColorFilterToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"CameraFilterToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"EquationBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SupernovaDistanceDistributionBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"MagnitudeScatterPlotBlock"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"PageTemplate"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"pages_pages_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"contentBlocks"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ContentBlockFactory"}}]}}]}}]} as unknown as DocumentNode<TemplateFactoryFragment, unknown>;
export const InvestigationGridBlockFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"InvestigationGridBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"homepageContentBlocks_investigationGrid_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"heading"},"name":{"kind":"Name","value":"contentHeading"}},{"kind":"Field","alias":{"kind":"Name","value":"investigations"},"name":{"kind":"Name","value":"investigationEntries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"investigations_investigationParent_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","alias":{"kind":"Name","value":"rawImage"},"name":{"kind":"Name","value":"image"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"directUrlPreview"}},{"kind":"Field","name":{"kind":"Name","value":"directUrlOriginal"}},{"kind":"Field","name":{"kind":"Name","value":"PNG"}},{"kind":"Field","name":{"kind":"Name","value":"HighJPG"}},{"kind":"Field","name":{"kind":"Name","value":"LowJPG"}}]}},{"kind":"Field","name":{"kind":"Name","value":"width"}},{"kind":"Field","name":{"kind":"Name","value":"height"}},{"kind":"Field","alias":{"kind":"Name","value":"metadata"},"name":{"kind":"Name","value":"additional"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"AltTextEN"}},{"kind":"Field","name":{"kind":"Name","value":"AltTextES"}},{"kind":"Field","name":{"kind":"Name","value":"CaptionEN"}},{"kind":"Field","name":{"kind":"Name","value":"CaptionES"}},{"kind":"Field","name":{"kind":"Name","value":"Credit"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}}]}}]} as unknown as DocumentNode<InvestigationGridBlockFragment, unknown>;
export const HomepageTemplateFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"HomepageTemplate"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"homepage_homepage_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","alias":{"kind":"Name","value":"contentBlocks"},"name":{"kind":"Name","value":"homepageContentBlocks"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"homepageContentBlocks_text_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"homepageContentBlocks_image_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"caption"}},{"kind":"Field","name":{"kind":"Name","value":"layout"}},{"kind":"Field","name":{"kind":"Name","value":"image"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"directUrlPreview"}},{"kind":"Field","name":{"kind":"Name","value":"directUrlOriginal"}},{"kind":"Field","name":{"kind":"Name","value":"PNG"}},{"kind":"Field","name":{"kind":"Name","value":"HighJPG"}},{"kind":"Field","name":{"kind":"Name","value":"LowJPG"}},{"kind":"Field","name":{"kind":"Name","value":"preview"}}]}},{"kind":"Field","name":{"kind":"Name","value":"width"}},{"kind":"Field","name":{"kind":"Name","value":"height"}},{"kind":"Field","alias":{"kind":"Name","value":"metadata"},"name":{"kind":"Name","value":"additional"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"AltTextEN"}},{"kind":"Field","name":{"kind":"Name","value":"AltTextES"}},{"kind":"Field","name":{"kind":"Name","value":"CaptionEN"}},{"kind":"Field","name":{"kind":"Name","value":"CaptionES"}},{"kind":"Field","name":{"kind":"Name","value":"Credit"}}]}}]}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"InvestigationGridBlock"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"InvestigationGridBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"homepageContentBlocks_investigationGrid_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"heading"},"name":{"kind":"Name","value":"contentHeading"}},{"kind":"Field","alias":{"kind":"Name","value":"investigations"},"name":{"kind":"Name","value":"investigationEntries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"investigations_investigationParent_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","alias":{"kind":"Name","value":"rawImage"},"name":{"kind":"Name","value":"image"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"directUrlPreview"}},{"kind":"Field","name":{"kind":"Name","value":"directUrlOriginal"}},{"kind":"Field","name":{"kind":"Name","value":"PNG"}},{"kind":"Field","name":{"kind":"Name","value":"HighJPG"}},{"kind":"Field","name":{"kind":"Name","value":"LowJPG"}}]}},{"kind":"Field","name":{"kind":"Name","value":"width"}},{"kind":"Field","name":{"kind":"Name","value":"height"}},{"kind":"Field","alias":{"kind":"Name","value":"metadata"},"name":{"kind":"Name","value":"additional"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"AltTextEN"}},{"kind":"Field","name":{"kind":"Name","value":"AltTextES"}},{"kind":"Field","name":{"kind":"Name","value":"CaptionEN"}},{"kind":"Field","name":{"kind":"Name","value":"CaptionES"}},{"kind":"Field","name":{"kind":"Name","value":"Credit"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}}]}}]} as unknown as DocumentNode<HomepageTemplateFragment, unknown>;
export const InvestigationChildPageTemplateFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"InvestigationChildPageTemplate"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"investigations_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"contentBlocks"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ContentBlockFactory"}}]}},{"kind":"Field","name":{"kind":"Name","value":"hasSavePoint"}},{"kind":"Field","name":{"kind":"Name","value":"parent"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"TextBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_text_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ImageBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_image_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"caption"}},{"kind":"Field","name":{"kind":"Name","value":"layout"}},{"kind":"Field","name":{"kind":"Name","value":"image"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"directUrlPreview"}},{"kind":"Field","name":{"kind":"Name","value":"directUrlOriginal"}},{"kind":"Field","name":{"kind":"Name","value":"PNG"}},{"kind":"Field","name":{"kind":"Name","value":"HighJPG"}},{"kind":"Field","name":{"kind":"Name","value":"LowJPG"}},{"kind":"Field","name":{"kind":"Name","value":"preview"}}]}},{"kind":"Field","name":{"kind":"Name","value":"width"}},{"kind":"Field","name":{"kind":"Name","value":"height"}},{"kind":"Field","alias":{"kind":"Name","value":"metadata"},"name":{"kind":"Name","value":"additional"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"AltTextEN"}},{"kind":"Field","name":{"kind":"Name","value":"AltTextES"}},{"kind":"Field","name":{"kind":"Name","value":"CaptionEN"}},{"kind":"Field","name":{"kind":"Name","value":"CaptionES"}},{"kind":"Field","name":{"kind":"Name","value":"Credit"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"TableBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_table_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"caption"}},{"kind":"Field","name":{"kind":"Name","value":"contentHeading"}},{"kind":"Field","alias":{"kind":"Name","value":"header"},"name":{"kind":"Name","value":"tableHeader"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"headerRow"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"headerRow_tableCell_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"text"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}}]}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"rows"},"name":{"kind":"Name","value":"displayTable"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"displayTable_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"cells"},"name":{"kind":"Name","value":"tableRow"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableRow_tableCell_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"text"},"name":{"kind":"Name","value":"cellContent"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableRow_rowHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"text"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableRow_previousQuestion_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"question"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"answerType"}},{"kind":"Field","alias":{"kind":"Name","value":"rows"},"name":{"kind":"Name","value":"questionTable"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionTable_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"cells"},"name":{"kind":"Name","value":"tableCell"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_question_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"answerType"},"name":{"kind":"Name","value":"questionType"}},{"kind":"Field","name":{"kind":"Name","value":"options"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"options_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_static_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_rowHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"VideoBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_video_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"caption"}},{"kind":"Field","name":{"kind":"Name","value":"video"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"directUrlPreview"}},{"kind":"Field","name":{"kind":"Name","value":"directUrlPreviewPlay"}}]}},{"kind":"Field","name":{"kind":"Name","value":"width"}},{"kind":"Field","name":{"kind":"Name","value":"height"}},{"kind":"Field","alias":{"kind":"Name","value":"metadata"},"name":{"kind":"Name","value":"additional"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"CaptionEN"}},{"kind":"Field","name":{"kind":"Name","value":"CaptionES"}},{"kind":"Field","name":{"kind":"Name","value":"Credit"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"CalculatorQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"questionText"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"TableRows"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"header"},"name":{"kind":"Name","value":"tableHeader"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"headerRow"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"headerRow_tableCell_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"text"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}}]}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"rows"},"name":{"kind":"Name","value":"questionTable"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionTable_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"cells"},"name":{"kind":"Name","value":"tableCell"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_question_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"answerType"},"name":{"kind":"Name","value":"questionType"}},{"kind":"Field","name":{"kind":"Name","value":"options"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"options_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_static_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_rowHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_previousQuestion_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"question"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"answerType"}},{"kind":"Field","alias":{"kind":"Name","value":"rows"},"name":{"kind":"Name","value":"questionTable"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionTable_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"cells"},"name":{"kind":"Name","value":"tableCell"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_question_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"answerType"},"name":{"kind":"Name","value":"questionType"}},{"kind":"Field","name":{"kind":"Name","value":"options"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"options_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_static_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_rowHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"TabularQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"questionText"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TableRows"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ColorFilterToolEntry"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"widgets_colorFilterTool_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"filterToolActions"}},{"kind":"Field","alias":{"kind":"Name","value":"filterColorOptionsLabels"},"name":{"kind":"Name","value":"filterColorOptions"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"label"},"value":{"kind":"BooleanValue","value":true}}]},{"kind":"Field","alias":{"kind":"Name","value":"filterColorOptionsValues"},"name":{"kind":"Name","value":"filterColorOptions"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"label"},"value":{"kind":"BooleanValue","value":false}}]},{"kind":"Field","name":{"kind":"Name","value":"colorFilterToolObjects"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"colorFilterToolObjects_group_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"groupName"}},{"kind":"Field","alias":{"kind":"Name","value":"objects"},"name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"colorFilterToolObjects_object_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"name"},"name":{"kind":"Name","value":"objectName"}},{"kind":"Field","alias":{"kind":"Name","value":"caption"},"name":{"kind":"Name","value":"objectCaption"}},{"kind":"Field","alias":{"kind":"Name","value":"filterImages"},"name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"colorFilterToolObjects_filterimage_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"isEnabled"}},{"kind":"Field","name":{"kind":"Name","value":"isActive"}},{"kind":"Field","name":{"kind":"Name","value":"image"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"directUrlPreview"}}]}},{"kind":"Field","name":{"kind":"Name","value":"width"}},{"kind":"Field","name":{"kind":"Name","value":"height"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"max"},"name":{"kind":"Name","value":"colorToolMax"}},{"kind":"Field","alias":{"kind":"Name","value":"min"},"name":{"kind":"Name","value":"colorToolMin"}},{"kind":"Field","alias":{"kind":"Name","value":"defaultValue"},"name":{"kind":"Name","value":"colorToolDefaultValue"}},{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"filter"}},{"kind":"Field","alias":{"kind":"Name","value":"color"},"name":{"kind":"Name","value":"preSelectedColor"}}]}}]}}]}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ColorFilterToolQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionWidgetsBlock_colorFilterToolBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"colorFilterTool"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ColorFilterToolEntry"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"SourceSelectorQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionWidgetsBlock_sourceSelectorBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"sourceSelector"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"widgets_sourceSelector_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"includeScatterPlot"}},{"kind":"Field","alias":{"kind":"Name","value":"yMin"},"name":{"kind":"Name","value":"yAxisMin"}},{"kind":"Field","alias":{"kind":"Name","value":"yMax"},"name":{"kind":"Name","value":"yAxisMax"}},{"kind":"Field","name":{"kind":"Name","value":"dataset"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_supernovaGalaxyObservations_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"peakMjd"},"name":{"kind":"Name","value":"mjd"}},{"kind":"Field","alias":{"kind":"Name","value":"sources"},"name":{"kind":"Name","value":"alertSources"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"alertSources_source_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"color"}},{"kind":"Field","alias":{"kind":"Name","value":"x"},"name":{"kind":"Name","value":"xCoord"}},{"kind":"Field","alias":{"kind":"Name","value":"y"},"name":{"kind":"Name","value":"yCoord"}},{"kind":"Field","name":{"kind":"Name","value":"radius"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"sourceType"}},{"kind":"Field","alias":{"kind":"Name","value":"id"},"name":{"kind":"Name","value":"sourceName"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"json"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"imageAlbum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"directUrlPreview"}}]}}]}}]}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"LightCurveQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionWidgetsBlock_lightCurveBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"lightCurveTool"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"widgets_lightCurveTool_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"dataset"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_supernovaGalaxyObservations_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"peakMjd"},"name":{"kind":"Name","value":"mjd"}},{"kind":"Field","name":{"kind":"Name","value":"json"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"yMin"},"name":{"kind":"Name","value":"yAxisMin"}},{"kind":"Field","alias":{"kind":"Name","value":"yMax"},"name":{"kind":"Name","value":"yAxisMax"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"IsochronePlotQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionWidgetsBlock_isochronePlot_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"dataset"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_starCluster_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","alias":{"kind":"Name","value":"ageLibrary"},"name":{"kind":"Name","value":"json"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"plotPoints"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"yMin"},"name":{"kind":"Name","value":"yAxisMin"}},{"kind":"Field","alias":{"kind":"Name","value":"yMax"},"name":{"kind":"Name","value":"yAxisMax"}},{"kind":"Field","alias":{"kind":"Name","value":"xMin"},"name":{"kind":"Name","value":"xAxisMin"}},{"kind":"Field","alias":{"kind":"Name","value":"xMax"},"name":{"kind":"Name","value":"xAxisMax"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"WidgetQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"instructions"},"name":{"kind":"Name","value":"widgetInstructions"}},{"kind":"Field","name":{"kind":"Name","value":"questionWidgetsBlock"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ColorFilterToolQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SourceSelectorQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"LightCurveQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"IsochronePlotQuestion"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"NumberQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"questionText"}},{"kind":"Field","name":{"kind":"Name","value":"minimum"}},{"kind":"Field","name":{"kind":"Name","value":"maximum"}},{"kind":"Field","name":{"kind":"Name","value":"precision"}},{"kind":"Field","name":{"kind":"Name","value":"validation"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"validation_numberValidator_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"SelectPart"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"multiPartBlocks_select_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}},{"kind":"Field","alias":{"kind":"Name","value":"options"},"name":{"kind":"Name","value":"answerOptions"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"answerOptions_option_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"MultiselectPart"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"multiPartBlocks_multiselect_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}},{"kind":"Field","alias":{"kind":"Name","value":"options"},"name":{"kind":"Name","value":"answerOptions"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"answerOptions_option_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"NumberPart"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"multiPartBlocks_number_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}},{"kind":"Field","name":{"kind":"Name","value":"minimum"}},{"kind":"Field","name":{"kind":"Name","value":"maximum"}},{"kind":"Field","name":{"kind":"Name","value":"precision"}},{"kind":"Field","name":{"kind":"Name","value":"validation"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"validation_numberValidator_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ReadOnlyPart"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"multiPartBlocks_readonlyText_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}},{"kind":"Field","alias":{"kind":"Name","value":"text"},"name":{"kind":"Name","value":"questionText"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"MultipartQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"answerType"}},{"kind":"Field","alias":{"kind":"Name","value":"parts"},"name":{"kind":"Name","value":"multiPartBlocks"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"NeoBlockInterface"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SelectPart"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"MultiselectPart"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"NumberPart"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ReadOnlyPart"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"QuestionEntry"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"answerType"}},{"kind":"Field","name":{"kind":"Name","value":"questionText"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"CalculatorQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TabularQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"WidgetQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"NumberQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"MultipartQuestion"}},{"kind":"Field","alias":{"kind":"Name","value":"options"},"name":{"kind":"Name","value":"answerOptions"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"answerOptions_option_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"QuestionsBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_questionBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"questionEntries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"QuestionEntry"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"BarGraphToolBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_barGraphTool_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"yAxisMin"}},{"kind":"Field","name":{"kind":"Name","value":"yAxisMax"}},{"kind":"Field","name":{"kind":"Name","value":"yAxisLabel"}},{"kind":"Field","name":{"kind":"Name","value":"xAxisLabel"}},{"kind":"Field","name":{"kind":"Name","value":"graphBars"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"graphBars_bar_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"yValue"}},{"kind":"Field","name":{"kind":"Name","value":"label"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"FilterToolBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_filterTool_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"preSelectedColor"}},{"kind":"Field","name":{"kind":"Name","value":"readOnly"}},{"kind":"Field","name":{"kind":"Name","value":"widgetInstructions"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ReferenceBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_referenceBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"referenceEntries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"referenceContent_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"uri"}},{"kind":"Field","name":{"kind":"Name","value":"slug"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ColorFilterToolBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_colorFilterToolBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"colorFilterTool"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ColorFilterToolEntry"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"LightCurveQuestionData"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_supernovaDistanceDistribution_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"questionEntries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"questionWidgetsBlock"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionWidgetsBlock_lightCurveBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"lightCurveTool"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"widgets_lightCurveTool_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"dataset"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_supernovaGalaxyObservations_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"distance"}},{"kind":"Field","alias":{"kind":"Name","value":"lat"},"name":{"kind":"Name","value":"galacticLatitude"}},{"kind":"Field","alias":{"kind":"Name","value":"long"},"name":{"kind":"Name","value":"galacticLongitude"}}]}}]}}]}}]}}]}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"SupernovaDistanceDistributionBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_supernovaDistanceDistribution_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"instructions"},"name":{"kind":"Name","value":"widgetInstructions"}},{"kind":"Field","name":{"kind":"Name","value":"imageAlbum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"directUrlPreview"}},{"kind":"Field","name":{"kind":"Name","value":"directUrlOriginal"}}]}},{"kind":"Field","name":{"kind":"Name","value":"width"}},{"kind":"Field","name":{"kind":"Name","value":"height"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"json"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"step"},"name":{"kind":"Name","value":"binSize"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"LightCurveQuestionData"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"MagnitudeScatterPlotBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_magnitudeScatterPlot_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"lightCurveTool"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"widgets_lightCurveTool_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"dataset"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_supernovaGalaxyObservations_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","alias":{"kind":"Name","value":"peakMjd"},"name":{"kind":"Name","value":"mjd"}},{"kind":"Field","name":{"kind":"Name","value":"json"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"yMin"},"name":{"kind":"Name","value":"yAxisMin"}},{"kind":"Field","alias":{"kind":"Name","value":"yMax"},"name":{"kind":"Name","value":"yAxisMax"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"TwoColumnContainerBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_twoColumnContainer_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"columns"},"name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_colLeft_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"childblocks"},"name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TextBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ImageBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TableBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"VideoBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"QuestionsBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"BarGraphToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"FilterToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ReferenceBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ColorFilterToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SupernovaDistanceDistributionBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"MagnitudeScatterPlotBlock"}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_colRight_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"childblocks"},"name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TextBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ImageBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TableBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"VideoBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"QuestionsBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"BarGraphToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"FilterToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ReferenceBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ColorFilterToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SupernovaDistanceDistributionBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"MagnitudeScatterPlotBlock"}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"InteractionGroupContainerBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_group_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","alias":{"kind":"Name","value":"childBlocks"},"name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TextBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ImageBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"VideoBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TableBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"QuestionsBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"BarGraphToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"FilterToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ReferenceBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ColorFilterToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SupernovaDistanceDistributionBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"MagnitudeScatterPlotBlock"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"CameraFilterToolBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_cameraFilterTool_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"widgetInstructions"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"EquationBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_equation_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"latex"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ContentBlockFactory"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_NeoField"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TwoColumnContainerBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"InteractionGroupContainerBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TextBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ImageBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"VideoBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TableBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"QuestionsBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"BarGraphToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"FilterToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ReferenceBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ColorFilterToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"CameraFilterToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"EquationBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SupernovaDistanceDistributionBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"MagnitudeScatterPlotBlock"}}]}}]} as unknown as DocumentNode<InvestigationChildPageTemplateFragment, unknown>;
export const InvestigationLandingPageTemplateFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"InvestigationLandingPageTemplate"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"investigations_investigationParent_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"image"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"directUrlPreview"}},{"kind":"Field","name":{"kind":"Name","value":"directUrlOriginal"}},{"kind":"Field","name":{"kind":"Name","value":"PNG"}},{"kind":"Field","name":{"kind":"Name","value":"HighJPG"}},{"kind":"Field","name":{"kind":"Name","value":"LowJPG"}}]}},{"kind":"Field","name":{"kind":"Name","value":"width"}},{"kind":"Field","name":{"kind":"Name","value":"height"}},{"kind":"Field","alias":{"kind":"Name","value":"metadata"},"name":{"kind":"Name","value":"additional"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"AltTextEN"}},{"kind":"Field","name":{"kind":"Name","value":"AltTextES"}},{"kind":"Field","name":{"kind":"Name","value":"CaptionEN"}},{"kind":"Field","name":{"kind":"Name","value":"CaptionES"}},{"kind":"Field","name":{"kind":"Name","value":"Credit"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uri"}}]}}]}}]} as unknown as DocumentNode<InvestigationLandingPageTemplateFragment, unknown>;
export const InvestigationSectionBreakTemplateFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"InvestigationSectionBreakTemplate"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"investigations_investigationSectionBreakChild_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"text"}},{"kind":"Field","name":{"kind":"Name","value":"parent"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}},{"kind":"Field","name":{"kind":"Name","value":"next"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"section"},"value":{"kind":"StringValue","value":"investigations","block":false}},{"kind":"Argument","name":{"kind":"Name","value":"level"},"value":{"kind":"IntValue","value":"2"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"uri"}},{"kind":"Field","name":{"kind":"Name","value":"parent"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]}}]} as unknown as DocumentNode<InvestigationSectionBreakTemplateFragment, unknown>;
export const ReferenceContentTemplateFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ReferenceContentTemplate"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"referenceContent_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"contentBlocks"},"name":{"kind":"Name","value":"referenceContentBlocks"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"referenceContentBlocks_text_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"referenceContentBlocks_image_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"caption"}},{"kind":"Field","name":{"kind":"Name","value":"layout"}},{"kind":"Field","name":{"kind":"Name","value":"image"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"directUrlPreview"}},{"kind":"Field","name":{"kind":"Name","value":"directUrlOriginal"}},{"kind":"Field","name":{"kind":"Name","value":"PNG"}},{"kind":"Field","name":{"kind":"Name","value":"HighJPG"}},{"kind":"Field","name":{"kind":"Name","value":"LowJPG"}},{"kind":"Field","name":{"kind":"Name","value":"preview"}}]}},{"kind":"Field","name":{"kind":"Name","value":"width"}},{"kind":"Field","name":{"kind":"Name","value":"height"}},{"kind":"Field","alias":{"kind":"Name","value":"metadata"},"name":{"kind":"Name","value":"additional"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"AltTextEN"}},{"kind":"Field","name":{"kind":"Name","value":"AltTextES"}},{"kind":"Field","name":{"kind":"Name","value":"CaptionEN"}},{"kind":"Field","name":{"kind":"Name","value":"CaptionES"}},{"kind":"Field","name":{"kind":"Name","value":"Credit"}}]}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"referenceContentBlocks_table_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"caption"}},{"kind":"Field","name":{"kind":"Name","value":"contentHeading"}},{"kind":"Field","name":{"kind":"Name","value":"displayTable"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"displayTable_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"tableRow"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableRow_tableCell_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"cellContent"}}]}}]}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<ReferenceContentTemplateFragment, unknown>;
export const UserFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"UserFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"UserInterface"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"status"}}]}}]} as unknown as DocumentNode<UserFragmentFragment, unknown>;
export const AuthFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"AuthFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Auth"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"jwt"}},{"kind":"Field","name":{"kind":"Name","value":"jwtExpiresAt"}},{"kind":"Field","name":{"kind":"Name","value":"refreshToken"}},{"kind":"Field","name":{"kind":"Name","value":"refreshTokenExpiresAt"}},{"kind":"Field","name":{"kind":"Name","value":"user"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"UserFragment"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"UserFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"UserInterface"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"status"}}]}}]} as unknown as DocumentNode<AuthFragmentFragment, unknown>;
export const InvestigationChildPageDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"InvestigationChildPage"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"site"}},"type":{"kind":"ListType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"uri"}},"type":{"kind":"ListType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"entry"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"site"},"value":{"kind":"Variable","name":{"kind":"Name","value":"site"}}},{"kind":"Argument","name":{"kind":"Name","value":"uri"},"value":{"kind":"Variable","name":{"kind":"Name","value":"uri"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"InvestigationChildPageTemplate"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"InvestigationSectionBreakTemplate"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"TextBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_text_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ImageBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_image_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"caption"}},{"kind":"Field","name":{"kind":"Name","value":"layout"}},{"kind":"Field","name":{"kind":"Name","value":"image"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"directUrlPreview"}},{"kind":"Field","name":{"kind":"Name","value":"directUrlOriginal"}},{"kind":"Field","name":{"kind":"Name","value":"PNG"}},{"kind":"Field","name":{"kind":"Name","value":"HighJPG"}},{"kind":"Field","name":{"kind":"Name","value":"LowJPG"}},{"kind":"Field","name":{"kind":"Name","value":"preview"}}]}},{"kind":"Field","name":{"kind":"Name","value":"width"}},{"kind":"Field","name":{"kind":"Name","value":"height"}},{"kind":"Field","alias":{"kind":"Name","value":"metadata"},"name":{"kind":"Name","value":"additional"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"AltTextEN"}},{"kind":"Field","name":{"kind":"Name","value":"AltTextES"}},{"kind":"Field","name":{"kind":"Name","value":"CaptionEN"}},{"kind":"Field","name":{"kind":"Name","value":"CaptionES"}},{"kind":"Field","name":{"kind":"Name","value":"Credit"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"TableBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_table_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"caption"}},{"kind":"Field","name":{"kind":"Name","value":"contentHeading"}},{"kind":"Field","alias":{"kind":"Name","value":"header"},"name":{"kind":"Name","value":"tableHeader"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"headerRow"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"headerRow_tableCell_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"text"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}}]}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"rows"},"name":{"kind":"Name","value":"displayTable"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"displayTable_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"cells"},"name":{"kind":"Name","value":"tableRow"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableRow_tableCell_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"text"},"name":{"kind":"Name","value":"cellContent"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableRow_rowHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"text"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableRow_previousQuestion_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"question"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"answerType"}},{"kind":"Field","alias":{"kind":"Name","value":"rows"},"name":{"kind":"Name","value":"questionTable"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionTable_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"cells"},"name":{"kind":"Name","value":"tableCell"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_question_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"answerType"},"name":{"kind":"Name","value":"questionType"}},{"kind":"Field","name":{"kind":"Name","value":"options"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"options_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_static_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_rowHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"VideoBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_video_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"caption"}},{"kind":"Field","name":{"kind":"Name","value":"video"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"directUrlPreview"}},{"kind":"Field","name":{"kind":"Name","value":"directUrlPreviewPlay"}}]}},{"kind":"Field","name":{"kind":"Name","value":"width"}},{"kind":"Field","name":{"kind":"Name","value":"height"}},{"kind":"Field","alias":{"kind":"Name","value":"metadata"},"name":{"kind":"Name","value":"additional"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"CaptionEN"}},{"kind":"Field","name":{"kind":"Name","value":"CaptionES"}},{"kind":"Field","name":{"kind":"Name","value":"Credit"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"CalculatorQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"questionText"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"TableRows"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"header"},"name":{"kind":"Name","value":"tableHeader"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"headerRow"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"headerRow_tableCell_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"text"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}}]}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"rows"},"name":{"kind":"Name","value":"questionTable"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionTable_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"cells"},"name":{"kind":"Name","value":"tableCell"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_question_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"answerType"},"name":{"kind":"Name","value":"questionType"}},{"kind":"Field","name":{"kind":"Name","value":"options"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"options_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_static_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_rowHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_previousQuestion_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"question"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"answerType"}},{"kind":"Field","alias":{"kind":"Name","value":"rows"},"name":{"kind":"Name","value":"questionTable"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionTable_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"cells"},"name":{"kind":"Name","value":"tableCell"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_question_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"answerType"},"name":{"kind":"Name","value":"questionType"}},{"kind":"Field","name":{"kind":"Name","value":"options"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"options_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_static_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_rowHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"TabularQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"questionText"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TableRows"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ColorFilterToolEntry"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"widgets_colorFilterTool_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"filterToolActions"}},{"kind":"Field","alias":{"kind":"Name","value":"filterColorOptionsLabels"},"name":{"kind":"Name","value":"filterColorOptions"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"label"},"value":{"kind":"BooleanValue","value":true}}]},{"kind":"Field","alias":{"kind":"Name","value":"filterColorOptionsValues"},"name":{"kind":"Name","value":"filterColorOptions"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"label"},"value":{"kind":"BooleanValue","value":false}}]},{"kind":"Field","name":{"kind":"Name","value":"colorFilterToolObjects"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"colorFilterToolObjects_group_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"groupName"}},{"kind":"Field","alias":{"kind":"Name","value":"objects"},"name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"colorFilterToolObjects_object_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"name"},"name":{"kind":"Name","value":"objectName"}},{"kind":"Field","alias":{"kind":"Name","value":"caption"},"name":{"kind":"Name","value":"objectCaption"}},{"kind":"Field","alias":{"kind":"Name","value":"filterImages"},"name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"colorFilterToolObjects_filterimage_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"isEnabled"}},{"kind":"Field","name":{"kind":"Name","value":"isActive"}},{"kind":"Field","name":{"kind":"Name","value":"image"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"directUrlPreview"}}]}},{"kind":"Field","name":{"kind":"Name","value":"width"}},{"kind":"Field","name":{"kind":"Name","value":"height"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"max"},"name":{"kind":"Name","value":"colorToolMax"}},{"kind":"Field","alias":{"kind":"Name","value":"min"},"name":{"kind":"Name","value":"colorToolMin"}},{"kind":"Field","alias":{"kind":"Name","value":"defaultValue"},"name":{"kind":"Name","value":"colorToolDefaultValue"}},{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"filter"}},{"kind":"Field","alias":{"kind":"Name","value":"color"},"name":{"kind":"Name","value":"preSelectedColor"}}]}}]}}]}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ColorFilterToolQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionWidgetsBlock_colorFilterToolBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"colorFilterTool"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ColorFilterToolEntry"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"SourceSelectorQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionWidgetsBlock_sourceSelectorBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"sourceSelector"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"widgets_sourceSelector_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"includeScatterPlot"}},{"kind":"Field","alias":{"kind":"Name","value":"yMin"},"name":{"kind":"Name","value":"yAxisMin"}},{"kind":"Field","alias":{"kind":"Name","value":"yMax"},"name":{"kind":"Name","value":"yAxisMax"}},{"kind":"Field","name":{"kind":"Name","value":"dataset"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_supernovaGalaxyObservations_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"peakMjd"},"name":{"kind":"Name","value":"mjd"}},{"kind":"Field","alias":{"kind":"Name","value":"sources"},"name":{"kind":"Name","value":"alertSources"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"alertSources_source_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"color"}},{"kind":"Field","alias":{"kind":"Name","value":"x"},"name":{"kind":"Name","value":"xCoord"}},{"kind":"Field","alias":{"kind":"Name","value":"y"},"name":{"kind":"Name","value":"yCoord"}},{"kind":"Field","name":{"kind":"Name","value":"radius"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"sourceType"}},{"kind":"Field","alias":{"kind":"Name","value":"id"},"name":{"kind":"Name","value":"sourceName"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"json"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"imageAlbum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"directUrlPreview"}}]}}]}}]}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"LightCurveQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionWidgetsBlock_lightCurveBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"lightCurveTool"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"widgets_lightCurveTool_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"dataset"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_supernovaGalaxyObservations_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"peakMjd"},"name":{"kind":"Name","value":"mjd"}},{"kind":"Field","name":{"kind":"Name","value":"json"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"yMin"},"name":{"kind":"Name","value":"yAxisMin"}},{"kind":"Field","alias":{"kind":"Name","value":"yMax"},"name":{"kind":"Name","value":"yAxisMax"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"IsochronePlotQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionWidgetsBlock_isochronePlot_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"dataset"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_starCluster_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","alias":{"kind":"Name","value":"ageLibrary"},"name":{"kind":"Name","value":"json"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"plotPoints"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"yMin"},"name":{"kind":"Name","value":"yAxisMin"}},{"kind":"Field","alias":{"kind":"Name","value":"yMax"},"name":{"kind":"Name","value":"yAxisMax"}},{"kind":"Field","alias":{"kind":"Name","value":"xMin"},"name":{"kind":"Name","value":"xAxisMin"}},{"kind":"Field","alias":{"kind":"Name","value":"xMax"},"name":{"kind":"Name","value":"xAxisMax"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"WidgetQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"instructions"},"name":{"kind":"Name","value":"widgetInstructions"}},{"kind":"Field","name":{"kind":"Name","value":"questionWidgetsBlock"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ColorFilterToolQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SourceSelectorQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"LightCurveQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"IsochronePlotQuestion"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"NumberQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"questionText"}},{"kind":"Field","name":{"kind":"Name","value":"minimum"}},{"kind":"Field","name":{"kind":"Name","value":"maximum"}},{"kind":"Field","name":{"kind":"Name","value":"precision"}},{"kind":"Field","name":{"kind":"Name","value":"validation"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"validation_numberValidator_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"SelectPart"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"multiPartBlocks_select_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}},{"kind":"Field","alias":{"kind":"Name","value":"options"},"name":{"kind":"Name","value":"answerOptions"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"answerOptions_option_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"MultiselectPart"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"multiPartBlocks_multiselect_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}},{"kind":"Field","alias":{"kind":"Name","value":"options"},"name":{"kind":"Name","value":"answerOptions"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"answerOptions_option_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"NumberPart"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"multiPartBlocks_number_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}},{"kind":"Field","name":{"kind":"Name","value":"minimum"}},{"kind":"Field","name":{"kind":"Name","value":"maximum"}},{"kind":"Field","name":{"kind":"Name","value":"precision"}},{"kind":"Field","name":{"kind":"Name","value":"validation"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"validation_numberValidator_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ReadOnlyPart"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"multiPartBlocks_readonlyText_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}},{"kind":"Field","alias":{"kind":"Name","value":"text"},"name":{"kind":"Name","value":"questionText"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"MultipartQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"answerType"}},{"kind":"Field","alias":{"kind":"Name","value":"parts"},"name":{"kind":"Name","value":"multiPartBlocks"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"NeoBlockInterface"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SelectPart"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"MultiselectPart"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"NumberPart"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ReadOnlyPart"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"QuestionEntry"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"answerType"}},{"kind":"Field","name":{"kind":"Name","value":"questionText"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"CalculatorQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TabularQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"WidgetQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"NumberQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"MultipartQuestion"}},{"kind":"Field","alias":{"kind":"Name","value":"options"},"name":{"kind":"Name","value":"answerOptions"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"answerOptions_option_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"QuestionsBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_questionBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"questionEntries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"QuestionEntry"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"BarGraphToolBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_barGraphTool_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"yAxisMin"}},{"kind":"Field","name":{"kind":"Name","value":"yAxisMax"}},{"kind":"Field","name":{"kind":"Name","value":"yAxisLabel"}},{"kind":"Field","name":{"kind":"Name","value":"xAxisLabel"}},{"kind":"Field","name":{"kind":"Name","value":"graphBars"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"graphBars_bar_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"yValue"}},{"kind":"Field","name":{"kind":"Name","value":"label"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"FilterToolBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_filterTool_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"preSelectedColor"}},{"kind":"Field","name":{"kind":"Name","value":"readOnly"}},{"kind":"Field","name":{"kind":"Name","value":"widgetInstructions"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ReferenceBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_referenceBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"referenceEntries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"referenceContent_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"uri"}},{"kind":"Field","name":{"kind":"Name","value":"slug"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ColorFilterToolBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_colorFilterToolBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"colorFilterTool"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ColorFilterToolEntry"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"LightCurveQuestionData"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_supernovaDistanceDistribution_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"questionEntries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"questionWidgetsBlock"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionWidgetsBlock_lightCurveBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"lightCurveTool"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"widgets_lightCurveTool_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"dataset"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_supernovaGalaxyObservations_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"distance"}},{"kind":"Field","alias":{"kind":"Name","value":"lat"},"name":{"kind":"Name","value":"galacticLatitude"}},{"kind":"Field","alias":{"kind":"Name","value":"long"},"name":{"kind":"Name","value":"galacticLongitude"}}]}}]}}]}}]}}]}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"SupernovaDistanceDistributionBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_supernovaDistanceDistribution_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"instructions"},"name":{"kind":"Name","value":"widgetInstructions"}},{"kind":"Field","name":{"kind":"Name","value":"imageAlbum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"directUrlPreview"}},{"kind":"Field","name":{"kind":"Name","value":"directUrlOriginal"}}]}},{"kind":"Field","name":{"kind":"Name","value":"width"}},{"kind":"Field","name":{"kind":"Name","value":"height"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"json"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"step"},"name":{"kind":"Name","value":"binSize"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"LightCurveQuestionData"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"MagnitudeScatterPlotBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_magnitudeScatterPlot_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"lightCurveTool"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"widgets_lightCurveTool_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"dataset"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_supernovaGalaxyObservations_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","alias":{"kind":"Name","value":"peakMjd"},"name":{"kind":"Name","value":"mjd"}},{"kind":"Field","name":{"kind":"Name","value":"json"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"yMin"},"name":{"kind":"Name","value":"yAxisMin"}},{"kind":"Field","alias":{"kind":"Name","value":"yMax"},"name":{"kind":"Name","value":"yAxisMax"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"TwoColumnContainerBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_twoColumnContainer_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"columns"},"name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_colLeft_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"childblocks"},"name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TextBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ImageBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TableBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"VideoBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"QuestionsBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"BarGraphToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"FilterToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ReferenceBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ColorFilterToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SupernovaDistanceDistributionBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"MagnitudeScatterPlotBlock"}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_colRight_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"childblocks"},"name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TextBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ImageBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TableBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"VideoBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"QuestionsBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"BarGraphToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"FilterToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ReferenceBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ColorFilterToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SupernovaDistanceDistributionBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"MagnitudeScatterPlotBlock"}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"InteractionGroupContainerBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_group_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","alias":{"kind":"Name","value":"childBlocks"},"name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TextBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ImageBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"VideoBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TableBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"QuestionsBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"BarGraphToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"FilterToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ReferenceBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ColorFilterToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SupernovaDistanceDistributionBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"MagnitudeScatterPlotBlock"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"CameraFilterToolBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_cameraFilterTool_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"widgetInstructions"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"EquationBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_equation_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"latex"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ContentBlockFactory"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_NeoField"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TwoColumnContainerBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"InteractionGroupContainerBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TextBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ImageBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"VideoBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TableBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"QuestionsBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"BarGraphToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"FilterToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ReferenceBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ColorFilterToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"CameraFilterToolBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"EquationBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SupernovaDistanceDistributionBlock"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"MagnitudeScatterPlotBlock"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"InvestigationChildPageTemplate"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"investigations_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"contentBlocks"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ContentBlockFactory"}}]}},{"kind":"Field","name":{"kind":"Name","value":"hasSavePoint"}},{"kind":"Field","name":{"kind":"Name","value":"parent"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"InvestigationSectionBreakTemplate"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"investigations_investigationSectionBreakChild_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"text"}},{"kind":"Field","name":{"kind":"Name","value":"parent"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}},{"kind":"Field","name":{"kind":"Name","value":"next"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"section"},"value":{"kind":"StringValue","value":"investigations","block":false}},{"kind":"Argument","name":{"kind":"Name","value":"level"},"value":{"kind":"IntValue","value":"2"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"uri"}},{"kind":"Field","name":{"kind":"Name","value":"parent"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]}}]} as unknown as DocumentNode<InvestigationChildPageQuery, InvestigationChildPageQueryVariables>;
export const InvestigationPageParamsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"InvestigationPageParams"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"site"}},"type":{"kind":"ListType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"slug"}},"type":{"kind":"ListType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"entry"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"site"},"value":{"kind":"Variable","name":{"kind":"Name","value":"site"}}},{"kind":"Argument","name":{"kind":"Name","value":"slug"},"value":{"kind":"Variable","name":{"kind":"Name","value":"slug"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"investigations_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"slug"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"investigations_investigationSectionBreakChild_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"slug"}}]}}]}}]}}]}}]} as unknown as DocumentNode<InvestigationPageParamsQuery, InvestigationPageParamsQueryVariables>;
export const InvestigationChildPageMetadataDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"InvestigationChildPageMetadata"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"site"}},"type":{"kind":"ListType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"uri"}},"type":{"kind":"ListType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"entry"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"site"},"value":{"kind":"Variable","name":{"kind":"Name","value":"site"}}},{"kind":"Argument","name":{"kind":"Name","value":"uri"},"value":{"kind":"Variable","name":{"kind":"Name","value":"uri"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"title"}}]}}]}}]} as unknown as DocumentNode<InvestigationChildPageMetadataQuery, InvestigationChildPageMetadataQueryVariables>;
export const InvestigationMetadataDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"InvestigationMetadata"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"site"}},"type":{"kind":"ListType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"uri"}},"type":{"kind":"ListType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"entry"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"site"},"value":{"kind":"Variable","name":{"kind":"Name","value":"site"}}},{"kind":"Argument","name":{"kind":"Name","value":"uri"},"value":{"kind":"Variable","name":{"kind":"Name","value":"uri"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"investigations_investigationParent_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"title"}}]}}]}}]}}]} as unknown as DocumentNode<InvestigationMetadataQuery, InvestigationMetadataQueryVariables>;
export const InvestigationParamsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"InvestigationParams"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"site"}},"type":{"kind":"ListType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"investigationsEntries"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"site"},"value":{"kind":"Variable","name":{"kind":"Name","value":"site"}}},{"kind":"Argument","name":{"kind":"Name","value":"level"},"value":{"kind":"IntValue","value":"1"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"investigations_investigationParent_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"slug"}}]}}]}}]}}]} as unknown as DocumentNode<InvestigationParamsQuery, InvestigationParamsQueryVariables>;
export const InvestigationIdDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"InvestigationId"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"site"}},"type":{"kind":"ListType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"uri"}},"type":{"kind":"ListType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"entry"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"site"},"value":{"kind":"Variable","name":{"kind":"Name","value":"site"}}},{"kind":"Argument","name":{"kind":"Name","value":"uri"},"value":{"kind":"Variable","name":{"kind":"Name","value":"uri"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"investigations_investigationParent_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"acknowledgements"},"name":{"kind":"Name","value":"text"}},{"kind":"Field","name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"uri"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"investigations_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"hasSavePoint"}},{"kind":"Field","name":{"kind":"Name","value":"contentBlocks"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"QuestionsBlock"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_twoColumnContainer_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"columns"},"name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_colLeft_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"QuestionsBlock"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_group_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"group"},"name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"QuestionsBlock"}}]}}]}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_colRight_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"QuestionsBlock"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_group_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"group"},"name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_questionBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"questionEntries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"QuestionEntry"}}]}}]}}]}}]}}]}}]}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_group_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"group"},"name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"QuestionsBlock"}}]}}]}}]}}]}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"CalculatorQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"questionText"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"TableRows"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"header"},"name":{"kind":"Name","value":"tableHeader"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"headerRow"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"headerRow_tableCell_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"text"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}}]}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"rows"},"name":{"kind":"Name","value":"questionTable"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionTable_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"cells"},"name":{"kind":"Name","value":"tableCell"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_question_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"answerType"},"name":{"kind":"Name","value":"questionType"}},{"kind":"Field","name":{"kind":"Name","value":"options"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"options_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_static_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_rowHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_previousQuestion_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"question"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"answerType"}},{"kind":"Field","alias":{"kind":"Name","value":"rows"},"name":{"kind":"Name","value":"questionTable"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionTable_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"cells"},"name":{"kind":"Name","value":"tableCell"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_question_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"answerType"},"name":{"kind":"Name","value":"questionType"}},{"kind":"Field","name":{"kind":"Name","value":"options"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"options_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_static_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_rowHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"TabularQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"questionText"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TableRows"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ColorFilterToolEntry"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"widgets_colorFilterTool_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"filterToolActions"}},{"kind":"Field","alias":{"kind":"Name","value":"filterColorOptionsLabels"},"name":{"kind":"Name","value":"filterColorOptions"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"label"},"value":{"kind":"BooleanValue","value":true}}]},{"kind":"Field","alias":{"kind":"Name","value":"filterColorOptionsValues"},"name":{"kind":"Name","value":"filterColorOptions"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"label"},"value":{"kind":"BooleanValue","value":false}}]},{"kind":"Field","name":{"kind":"Name","value":"colorFilterToolObjects"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"colorFilterToolObjects_group_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"groupName"}},{"kind":"Field","alias":{"kind":"Name","value":"objects"},"name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"colorFilterToolObjects_object_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"name"},"name":{"kind":"Name","value":"objectName"}},{"kind":"Field","alias":{"kind":"Name","value":"caption"},"name":{"kind":"Name","value":"objectCaption"}},{"kind":"Field","alias":{"kind":"Name","value":"filterImages"},"name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"colorFilterToolObjects_filterimage_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"isEnabled"}},{"kind":"Field","name":{"kind":"Name","value":"isActive"}},{"kind":"Field","name":{"kind":"Name","value":"image"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"directUrlPreview"}}]}},{"kind":"Field","name":{"kind":"Name","value":"width"}},{"kind":"Field","name":{"kind":"Name","value":"height"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"max"},"name":{"kind":"Name","value":"colorToolMax"}},{"kind":"Field","alias":{"kind":"Name","value":"min"},"name":{"kind":"Name","value":"colorToolMin"}},{"kind":"Field","alias":{"kind":"Name","value":"defaultValue"},"name":{"kind":"Name","value":"colorToolDefaultValue"}},{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"filter"}},{"kind":"Field","alias":{"kind":"Name","value":"color"},"name":{"kind":"Name","value":"preSelectedColor"}}]}}]}}]}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ColorFilterToolQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionWidgetsBlock_colorFilterToolBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"colorFilterTool"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ColorFilterToolEntry"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"SourceSelectorQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionWidgetsBlock_sourceSelectorBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"sourceSelector"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"widgets_sourceSelector_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"includeScatterPlot"}},{"kind":"Field","alias":{"kind":"Name","value":"yMin"},"name":{"kind":"Name","value":"yAxisMin"}},{"kind":"Field","alias":{"kind":"Name","value":"yMax"},"name":{"kind":"Name","value":"yAxisMax"}},{"kind":"Field","name":{"kind":"Name","value":"dataset"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_supernovaGalaxyObservations_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"peakMjd"},"name":{"kind":"Name","value":"mjd"}},{"kind":"Field","alias":{"kind":"Name","value":"sources"},"name":{"kind":"Name","value":"alertSources"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"alertSources_source_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"color"}},{"kind":"Field","alias":{"kind":"Name","value":"x"},"name":{"kind":"Name","value":"xCoord"}},{"kind":"Field","alias":{"kind":"Name","value":"y"},"name":{"kind":"Name","value":"yCoord"}},{"kind":"Field","name":{"kind":"Name","value":"radius"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"sourceType"}},{"kind":"Field","alias":{"kind":"Name","value":"id"},"name":{"kind":"Name","value":"sourceName"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"json"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"imageAlbum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"directUrlPreview"}}]}}]}}]}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"LightCurveQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionWidgetsBlock_lightCurveBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"lightCurveTool"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"widgets_lightCurveTool_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"dataset"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_supernovaGalaxyObservations_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"peakMjd"},"name":{"kind":"Name","value":"mjd"}},{"kind":"Field","name":{"kind":"Name","value":"json"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"yMin"},"name":{"kind":"Name","value":"yAxisMin"}},{"kind":"Field","alias":{"kind":"Name","value":"yMax"},"name":{"kind":"Name","value":"yAxisMax"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"IsochronePlotQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionWidgetsBlock_isochronePlot_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"dataset"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_starCluster_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","alias":{"kind":"Name","value":"ageLibrary"},"name":{"kind":"Name","value":"json"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"plotPoints"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"yMin"},"name":{"kind":"Name","value":"yAxisMin"}},{"kind":"Field","alias":{"kind":"Name","value":"yMax"},"name":{"kind":"Name","value":"yAxisMax"}},{"kind":"Field","alias":{"kind":"Name","value":"xMin"},"name":{"kind":"Name","value":"xAxisMin"}},{"kind":"Field","alias":{"kind":"Name","value":"xMax"},"name":{"kind":"Name","value":"xAxisMax"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"WidgetQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"instructions"},"name":{"kind":"Name","value":"widgetInstructions"}},{"kind":"Field","name":{"kind":"Name","value":"questionWidgetsBlock"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ColorFilterToolQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SourceSelectorQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"LightCurveQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"IsochronePlotQuestion"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"NumberQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"questionText"}},{"kind":"Field","name":{"kind":"Name","value":"minimum"}},{"kind":"Field","name":{"kind":"Name","value":"maximum"}},{"kind":"Field","name":{"kind":"Name","value":"precision"}},{"kind":"Field","name":{"kind":"Name","value":"validation"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"validation_numberValidator_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"SelectPart"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"multiPartBlocks_select_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}},{"kind":"Field","alias":{"kind":"Name","value":"options"},"name":{"kind":"Name","value":"answerOptions"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"answerOptions_option_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"MultiselectPart"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"multiPartBlocks_multiselect_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}},{"kind":"Field","alias":{"kind":"Name","value":"options"},"name":{"kind":"Name","value":"answerOptions"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"answerOptions_option_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"NumberPart"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"multiPartBlocks_number_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}},{"kind":"Field","name":{"kind":"Name","value":"minimum"}},{"kind":"Field","name":{"kind":"Name","value":"maximum"}},{"kind":"Field","name":{"kind":"Name","value":"precision"}},{"kind":"Field","name":{"kind":"Name","value":"validation"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"validation_numberValidator_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ReadOnlyPart"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"multiPartBlocks_readonlyText_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}},{"kind":"Field","alias":{"kind":"Name","value":"text"},"name":{"kind":"Name","value":"questionText"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"MultipartQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"answerType"}},{"kind":"Field","alias":{"kind":"Name","value":"parts"},"name":{"kind":"Name","value":"multiPartBlocks"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"NeoBlockInterface"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SelectPart"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"MultiselectPart"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"NumberPart"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ReadOnlyPart"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"QuestionEntry"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"answerType"}},{"kind":"Field","name":{"kind":"Name","value":"questionText"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"CalculatorQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TabularQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"WidgetQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"NumberQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"MultipartQuestion"}},{"kind":"Field","alias":{"kind":"Name","value":"options"},"name":{"kind":"Name","value":"answerOptions"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"answerOptions_option_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"QuestionsBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_questionBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"questionEntries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"QuestionEntry"}}]}}]}}]} as unknown as DocumentNode<InvestigationIdQuery, InvestigationIdQueryVariables>;
export const InvestigationPageDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"InvestigationPage"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"site"}},"type":{"kind":"ListType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"uri"}},"type":{"kind":"ListType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"entry"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"site"},"value":{"kind":"Variable","name":{"kind":"Name","value":"site"}}},{"kind":"Argument","name":{"kind":"Name","value":"uri"},"value":{"kind":"Variable","name":{"kind":"Name","value":"uri"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"InvestigationLandingPageTemplate"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"InvestigationLandingPageTemplate"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"investigations_investigationParent_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"image"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"directUrlPreview"}},{"kind":"Field","name":{"kind":"Name","value":"directUrlOriginal"}},{"kind":"Field","name":{"kind":"Name","value":"PNG"}},{"kind":"Field","name":{"kind":"Name","value":"HighJPG"}},{"kind":"Field","name":{"kind":"Name","value":"LowJPG"}}]}},{"kind":"Field","name":{"kind":"Name","value":"width"}},{"kind":"Field","name":{"kind":"Name","value":"height"}},{"kind":"Field","alias":{"kind":"Name","value":"metadata"},"name":{"kind":"Name","value":"additional"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"AltTextEN"}},{"kind":"Field","name":{"kind":"Name","value":"AltTextES"}},{"kind":"Field","name":{"kind":"Name","value":"CaptionEN"}},{"kind":"Field","name":{"kind":"Name","value":"CaptionES"}},{"kind":"Field","name":{"kind":"Name","value":"Credit"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uri"}}]}}]}}]} as unknown as DocumentNode<InvestigationPageQuery, InvestigationPageQueryVariables>;
export const ReviewPageDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"ReviewPage"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"site"}},"type":{"kind":"ListType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"uri"}},"type":{"kind":"ListType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"entry"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"site"},"value":{"kind":"Variable","name":{"kind":"Name","value":"site"}}},{"kind":"Argument","name":{"kind":"Name","value":"uri"},"value":{"kind":"Variable","name":{"kind":"Name","value":"uri"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"investigations_investigationParent_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"investigations_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"contentBlocks"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"QuestionsBlock"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_twoColumnContainer_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"columns"},"name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_colLeft_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"QuestionsBlock"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_group_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"group"},"name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"QuestionsBlock"}}]}}]}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_colRight_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"QuestionsBlock"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_group_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"group"},"name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_questionBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"questionEntries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"QuestionEntry"}}]}}]}}]}}]}}]}}]}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_group_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"group"},"name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"QuestionsBlock"}}]}}]}}]}}]}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"CalculatorQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"questionText"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"TableRows"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"header"},"name":{"kind":"Name","value":"tableHeader"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"headerRow"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"headerRow_tableCell_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"text"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}}]}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"rows"},"name":{"kind":"Name","value":"questionTable"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionTable_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"cells"},"name":{"kind":"Name","value":"tableCell"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_question_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"answerType"},"name":{"kind":"Name","value":"questionType"}},{"kind":"Field","name":{"kind":"Name","value":"options"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"options_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_static_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_rowHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_previousQuestion_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"question"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"answerType"}},{"kind":"Field","alias":{"kind":"Name","value":"rows"},"name":{"kind":"Name","value":"questionTable"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionTable_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"cells"},"name":{"kind":"Name","value":"tableCell"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_question_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"answerType"},"name":{"kind":"Name","value":"questionType"}},{"kind":"Field","name":{"kind":"Name","value":"options"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"options_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_static_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableCell_rowHeader_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"equation"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"TabularQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"questionText"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TableRows"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ColorFilterToolEntry"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"widgets_colorFilterTool_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"filterToolActions"}},{"kind":"Field","alias":{"kind":"Name","value":"filterColorOptionsLabels"},"name":{"kind":"Name","value":"filterColorOptions"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"label"},"value":{"kind":"BooleanValue","value":true}}]},{"kind":"Field","alias":{"kind":"Name","value":"filterColorOptionsValues"},"name":{"kind":"Name","value":"filterColorOptions"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"label"},"value":{"kind":"BooleanValue","value":false}}]},{"kind":"Field","name":{"kind":"Name","value":"colorFilterToolObjects"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"colorFilterToolObjects_group_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"groupName"}},{"kind":"Field","alias":{"kind":"Name","value":"objects"},"name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"colorFilterToolObjects_object_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"name"},"name":{"kind":"Name","value":"objectName"}},{"kind":"Field","alias":{"kind":"Name","value":"caption"},"name":{"kind":"Name","value":"objectCaption"}},{"kind":"Field","alias":{"kind":"Name","value":"filterImages"},"name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"colorFilterToolObjects_filterimage_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"isEnabled"}},{"kind":"Field","name":{"kind":"Name","value":"isActive"}},{"kind":"Field","name":{"kind":"Name","value":"image"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"directUrlPreview"}}]}},{"kind":"Field","name":{"kind":"Name","value":"width"}},{"kind":"Field","name":{"kind":"Name","value":"height"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"max"},"name":{"kind":"Name","value":"colorToolMax"}},{"kind":"Field","alias":{"kind":"Name","value":"min"},"name":{"kind":"Name","value":"colorToolMin"}},{"kind":"Field","alias":{"kind":"Name","value":"defaultValue"},"name":{"kind":"Name","value":"colorToolDefaultValue"}},{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"filter"}},{"kind":"Field","alias":{"kind":"Name","value":"color"},"name":{"kind":"Name","value":"preSelectedColor"}}]}}]}}]}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ColorFilterToolQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionWidgetsBlock_colorFilterToolBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"colorFilterTool"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ColorFilterToolEntry"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"SourceSelectorQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionWidgetsBlock_sourceSelectorBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"sourceSelector"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"widgets_sourceSelector_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"includeScatterPlot"}},{"kind":"Field","alias":{"kind":"Name","value":"yMin"},"name":{"kind":"Name","value":"yAxisMin"}},{"kind":"Field","alias":{"kind":"Name","value":"yMax"},"name":{"kind":"Name","value":"yAxisMax"}},{"kind":"Field","name":{"kind":"Name","value":"dataset"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_supernovaGalaxyObservations_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"peakMjd"},"name":{"kind":"Name","value":"mjd"}},{"kind":"Field","alias":{"kind":"Name","value":"sources"},"name":{"kind":"Name","value":"alertSources"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"alertSources_source_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"color"}},{"kind":"Field","alias":{"kind":"Name","value":"x"},"name":{"kind":"Name","value":"xCoord"}},{"kind":"Field","alias":{"kind":"Name","value":"y"},"name":{"kind":"Name","value":"yCoord"}},{"kind":"Field","name":{"kind":"Name","value":"radius"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"sourceType"}},{"kind":"Field","alias":{"kind":"Name","value":"id"},"name":{"kind":"Name","value":"sourceName"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"json"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"imageAlbum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"directUrlPreview"}}]}}]}}]}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"LightCurveQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionWidgetsBlock_lightCurveBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"lightCurveTool"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"widgets_lightCurveTool_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"dataset"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_supernovaGalaxyObservations_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"peakMjd"},"name":{"kind":"Name","value":"mjd"}},{"kind":"Field","name":{"kind":"Name","value":"json"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"yMin"},"name":{"kind":"Name","value":"yAxisMin"}},{"kind":"Field","alias":{"kind":"Name","value":"yMax"},"name":{"kind":"Name","value":"yAxisMax"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"IsochronePlotQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questionWidgetsBlock_isochronePlot_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"dataset"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_starCluster_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","alias":{"kind":"Name","value":"ageLibrary"},"name":{"kind":"Name","value":"json"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"plotPoints"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"datasets_Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"yMin"},"name":{"kind":"Name","value":"yAxisMin"}},{"kind":"Field","alias":{"kind":"Name","value":"yMax"},"name":{"kind":"Name","value":"yAxisMax"}},{"kind":"Field","alias":{"kind":"Name","value":"xMin"},"name":{"kind":"Name","value":"xAxisMin"}},{"kind":"Field","alias":{"kind":"Name","value":"xMax"},"name":{"kind":"Name","value":"xAxisMax"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"WidgetQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"instructions"},"name":{"kind":"Name","value":"widgetInstructions"}},{"kind":"Field","name":{"kind":"Name","value":"questionWidgetsBlock"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ColorFilterToolQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SourceSelectorQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"LightCurveQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"IsochronePlotQuestion"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"NumberQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"questionText"}},{"kind":"Field","name":{"kind":"Name","value":"minimum"}},{"kind":"Field","name":{"kind":"Name","value":"maximum"}},{"kind":"Field","name":{"kind":"Name","value":"precision"}},{"kind":"Field","name":{"kind":"Name","value":"validation"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"validation_numberValidator_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"SelectPart"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"multiPartBlocks_select_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}},{"kind":"Field","alias":{"kind":"Name","value":"options"},"name":{"kind":"Name","value":"answerOptions"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"answerOptions_option_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"MultiselectPart"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"multiPartBlocks_multiselect_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}},{"kind":"Field","alias":{"kind":"Name","value":"options"},"name":{"kind":"Name","value":"answerOptions"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"answerOptions_option_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"NumberPart"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"multiPartBlocks_number_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}},{"kind":"Field","name":{"kind":"Name","value":"minimum"}},{"kind":"Field","name":{"kind":"Name","value":"maximum"}},{"kind":"Field","name":{"kind":"Name","value":"precision"}},{"kind":"Field","name":{"kind":"Name","value":"validation"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"validation_numberValidator_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ReadOnlyPart"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"multiPartBlocks_readonlyText_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}},{"kind":"Field","alias":{"kind":"Name","value":"text"},"name":{"kind":"Name","value":"questionText"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"MultipartQuestion"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"answerType"}},{"kind":"Field","alias":{"kind":"Name","value":"parts"},"name":{"kind":"Name","value":"multiPartBlocks"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"NeoBlockInterface"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"type"},"name":{"kind":"Name","value":"typeHandle"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SelectPart"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"MultiselectPart"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"NumberPart"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ReadOnlyPart"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"QuestionEntry"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"answerType"}},{"kind":"Field","name":{"kind":"Name","value":"questionText"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"CalculatorQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TabularQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"WidgetQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"NumberQuestion"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"MultipartQuestion"}},{"kind":"Field","alias":{"kind":"Name","value":"options"},"name":{"kind":"Name","value":"answerOptions"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"answerOptions_option_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"label"},"name":{"kind":"Name","value":"optionLabel"}},{"kind":"Field","alias":{"kind":"Name","value":"value"},"name":{"kind":"Name","value":"optionValue"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"QuestionsBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"contentBlocks_questionBlock_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"questionEntries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"QuestionEntry"}}]}}]}}]} as unknown as DocumentNode<ReviewPageQuery, ReviewPageQueryVariables>;
export const GlobalsQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GlobalsQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"site"}},"type":{"kind":"ListType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"siteInfo"},"name":{"kind":"Name","value":"globalSet"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"site"},"value":{"kind":"Variable","name":{"kind":"Name","value":"site"}}},{"kind":"Argument","name":{"kind":"Name","value":"handle"},"value":{"kind":"StringValue","value":"siteInfo","block":false}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"siteInfo_GlobalSet"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"language"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"handle"}},{"kind":"Field","name":{"kind":"Name","value":"siteTitle"}},{"kind":"Field","name":{"kind":"Name","value":"siteDescription"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"menuContent"},"name":{"kind":"Name","value":"globalSet"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"site"},"value":{"kind":"Variable","name":{"kind":"Name","value":"site"}}},{"kind":"Argument","name":{"kind":"Name","value":"handle"},"value":{"kind":"StringValue","value":"menuContent","block":false}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"menuContent_GlobalSet"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"helpUrl"}}]}}]}}]}}]} as unknown as DocumentNode<GlobalsQueryQuery, GlobalsQueryQueryVariables>;
export const HomepageQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"HomepageQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"site"}},"type":{"kind":"ListType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"uri"}},"type":{"kind":"ListType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"entry"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"site"},"value":{"kind":"Variable","name":{"kind":"Name","value":"site"}}},{"kind":"Argument","name":{"kind":"Name","value":"uri"},"value":{"kind":"Variable","name":{"kind":"Name","value":"uri"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"HomepageTemplate"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"InvestigationGridBlock"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"homepageContentBlocks_investigationGrid_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"heading"},"name":{"kind":"Name","value":"contentHeading"}},{"kind":"Field","alias":{"kind":"Name","value":"investigations"},"name":{"kind":"Name","value":"investigationEntries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"investigations_investigationParent_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","alias":{"kind":"Name","value":"rawImage"},"name":{"kind":"Name","value":"image"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"directUrlPreview"}},{"kind":"Field","name":{"kind":"Name","value":"directUrlOriginal"}},{"kind":"Field","name":{"kind":"Name","value":"PNG"}},{"kind":"Field","name":{"kind":"Name","value":"HighJPG"}},{"kind":"Field","name":{"kind":"Name","value":"LowJPG"}}]}},{"kind":"Field","name":{"kind":"Name","value":"width"}},{"kind":"Field","name":{"kind":"Name","value":"height"}},{"kind":"Field","alias":{"kind":"Name","value":"metadata"},"name":{"kind":"Name","value":"additional"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"AltTextEN"}},{"kind":"Field","name":{"kind":"Name","value":"AltTextES"}},{"kind":"Field","name":{"kind":"Name","value":"CaptionEN"}},{"kind":"Field","name":{"kind":"Name","value":"CaptionES"}},{"kind":"Field","name":{"kind":"Name","value":"Credit"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"url"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"HomepageTemplate"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"homepage_homepage_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","alias":{"kind":"Name","value":"contentBlocks"},"name":{"kind":"Name","value":"homepageContentBlocks"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"homepageContentBlocks_text_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"homepageContentBlocks_image_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"caption"}},{"kind":"Field","name":{"kind":"Name","value":"layout"}},{"kind":"Field","name":{"kind":"Name","value":"image"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"directUrlPreview"}},{"kind":"Field","name":{"kind":"Name","value":"directUrlOriginal"}},{"kind":"Field","name":{"kind":"Name","value":"PNG"}},{"kind":"Field","name":{"kind":"Name","value":"HighJPG"}},{"kind":"Field","name":{"kind":"Name","value":"LowJPG"}},{"kind":"Field","name":{"kind":"Name","value":"preview"}}]}},{"kind":"Field","name":{"kind":"Name","value":"width"}},{"kind":"Field","name":{"kind":"Name","value":"height"}},{"kind":"Field","alias":{"kind":"Name","value":"metadata"},"name":{"kind":"Name","value":"additional"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"AltTextEN"}},{"kind":"Field","name":{"kind":"Name","value":"AltTextES"}},{"kind":"Field","name":{"kind":"Name","value":"CaptionEN"}},{"kind":"Field","name":{"kind":"Name","value":"CaptionES"}},{"kind":"Field","name":{"kind":"Name","value":"Credit"}}]}}]}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"InvestigationGridBlock"}}]}}]}}]} as unknown as DocumentNode<HomepageQueryQuery, HomepageQueryQueryVariables>;
export const ReferenceContentDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"ReferenceContent"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"site"}},"type":{"kind":"ListType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"slug"}},"type":{"kind":"ListType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"entry"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"site"},"value":{"kind":"Variable","name":{"kind":"Name","value":"site"}}},{"kind":"Argument","name":{"kind":"Name","value":"slug"},"value":{"kind":"Variable","name":{"kind":"Name","value":"slug"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ReferenceContentTemplate"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ReferenceContentTemplate"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"referenceContent_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"contentBlocks"},"name":{"kind":"Name","value":"referenceContentBlocks"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"referenceContentBlocks_text_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"referenceContentBlocks_image_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"caption"}},{"kind":"Field","name":{"kind":"Name","value":"layout"}},{"kind":"Field","name":{"kind":"Name","value":"image"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"directUrlPreview"}},{"kind":"Field","name":{"kind":"Name","value":"directUrlOriginal"}},{"kind":"Field","name":{"kind":"Name","value":"PNG"}},{"kind":"Field","name":{"kind":"Name","value":"HighJPG"}},{"kind":"Field","name":{"kind":"Name","value":"LowJPG"}},{"kind":"Field","name":{"kind":"Name","value":"preview"}}]}},{"kind":"Field","name":{"kind":"Name","value":"width"}},{"kind":"Field","name":{"kind":"Name","value":"height"}},{"kind":"Field","alias":{"kind":"Name","value":"metadata"},"name":{"kind":"Name","value":"additional"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"AltTextEN"}},{"kind":"Field","name":{"kind":"Name","value":"AltTextES"}},{"kind":"Field","name":{"kind":"Name","value":"CaptionEN"}},{"kind":"Field","name":{"kind":"Name","value":"CaptionES"}},{"kind":"Field","name":{"kind":"Name","value":"Credit"}}]}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"referenceContentBlocks_table_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"caption"}},{"kind":"Field","name":{"kind":"Name","value":"contentHeading"}},{"kind":"Field","name":{"kind":"Name","value":"displayTable"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"displayTable_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"tableRow"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"tableRow_tableCell_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"cellContent"}}]}}]}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<ReferenceContentQuery, ReferenceContentQueryVariables>;
export const ReferenceParamsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"ReferenceParams"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"site"}},"type":{"kind":"ListType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"referenceContentEntries"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"site"},"value":{"kind":"Variable","name":{"kind":"Name","value":"site"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"referenceContent_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"slug"}}]}}]}}]}}]} as unknown as DocumentNode<ReferenceParamsQuery, ReferenceParamsQueryVariables>;
export const PagePreviewQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"PagePreviewQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"site"}},"type":{"kind":"ListType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"uri"}},"type":{"kind":"ListType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"entry"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"site"},"value":{"kind":"Variable","name":{"kind":"Name","value":"site"}}},{"kind":"Argument","name":{"kind":"Name","value":"uri"},"value":{"kind":"Variable","name":{"kind":"Name","value":"uri"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"uri"}},{"kind":"Field","name":{"kind":"Name","value":"title"}}]}}]}}]} as unknown as DocumentNode<PagePreviewQueryQuery, PagePreviewQueryQueryVariables>;
export const FacebookOauthUrlDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"FacebookOauthUrl"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"facebookOauthUrl"}}]}}]} as unknown as DocumentNode<FacebookOauthUrlQuery, FacebookOauthUrlQueryVariables>;
export const GoogleSignInStudentDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"GoogleSignInStudent"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"idToken"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"googleSignInStudents"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"idToken"},"value":{"kind":"Variable","name":{"kind":"Name","value":"idToken"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"AuthFragment"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"UserFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"UserInterface"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"status"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"AuthFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Auth"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"jwt"}},{"kind":"Field","name":{"kind":"Name","value":"jwtExpiresAt"}},{"kind":"Field","name":{"kind":"Name","value":"refreshToken"}},{"kind":"Field","name":{"kind":"Name","value":"refreshTokenExpiresAt"}},{"kind":"Field","name":{"kind":"Name","value":"user"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"UserFragment"}}]}}]}}]} as unknown as DocumentNode<GoogleSignInStudentMutation, GoogleSignInStudentMutationVariables>;
export const GoogleSignInEducatorDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"GoogleSignInEducator"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"idToken"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"googleSignInEducators"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"idToken"},"value":{"kind":"Variable","name":{"kind":"Name","value":"idToken"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"AuthFragment"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"UserFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"UserInterface"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"status"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"AuthFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Auth"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"jwt"}},{"kind":"Field","name":{"kind":"Name","value":"jwtExpiresAt"}},{"kind":"Field","name":{"kind":"Name","value":"refreshToken"}},{"kind":"Field","name":{"kind":"Name","value":"refreshTokenExpiresAt"}},{"kind":"Field","name":{"kind":"Name","value":"user"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"UserFragment"}}]}}]}}]} as unknown as DocumentNode<GoogleSignInEducatorMutation, GoogleSignInEducatorMutationVariables>;
export const ActivateUserDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"ActivateUser"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"code"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"activateUser"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"code"},"value":{"kind":"Variable","name":{"kind":"Name","value":"code"}}},{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}]}]}}]} as unknown as DocumentNode<ActivateUserMutation, ActivateUserMutationVariables>;
export const ForgottenPasswordDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"ForgottenPassword"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"email"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"forgottenPassword"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"email"},"value":{"kind":"Variable","name":{"kind":"Name","value":"email"}}}]}]}}]} as unknown as DocumentNode<ForgottenPasswordMutation, ForgottenPasswordMutationVariables>;
export const FacebookSignInStudentDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"FacebookSignInStudent"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"code"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"facebookSignInStudents"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"code"},"value":{"kind":"Variable","name":{"kind":"Name","value":"code"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"AuthFragment"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"UserFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"UserInterface"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"status"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"AuthFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Auth"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"jwt"}},{"kind":"Field","name":{"kind":"Name","value":"jwtExpiresAt"}},{"kind":"Field","name":{"kind":"Name","value":"refreshToken"}},{"kind":"Field","name":{"kind":"Name","value":"refreshTokenExpiresAt"}},{"kind":"Field","name":{"kind":"Name","value":"user"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"UserFragment"}}]}}]}}]} as unknown as DocumentNode<FacebookSignInStudentMutation, FacebookSignInStudentMutationVariables>;
export const FacebookSignInEducatorDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"FacebookSignInEducator"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"code"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"facebookSignInEducators"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"code"},"value":{"kind":"Variable","name":{"kind":"Name","value":"code"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"AuthFragment"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"UserFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"UserInterface"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"status"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"AuthFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Auth"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"jwt"}},{"kind":"Field","name":{"kind":"Name","value":"jwtExpiresAt"}},{"kind":"Field","name":{"kind":"Name","value":"refreshToken"}},{"kind":"Field","name":{"kind":"Name","value":"refreshTokenExpiresAt"}},{"kind":"Field","name":{"kind":"Name","value":"user"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"UserFragment"}}]}}]}}]} as unknown as DocumentNode<FacebookSignInEducatorMutation, FacebookSignInEducatorMutationVariables>;
export const RegisterEducatorDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"RegisterEducator"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"email"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"password"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"fullName"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"registerEducators"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"email"},"value":{"kind":"Variable","name":{"kind":"Name","value":"email"}}},{"kind":"Argument","name":{"kind":"Name","value":"password"},"value":{"kind":"Variable","name":{"kind":"Name","value":"password"}}},{"kind":"Argument","name":{"kind":"Name","value":"fullName"},"value":{"kind":"Variable","name":{"kind":"Name","value":"fullName"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"AuthFragment"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"UserFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"UserInterface"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"status"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"AuthFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Auth"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"jwt"}},{"kind":"Field","name":{"kind":"Name","value":"jwtExpiresAt"}},{"kind":"Field","name":{"kind":"Name","value":"refreshToken"}},{"kind":"Field","name":{"kind":"Name","value":"refreshTokenExpiresAt"}},{"kind":"Field","name":{"kind":"Name","value":"user"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"UserFragment"}}]}}]}}]} as unknown as DocumentNode<RegisterEducatorMutation, RegisterEducatorMutationVariables>;
export const RegisterStudentDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"RegisterStudent"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"email"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"password"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"fullName"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"registerStudents"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"email"},"value":{"kind":"Variable","name":{"kind":"Name","value":"email"}}},{"kind":"Argument","name":{"kind":"Name","value":"password"},"value":{"kind":"Variable","name":{"kind":"Name","value":"password"}}},{"kind":"Argument","name":{"kind":"Name","value":"fullName"},"value":{"kind":"Variable","name":{"kind":"Name","value":"fullName"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"AuthFragment"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"UserFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"UserInterface"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"status"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"AuthFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Auth"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"jwt"}},{"kind":"Field","name":{"kind":"Name","value":"jwtExpiresAt"}},{"kind":"Field","name":{"kind":"Name","value":"refreshToken"}},{"kind":"Field","name":{"kind":"Name","value":"refreshTokenExpiresAt"}},{"kind":"Field","name":{"kind":"Name","value":"user"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"UserFragment"}}]}}]}}]} as unknown as DocumentNode<RegisterStudentMutation, RegisterStudentMutationVariables>;
export const QuestionValidationDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"QuestionValidation"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"site"}},"type":{"kind":"ListType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"ListType","type":{"kind":"NamedType","name":{"kind":"Name","value":"QueryArgument"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"entry"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"site"},"value":{"kind":"Variable","name":{"kind":"Name","value":"site"}}},{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"questions_default_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"validation"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"validation_numberValidator_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"comparison"}},{"kind":"Field","name":{"kind":"Name","value":"operator"}},{"kind":"Field","name":{"kind":"Name","value":"message"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"multiPartBlocks"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"multiPartBlocks_number_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"validation"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"validation_numberValidator_BlockType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"comparison"}},{"kind":"Field","name":{"kind":"Name","value":"operator"}},{"kind":"Field","name":{"kind":"Name","value":"message"}}]}}]}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<QuestionValidationQuery, QuestionValidationQueryVariables>;
export const ResendActivationDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"ResendActivation"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"email"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"resendActivation"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"email"},"value":{"kind":"Variable","name":{"kind":"Name","value":"email"}}}]}]}}]} as unknown as DocumentNode<ResendActivationMutation, ResendActivationMutationVariables>;
export const SetPasswordDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"SetPassword"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"password"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"code"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"setPassword"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"password"},"value":{"kind":"Variable","name":{"kind":"Name","value":"password"}}},{"kind":"Argument","name":{"kind":"Name","value":"code"},"value":{"kind":"Variable","name":{"kind":"Name","value":"code"}}},{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}]}]}}]} as unknown as DocumentNode<SetPasswordMutation, SetPasswordMutationVariables>;
export const AuthenticateDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"Authenticate"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"email"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"password"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"authenticate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"email"},"value":{"kind":"Variable","name":{"kind":"Name","value":"email"}}},{"kind":"Argument","name":{"kind":"Name","value":"password"},"value":{"kind":"Variable","name":{"kind":"Name","value":"password"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"AuthFragment"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"UserFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"UserInterface"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"status"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"AuthFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Auth"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"jwt"}},{"kind":"Field","name":{"kind":"Name","value":"jwtExpiresAt"}},{"kind":"Field","name":{"kind":"Name","value":"refreshToken"}},{"kind":"Field","name":{"kind":"Name","value":"refreshTokenExpiresAt"}},{"kind":"Field","name":{"kind":"Name","value":"user"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"UserFragment"}}]}}]}}]} as unknown as DocumentNode<AuthenticateMutation, AuthenticateMutationVariables>;
export const RefreshTokenDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"RefreshToken"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"refreshToken"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"refreshToken"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"refreshToken"},"value":{"kind":"Variable","name":{"kind":"Name","value":"refreshToken"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"AuthFragment"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"UserFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"UserInterface"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"status"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"AuthFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Auth"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"jwt"}},{"kind":"Field","name":{"kind":"Name","value":"jwtExpiresAt"}},{"kind":"Field","name":{"kind":"Name","value":"refreshToken"}},{"kind":"Field","name":{"kind":"Name","value":"refreshTokenExpiresAt"}},{"kind":"Field","name":{"kind":"Name","value":"user"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"UserFragment"}}]}}]}}]} as unknown as DocumentNode<RefreshTokenMutation, RefreshTokenMutationVariables>;
export const DeleteRefreshTokenDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"DeleteRefreshToken"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"refreshToken"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"deleteRefreshToken"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"refreshToken"},"value":{"kind":"Variable","name":{"kind":"Name","value":"refreshToken"}}}]}]}}]} as unknown as DocumentNode<DeleteRefreshTokenMutation, DeleteRefreshTokenMutationVariables>;